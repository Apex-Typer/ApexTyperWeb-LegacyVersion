{"ast":null,"code":"import _taggedTemplateLiteral from\"D:/APEX_TYPER/apex_typer_5.0/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2;import React,{useState,useEffect,useRef}from\"react\";import{useSelector,useDispatch}from\"react-redux\";import styled from\"styled-components\";import Controls from\"./Controls\";import Test from\"./Test\";import TestResult from\"./TestResult\";import{BrowserView}from\"react-device-detect\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Home(){var showResult=useSelector(function(state){return state.showResult;});var testOn=useSelector(function(state){return state.testOn;});var inputFocused=useSelector(function(state){return state.inputFocused;});return/*#__PURE__*/_jsxs(Container,{id:\"HomeSection\",children:[/*#__PURE__*/_jsx(Controls,{}),showResult?/*#__PURE__*/_jsx(TestResult,{}):/*#__PURE__*/_jsx(Test,{}),/*#__PURE__*/_jsx(BrowserView,{children:/*#__PURE__*/_jsx(DiaologBox,{testOn:testOn,inputFocused:inputFocused,showResult:showResult,children:\"shift/ctrl + space/enter - restart\"})})]});}export default Home;var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  min-height: calc(100vh - 150px);\\n  position: relative;\\n  /* border: 1px solid white; */\\n\\n  @media (max-width: 639px) {\\n    min-height: calc(100vh - 180px);\\n  }\\n\\n  &:focus {\\n    outline: none;\\n  }\\n\"])));var DiaologBox=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  width: 100%;\\n  display: flex;\\n  /* padding: 30px 0 0; */\\n  bottom: 30px;\\n  /* border: 1px solid; */\\n  justify-content: center;\\n  color: \",\";\\n  font-size: 1rem;\\n  transition: color 200ms ease-in-out;\\n\"])),function(props){return props.testOn&&props.inputFocused&&!props.showResult?\"transparent\":\"rgba(255, 255, 255, 0.15)\";});","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/components/Home.js"],"names":["React","useState","useEffect","useRef","useSelector","useDispatch","styled","Controls","Test","TestResult","BrowserView","Home","showResult","state","testOn","inputFocused","Container","div","DiaologBox","props"],"mappings":"uKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,MAArC,KAAmD,OAAnD,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,MAAP,KAAmB,mBAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,WAAT,KAA4B,qBAA5B,C,wFAEA,QAASC,CAAAA,IAAT,EAAgB,CACd,GAAMC,CAAAA,UAAU,CAAGR,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACD,UAAjB,EAAD,CAA9B,CACA,GAAME,CAAAA,MAAM,CAAGV,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACC,MAAjB,EAAD,CAA1B,CACA,GAAMC,CAAAA,YAAY,CAAGX,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACE,YAAjB,EAAD,CAAhC,CAEA,mBACE,MAAC,SAAD,EAAW,EAAE,CAAC,aAAd,wBACE,KAAC,QAAD,IADF,CAEGH,UAAU,cAAG,KAAC,UAAD,IAAH,cAAoB,KAAC,IAAD,IAFjC,cAGE,KAAC,WAAD,wBACE,KAAC,UAAD,EACE,MAAM,CAAEE,MADV,CAEE,YAAY,CAAEC,YAFhB,CAGE,UAAU,CAAEH,UAHd,gDADF,EAHF,GADF,CAeD,CAED,cAAeD,CAAAA,IAAf,CAEA,GAAMK,CAAAA,SAAS,CAAGV,MAAM,CAACW,GAAV,oRAAf,CAcA,GAAMC,CAAAA,UAAU,CAAGZ,MAAM,CAACW,GAAV,8SAQL,SAACE,KAAD,QACPA,CAAAA,KAAK,CAACL,MAAN,EAAgBK,KAAK,CAACJ,YAAtB,EAAsC,CAACI,KAAK,CAACP,UAA7C,CACI,aADJ,CAEI,2BAHG,EARK,CAAhB","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport Controls from \"./Controls\";\r\nimport Test from \"./Test\";\r\nimport TestResult from \"./TestResult\";\r\nimport { BrowserView } from \"react-device-detect\";\r\n\r\nfunction Home() {\r\n  const showResult = useSelector((state) => state.showResult);\r\n  const testOn = useSelector((state) => state.testOn);\r\n  const inputFocused = useSelector((state) => state.inputFocused);\r\n\r\n  return (\r\n    <Container id=\"HomeSection\">\r\n      <Controls />\r\n      {showResult ? <TestResult /> : <Test />}\r\n      <BrowserView>\r\n        <DiaologBox\r\n          testOn={testOn}\r\n          inputFocused={inputFocused}\r\n          showResult={showResult}\r\n        >\r\n          shift/ctrl + space/enter - restart\r\n        </DiaologBox>\r\n      </BrowserView>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\nconst Container = styled.div`\r\n  min-height: calc(100vh - 150px);\r\n  position: relative;\r\n  /* border: 1px solid white; */\r\n\r\n  @media (max-width: 639px) {\r\n    min-height: calc(100vh - 180px);\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst DiaologBox = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  display: flex;\r\n  /* padding: 30px 0 0; */\r\n  bottom: 30px;\r\n  /* border: 1px solid; */\r\n  justify-content: center;\r\n  color: ${(props) =>\r\n    props.testOn && props.inputFocused && !props.showResult\r\n      ? \"transparent\"\r\n      : \"rgba(255, 255, 255, 0.15)\"};\r\n  font-size: 1rem;\r\n  transition: color 200ms ease-in-out;\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}