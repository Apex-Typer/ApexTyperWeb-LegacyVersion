{"ast":null,"code":"var _jsxFileName = \"D:\\\\APEX_TYPER\\\\apex_typer_5.0\\\\src\\\\components\\\\Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, forwardRef } from \"react\";\nimport styled from \"styled-components\";\nimport words from \"./wordsData\";\nimport TextInput from \"./TextInput\";\nimport { Fade } from \"react-reveal\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { newWords, evaluateWords, blurInput, focusInput, confirmWord, firstWord, resetWord, inactivateCurrentWord, resetInput, resetInputLog, resetTest } from \"../state/action-creators/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  const dispatch = useDispatch();\n  const [wordsRendered, setWordsRendered] = useState(false);\n  const testWords = useSelector(state => state.testWords);\n  const currentWord = useSelector(state => state.currentWord);\n  const inputFocused = useSelector(state => state.inputFocused);\n  const enteredWord = useSelector(state => state.enteredWord);\n  const testRef = useRef(null);\n\n  function loadWords() {\n    dispatch(newWords());\n    setWordsRendered(true);\n  }\n\n  useEffect(() => {\n    loadWords();\n  }, []);\n  useEffect(() => {\n    if (currentWord.key != 0) {\n      dispatch(confirmWord(currentWord));\n    } else {\n      if (wordsRendered) {\n        dispatch(firstWord(testWords.rawWords));\n        dispatch(focusInput());\n        dispatch(resetInput());\n        dispatch(resetInputLog());\n      }\n    }\n  }, [testWords]);\n\n  function handleClickOutside(e) {\n    if (testRef.current && !testRef.current.contains(e.target)) {\n      dispatch(blurInput());\n    } else {\n      dispatch(blurInput());\n      dispatch(focusInput());\n    }\n  }\n\n  function handleKeyDown(e) {\n    if (!inputFocused && !e.target.matches(\"#custom-time-input, #custom-time-input *\")) {\n      dispatch(focusInput());\n    }\n\n    if (e.key == \"Alt\" && inputFocused) {\n      dispatch(blurInput());\n    }\n\n    if (e.key == \"Tab\") {\n      e.preventDefault();\n    }\n\n    if ((e.shiftKey || e.ctrlKey) && (e.code == \"Enter\" || e.keyCode == 32)) {\n      resetTest(dispatch);\n    }\n  }\n\n  function handleResize() {\n    dispatch(blurInput());\n    dispatch(focusInput());\n  }\n\n  useEffect(() => {\n    if (!inputFocused && currentWord.key > 0) {\n      dispatch(inactivateCurrentWord(currentWord, enteredWord));\n      dispatch(confirmWord(currentWord));\n    } else if (inputFocused && currentWord.key > 0) {\n      update;\n      dispatch(confirmWord(currentWord));\n    }\n  }, [inputFocused]);\n  useEffect(() => {// document.addEventListener(\"mousedown\", handleClickOutside, true);\n    // document.addEventListener(\"mouseup\", handleClickOutside, true);\n    // document.addEventListener(\"keydown\", handleKeyDown, true);\n    // window.addEventListener(\"resize\", handleResize);\n  }, [testRef]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    tabIndex: 3,\n    children: [wordsRendered ? /*#__PURE__*/_jsxDEV(TextInput, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 24\n    }, this) : \"\", /*#__PURE__*/_jsxDEV(TestContent, {\n      id: \"TestContent\",\n      className: !inputFocused ? \"blur-content\" : \"\",\n      children: [/*#__PURE__*/_jsxDEV(Underline, {\n        width: `${currentWord.width}px`,\n        left: `${currentWord.left}px`,\n        enteredWordIsWrong: enteredWord.isWrong,\n        enteredWordIsComplete: enteredWord.isComplete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"TestContentChild\",\n        ref: testRef,\n        children: testWords.forHtml\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Test, \"gwmub/8WOJ3Jo3PAAyblntN2Gjo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Test;\nexport default Test;\nconst Container = styled.div`\n  padding-top: 30px;\n`;\n_c2 = Container;\nconst TestContent = styled.div`\n  height: 120px;\n  overflow: hidden;\n  font-size: 1.3em;\n  font-family: \"Quicksand\", sans-serif;\n  font-weight: 500;\n  line-height: 40px;\n  text-align: justify;\n  position: relative;\n  #TestContentChild {\n    transform: translateY(120px);\n    transition: all 250ms ease-in-out;\n  }\n  .test-words {\n    padding: 3px;\n  }\n  @media (max-width: 770px) {\n    font-size: 1.2em;\n    line-height: 30px;\n    height: 90px;\n\n    .test-words {\n      padding: 1px;\n    }\n  }\n`;\n_c3 = TestContent;\nconst Underline = styled.div.attrs(props => ({\n  style: {\n    width: props.width,\n    borderColor: props.enteredWordIsWrong ? \"red\" : props.enteredWordIsComplete ? \"#00ffff99\" : \"#aaa\"\n  }\n}))`\n  position: absolute;\n  z-index: 0;\n  height: 76px;\n  padding: 0;\n  transform: translateX(${props => props.left});\n  transition: all 150ms ease-in-out;\n  border-bottom: 2px solid;\n  @media (max-width: 770px) {\n    height: 60px;\n  }\n`;\n_c4 = Underline;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Test\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"TestContent\");\n$RefreshReg$(_c4, \"Underline\");","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/components/Test.js"],"names":["React","useEffect","useState","useRef","forwardRef","styled","words","TextInput","Fade","useSelector","useDispatch","newWords","evaluateWords","blurInput","focusInput","confirmWord","firstWord","resetWord","inactivateCurrentWord","resetInput","resetInputLog","resetTest","Test","dispatch","wordsRendered","setWordsRendered","testWords","state","currentWord","inputFocused","enteredWord","testRef","loadWords","key","rawWords","handleClickOutside","e","current","contains","target","handleKeyDown","matches","preventDefault","shiftKey","ctrlKey","code","keyCode","handleResize","update","width","left","isWrong","isComplete","forHtml","Container","div","TestContent","Underline","attrs","props","style","borderColor","enteredWordIsWrong","enteredWordIsComplete"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, forwardRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport words from \"./wordsData\";\r\nimport TextInput from \"./TextInput\";\r\nimport { Fade } from \"react-reveal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  newWords,\r\n  evaluateWords,\r\n  blurInput,\r\n  focusInput,\r\n  confirmWord,\r\n  firstWord,\r\n  resetWord,\r\n  inactivateCurrentWord,\r\n  resetInput,\r\n  resetInputLog,\r\n  resetTest,\r\n} from \"../state/action-creators/index\";\r\n\r\nfunction Test() {\r\n  const dispatch = useDispatch();\r\n  const [wordsRendered, setWordsRendered] = useState(false);\r\n  const testWords = useSelector((state) => state.testWords);\r\n  const currentWord = useSelector((state) => state.currentWord);\r\n  const inputFocused = useSelector((state) => state.inputFocused);\r\n  const enteredWord = useSelector((state) => state.enteredWord);\r\n\r\n  const testRef = useRef(null);\r\n\r\n  function loadWords() {\r\n    dispatch(newWords());\r\n    setWordsRendered(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadWords();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentWord.key != 0) {\r\n      dispatch(confirmWord(currentWord));\r\n    } else {\r\n      if (wordsRendered) {\r\n        dispatch(firstWord(testWords.rawWords));\r\n        dispatch(focusInput());\r\n        dispatch(resetInput());\r\n        dispatch(resetInputLog());\r\n      }\r\n    }\r\n  }, [testWords]);\r\n\r\n  function handleClickOutside(e) {\r\n    if (testRef.current && !testRef.current.contains(e.target)) {\r\n      dispatch(blurInput());\r\n    } else {\r\n      dispatch(blurInput());\r\n      dispatch(focusInput());\r\n    }\r\n  }\r\n\r\n  function handleKeyDown(e) {\r\n    if (\r\n      !inputFocused &&\r\n      !e.target.matches(\"#custom-time-input, #custom-time-input *\")\r\n    ) {\r\n      dispatch(focusInput());\r\n    }\r\n    if (e.key == \"Alt\" && inputFocused) {\r\n      dispatch(blurInput());\r\n    }\r\n    if (e.key == \"Tab\") {\r\n      e.preventDefault();\r\n    }\r\n    if ((e.shiftKey || e.ctrlKey) && (e.code == \"Enter\" || e.keyCode == 32)) {\r\n      resetTest(dispatch);\r\n    }\r\n  }\r\n\r\n  function handleResize() {\r\n    dispatch(blurInput());\r\n    dispatch(focusInput());\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!inputFocused && currentWord.key > 0) {\r\n      dispatch(inactivateCurrentWord(currentWord, enteredWord));\r\n      dispatch(confirmWord(currentWord));\r\n    } else if (inputFocused && currentWord.key > 0) {\r\n      update\r\n      dispatch(confirmWord(currentWord));\r\n    }\r\n  }, [inputFocused]);\r\n\r\n  useEffect(() => {\r\n    // document.addEventListener(\"mousedown\", handleClickOutside, true);\r\n    // document.addEventListener(\"mouseup\", handleClickOutside, true);\r\n    // document.addEventListener(\"keydown\", handleKeyDown, true);\r\n    // window.addEventListener(\"resize\", handleResize);\r\n  }, [testRef]);\r\n\r\n  return (\r\n    <Container tabIndex={3}>\r\n      {/* <Fade top duration={250}> */}\r\n      {wordsRendered ? <TextInput /> : \"\"}\r\n      <TestContent\r\n        id=\"TestContent\"\r\n        className={!inputFocused ? \"blur-content\" : \"\"}\r\n      >\r\n        <Underline\r\n          width={`${currentWord.width}px`}\r\n          left={`${currentWord.left}px`}\r\n          enteredWordIsWrong={enteredWord.isWrong}\r\n          enteredWordIsComplete={enteredWord.isComplete}\r\n        ></Underline>\r\n\r\n        <div id=\"TestContentChild\" ref={testRef}>\r\n          {testWords.forHtml}\r\n        </div>\r\n      </TestContent>\r\n      {/* </Fade> */}\r\n    </Container>\r\n  );\r\n}\r\nexport default Test;\r\n\r\nconst Container = styled.div`\r\n  padding-top: 30px;\r\n`;\r\n\r\nconst TestContent = styled.div`\r\n  height: 120px;\r\n  overflow: hidden;\r\n  font-size: 1.3em;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  font-weight: 500;\r\n  line-height: 40px;\r\n  text-align: justify;\r\n  position: relative;\r\n  #TestContentChild {\r\n    transform: translateY(120px);\r\n    transition: all 250ms ease-in-out;\r\n  }\r\n  .test-words {\r\n    padding: 3px;\r\n  }\r\n  @media (max-width: 770px) {\r\n    font-size: 1.2em;\r\n    line-height: 30px;\r\n    height: 90px;\r\n\r\n    .test-words {\r\n      padding: 1px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Underline = styled.div.attrs((props) => ({\r\n  style: {\r\n    width: props.width,\r\n    borderColor: props.enteredWordIsWrong\r\n      ? \"red\"\r\n      : props.enteredWordIsComplete\r\n      ? \"#00ffff99\"\r\n      : \"#aaa\",\r\n  },\r\n}))`\r\n  position: absolute;\r\n  z-index: 0;\r\n  height: 76px;\r\n  padding: 0;\r\n  transform: translateX(${(props) => props.left});\r\n  transition: all 150ms ease-in-out;\r\n  border-bottom: 2px solid;\r\n  @media (max-width: 770px) {\r\n    height: 60px;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}