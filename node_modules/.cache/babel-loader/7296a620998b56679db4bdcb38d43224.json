{"ast":null,"code":"var _jsxFileName = \"D:\\\\APEX_TYPER\\\\apex_typer_5.0\\\\src\\\\components\\\\TextInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TextInput(props) {\n  _s();\n\n  const [currentWord, setCurrentWord] = useState({\n    id: \"word-1\",\n    word: \"\"\n  });\n  var inputLenght;\n  useEffect(() => {\n    setCurrentWord(prevWord => ({ ...prevWord,\n      word: document.getElementById(currentWord.id).innerText\n    }));\n  }, []);\n\n  function textInputEvaluater(e) {\n    let enteredValue = e.target.value.replace(/\\s/g, \"\");\n    document.getElementById(\"word-1\").classList.remove(\"right-warning\");\n    document.getElementById(\"word-1\").classList.remove(\"wrong-warning\");\n\n    if (enteredValue != currentWord.word.slice(0, enteredValue.length)) {\n      document.getElementById(\"word-1\").classList.add(\"wrong-warning\");\n    } else if (enteredValue == currentWord.word) {\n      document.getElementById(\"word-1\").classList.add(\"right-warning\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    onChange: e => textInputEvaluater(e)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}\n\n_s(TextInput, \"Z9Qpz7GbN11LMdVDYNr1y+CJUVk=\");\n\n_c = TextInput;\nexport default TextInput;\nconst Container = styled.input`\n  position: absolute;\n  top: 0;\n  background-color: transparent;\n  border: none;\n  border-bottom: #aaa solid 2px;\n  caret-color: #ffff;\n  font-size: 1.2em;\n  text-align: center;\n  margin: 10px 0 0;\n  padding: 3px 3px 5px;\n  color: #ffff;\n  width: ${props => props.width};\n\n  &:focus {\n    outline: none;\n  }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextInput\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/components/TextInput.js"],"names":["React","useState","useEffect","styled","TextInput","props","currentWord","setCurrentWord","id","word","inputLenght","prevWord","document","getElementById","innerText","textInputEvaluater","e","enteredValue","target","value","replace","classList","remove","slice","length","add","Container","input","width"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCN,QAAQ,CAAC;AAAEO,IAAAA,EAAE,EAAE,QAAN;AAAgBC,IAAAA,IAAI,EAAE;AAAtB,GAAD,CAA9C;AACA,MAAIC,WAAJ;AACAR,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,cAAc,CAAEI,QAAD,KAAe,EAC5B,GAAGA,QADyB;AAE5BF,MAAAA,IAAI,EAAEG,QAAQ,CAACC,cAAT,CAAwBP,WAAW,CAACE,EAApC,EAAwCM;AAFlB,KAAf,CAAD,CAAd;AAID,GALQ,EAKN,EALM,CAAT;;AAOA,WAASC,kBAAT,CAA4BC,CAA5B,EAA+B;AAC7B,QAAIC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,OAAf,CAAuB,KAAvB,EAA8B,EAA9B,CAAnB;AACAR,IAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCQ,SAAlC,CAA4CC,MAA5C,CAAmD,eAAnD;AACAV,IAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCQ,SAAlC,CAA4CC,MAA5C,CAAmD,eAAnD;;AACA,QAAIL,YAAY,IAAIX,WAAW,CAACG,IAAZ,CAAiBc,KAAjB,CAAuB,CAAvB,EAA0BN,YAAY,CAACO,MAAvC,CAApB,EAAoE;AAClEZ,MAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCQ,SAAlC,CAA4CI,GAA5C,CAAgD,eAAhD;AACD,KAFD,MAEO,IAAIR,YAAY,IAAIX,WAAW,CAACG,IAAhC,EAAsC;AAC3CG,MAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCQ,SAAlC,CAA4CI,GAA5C,CAAgD,eAAhD;AACD;AACF;;AAED,sBAAO,QAAC,SAAD;AAAW,IAAA,QAAQ,EAAGT,CAAD,IAAOD,kBAAkB,CAACC,CAAD;AAA9C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAtBQZ,S;;KAAAA,S;AAwBT,eAAeA,SAAf;AAEA,MAAMsB,SAAS,GAAGvB,MAAM,CAACwB,KAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAYtB,KAAD,IAAWA,KAAK,CAACuB,KAAM;AAClC;AACA;AACA;AACA;AACA,CAjBA;MAAMF,S","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction TextInput(props) {\r\n  const [currentWord, setCurrentWord] = useState({ id: \"word-1\", word: \"\" });\r\n  var inputLenght;\r\n  useEffect(() => {\r\n    setCurrentWord((prevWord) => ({\r\n      ...prevWord,\r\n      word: document.getElementById(currentWord.id).innerText,\r\n    }));\r\n  }, []);\r\n\r\n  function textInputEvaluater(e) {\r\n    let enteredValue = e.target.value.replace(/\\s/g, \"\");\r\n    document.getElementById(\"word-1\").classList.remove(\"right-warning\");\r\n    document.getElementById(\"word-1\").classList.remove(\"wrong-warning\");\r\n    if (enteredValue != currentWord.word.slice(0, enteredValue.length)) {\r\n      document.getElementById(\"word-1\").classList.add(\"wrong-warning\");\r\n    } else if (enteredValue == currentWord.word) {\r\n      document.getElementById(\"word-1\").classList.add(\"right-warning\");\r\n    }\r\n  }\r\n\r\n  return <Container onChange={(e) => textInputEvaluater(e)}></Container>;\r\n}\r\n\r\nexport default TextInput;\r\n\r\nconst Container = styled.input`\r\n  position: absolute;\r\n  top: 0;\r\n  background-color: transparent;\r\n  border: none;\r\n  border-bottom: #aaa solid 2px;\r\n  caret-color: #ffff;\r\n  font-size: 1.2em;\r\n  text-align: center;\r\n  margin: 10px 0 0;\r\n  padding: 3px 3px 5px;\r\n  color: #ffff;\r\n  width: ${(props) => props.width};\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}