{"ast":null,"code":"var _jsxFileName = \"D:\\\\APEX_TYPER\\\\apex_typer_5.0\\\\src\\\\components\\\\Controls.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Slide, Fade } from \"react-reveal\";\nimport CustomTime from \"./CustomTime\";\nimport CountdownTimer from \"./CountdownTimer\";\nimport { useDispatch } from \"react-redux\";\nimport { resetTestTimer } from \"../state/action-creators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Controls(props) {\n  _s();\n\n  // states and state managers\n  const timeMenuRef = useRef(null);\n  const [time, setTime] = useState(localStorage.getItem(\"time\") === null ? 30 : localStorage.getItem(\"time\"));\n  const dispatch = useDispatch(); // const [customTimeInput, setCustomTimeInput] = useState(false);\n  // const [showTimeMenu, setShowTimeMenu] = useState(false);\n\n  const customTimeInput = useSelector(state => state.controlsStates.customTimeInput);\n  const showTimeMenu = useSelector(state => state.controlsStates.showTimeMenu);\n\n  function calculateTime(sec, t) {\n    let r;\n\n    if (sec >= 0) {\n      var m = Math.floor(sec / 60);\n      var s = Math.floor(sec % 60);\n    } else {\n      var m = Math.ceil(sec % 3600 / 60);\n      var s = Math.ceil(sec % 3600 % 60);\n    }\n\n    var mDisplay = m < 10 ? `0${m}` : m;\n    var sDisplay = s < 10 ? `0${s}` : s;\n\n    switch (t) {\n      case \"for-display\":\n        r = {\n          minutes: mDisplay,\n          seconds: sDisplay\n        };\n        break;\n\n      case \"for-state\":\n        r = {\n          minutes: m,\n          seconds: s\n        };\n        break;\n\n      default:\n        break;\n    }\n\n    return r;\n  }\n\n  function timerSettingsClick() {\n    setShowTimeMenu(prevShowTimeMenu => !prevShowTimeMenu);\n  }\n\n  function closeTimeInput() {\n    setCustomTimeInput(false);\n  }\n\n  useEffect(() => {\n    if (customTimeInput) {\n      console.log(\"input opened\");\n    } else {\n      console.log(\"input closed\");\n    }\n  }, [customTimeInput]);\n\n  const timeOptionClickHandler = value => {\n    localStorage.setItem(\"time\", value);\n    setTime(localStorage.getItem(\"time\"));\n    dispatch(resetTestTimer());\n    setShowTimeMenu(false);\n\n    if (customTimeInput) {\n      closeTimeInput();\n    }\n  }; // function to close opened time-option-menu when the user clicks outside\n\n\n  function handleClickOutside(e) {\n    if (timeMenuRef.current && !timeMenuRef.current.contains(e.target) && !e.target.matches(\"#custom-time-input, #custom-time-input *\")) {\n      if (customTimeInput) {\n        closeTimeInput();\n      } else {\n        setShowTimeMenu(false);\n      }\n    }\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleClickOutside, true);\n  }, [timeMenuRef]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Fade, {\n      left: true,\n      duration: 250,\n      children: /*#__PURE__*/_jsxDEV(Time, {\n        children: props.testOn && time > 0 ? /*#__PURE__*/_jsxDEV(CountdownTimer, {\n          testOn: props.testOn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TimeControls, {\n          ref: timeMenuRef,\n          children: [/*#__PURE__*/_jsxDEV(TimeSettings, {\n            src: \"icons/timer_settings.png\",\n            className: \"time-icons grey-icon\",\n            onClick: event => {\n              event.stopPropagation();\n              timerSettingsClick(event);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TimeSettingsMenuWrap, {\n            children: /*#__PURE__*/_jsxDEV(Slide, {\n              duration: 300,\n              delay: showTimeMenu ? 100 : 0,\n              left: true,\n              when: showTimeMenu,\n              className: \"time-settings-menu\",\n              children: /*#__PURE__*/_jsxDEV(TimeSettingsMenu, {\n                className: !showTimeMenu && \"display-none\",\n                children: [/*#__PURE__*/_jsxDEV(Time0, {\n                  onClick: () => timeOptionClickHandler(0),\n                  className: time == 0 ? \"selected-time-option\" : \"\",\n                  children: \"0s\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Time30, {\n                  onClick: () => timeOptionClickHandler(30),\n                  className: time == 30 ? \"selected-time-option\" : \"\",\n                  children: \"30s\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Time60, {\n                  onClick: () => timeOptionClickHandler(60),\n                  className: time == 60 ? \"selected-time-option\" : \"\",\n                  children: \"60s\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TimeCustom, {\n                  src: \"icons/time_input.png\",\n                  onClick: () => setCustomTimeInput(true),\n                  className: time != 0 && time != 30 && time != 60 ? \"cyan-icon\" : \"grey-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CurrentTimeWrap, {\n            children: /*#__PURE__*/_jsxDEV(Slide, {\n              duration: !showTimeMenu ? 250 : 100,\n              delay: !showTimeMenu ? 300 : 0,\n              left: true,\n              when: !showTimeMenu,\n              children: /*#__PURE__*/_jsxDEV(CurrentTime, {\n                className: showTimeMenu && \"display-none\",\n                duration: !showTimeMenu ? 250 : 100,\n                delay: !showTimeMenu ? 300 : 0,\n                left: !showTimeMenu,\n                showTimeMenu: showTimeMenu,\n                onClick: () => setCustomTimeInput(true),\n                children: time <= 60 ? `${time}s` : `${calculateTime(time, \"for-display\").minutes}:${calculateTime(time, \"for-display\").seconds}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Fade, {\n      right: true,\n      duration: 250,\n      children: /*#__PURE__*/_jsxDEV(Restart, {\n        src: \"icons/restart.png\",\n        className: \"grey-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }, this), customTimeInput && /*#__PURE__*/_jsxDEV(CustomTime, {\n      calculateTime: calculateTime,\n      submitInput: timeOptionClickHandler,\n      closeTimeInput: closeTimeInput,\n      timeMenuRef: timeMenuRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Controls, \"bYMbKVyW7OpfQ11aGZyisfqmD10=\", true, function () {\n  return [useDispatch];\n});\n\n_c = Controls;\nexport default Controls; // controls\n\nconst Container = styled.div`\n  padding-top: 35px;\n\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  #time-view {\n    margin: 0;\n    color: cyan;\n  }\n\n  .time-icons {\n    width: 22px;\n    height: 22px;\n  }\n\n  @media (max-width: 430px) {\n    padding-top: 15px;\n    font-size: 0.75em;\n\n    .time-icons {\n      width: 18px;\n      height: 18px;\n    }\n  }\n`;\n_c2 = Container;\nconst Time = styled.div`\n  display: flex;\n  align-items: center;\n`;\n_c3 = Time;\nconst TimeControls = styled.div`\n  display: flex;\n  align-items: center;\n\n  position: relative;\n`;\n_c4 = TimeControls;\nconst TimeSettings = styled.img`\n  cursor: pointer;\n`;\n_c5 = TimeSettings;\nconst TimeSettingsMenuWrap = styled.div`\n  position: absolute;\n  left: 27px;\n  z-index: 2;\n  background-color: transparent;\n\n  overflow: hidden;\n\n  display: flex;\n\n  * {\n    background-color: transparent;\n  }\n`;\n_c6 = TimeSettingsMenuWrap;\nconst CurrentTimeWrap = styled(TimeSettingsMenuWrap)`\n  cursor: pointer;\n`;\n_c7 = CurrentTimeWrap;\nconst TimeSettingsMenu = styled.div`\n  display: flex;\n  align-items: center;\n\n  * {\n    margin: 0 5px;\n    cursor: pointer;\n  }\n\n  .selected-time-option {\n    color: cyan;\n  }\n`;\n_c8 = TimeSettingsMenu;\nconst TimeCustom = styled.img`\n  width: 19px;\n  height: 19px;\n\n  @media (max-width: 430px) {\n    width: 15px;\n    height: 15px;\n  }\n`;\n_c9 = TimeCustom;\nconst CurrentTime = styled.div`\n  border-bottom: 1px solid cyan;\n  box-sizing: border-box;\n  margin-bottom: 5px;\n  z-index: 1;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n_c10 = CurrentTime;\nconst Restart = styled.img`\n  width: 24px;\n  cursor: pointer;\n\n  @media (max-width: 430px) {\n    width: 20px;\n  }\n`;\n_c11 = Restart;\nconst Time30 = styled.p``;\n_c12 = Time30;\nconst Time60 = styled.p``;\n_c13 = Time60;\nconst Time0 = styled.p``;\n_c14 = Time0;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13, _c14;\n\n$RefreshReg$(_c, \"Controls\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"Time\");\n$RefreshReg$(_c4, \"TimeControls\");\n$RefreshReg$(_c5, \"TimeSettings\");\n$RefreshReg$(_c6, \"TimeSettingsMenuWrap\");\n$RefreshReg$(_c7, \"CurrentTimeWrap\");\n$RefreshReg$(_c8, \"TimeSettingsMenu\");\n$RefreshReg$(_c9, \"TimeCustom\");\n$RefreshReg$(_c10, \"CurrentTime\");\n$RefreshReg$(_c11, \"Restart\");\n$RefreshReg$(_c12, \"Time30\");\n$RefreshReg$(_c13, \"Time60\");\n$RefreshReg$(_c14, \"Time0\");","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/components/Controls.js"],"names":["React","useState","useEffect","useRef","styled","Slide","Fade","CustomTime","CountdownTimer","useDispatch","resetTestTimer","Controls","props","timeMenuRef","time","setTime","localStorage","getItem","dispatch","customTimeInput","useSelector","state","controlsStates","showTimeMenu","calculateTime","sec","t","r","m","Math","floor","s","ceil","mDisplay","sDisplay","minutes","seconds","timerSettingsClick","setShowTimeMenu","prevShowTimeMenu","closeTimeInput","setCustomTimeInput","console","log","timeOptionClickHandler","value","setItem","handleClickOutside","e","current","contains","target","matches","document","addEventListener","testOn","event","stopPropagation","Container","div","Time","TimeControls","TimeSettings","img","TimeSettingsMenuWrap","CurrentTimeWrap","TimeSettingsMenu","TimeCustom","CurrentTime","Restart","Time30","p","Time60","Time0"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Slide, Fade } from \"react-reveal\";\r\nimport CustomTime from \"./CustomTime\";\r\nimport CountdownTimer from \"./CountdownTimer\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { resetTestTimer } from \"../state/action-creators\";\r\n\r\nfunction Controls(props) {\r\n  // states and state managers\r\n\r\n  const timeMenuRef = useRef(null);\r\n\r\n  const [time, setTime] = useState(\r\n    localStorage.getItem(\"time\") === null ? 30 : localStorage.getItem(\"time\")\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  // const [customTimeInput, setCustomTimeInput] = useState(false);\r\n  // const [showTimeMenu, setShowTimeMenu] = useState(false);\r\n  const customTimeInput = useSelector(\r\n    (state) => state.controlsStates.customTimeInput\r\n  );\r\n  const showTimeMenu = useSelector(\r\n    (state) => state.controlsStates.showTimeMenu\r\n  );\r\n\r\n  function calculateTime(sec, t) {\r\n    let r;\r\n    if (sec >= 0) {\r\n      var m = Math.floor(sec / 60);\r\n      var s = Math.floor(sec % 60);\r\n    } else {\r\n      var m = Math.ceil((sec % 3600) / 60);\r\n      var s = Math.ceil((sec % 3600) % 60);\r\n    }\r\n    var mDisplay = m < 10 ? `0${m}` : m;\r\n    var sDisplay = s < 10 ? `0${s}` : s;\r\n    switch (t) {\r\n      case \"for-display\":\r\n        r = { minutes: mDisplay, seconds: sDisplay };\r\n        break;\r\n      case \"for-state\":\r\n        r = { minutes: m, seconds: s };\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    return r;\r\n  }\r\n\r\n  function timerSettingsClick() {\r\n    setShowTimeMenu((prevShowTimeMenu) => !prevShowTimeMenu);\r\n  }\r\n\r\n  function closeTimeInput() {\r\n    setCustomTimeInput(false);\r\n  }\r\n  useEffect(() => {\r\n    if (customTimeInput) {\r\n      console.log(\"input opened\");\r\n    } else {\r\n      console.log(\"input closed\");\r\n    }\r\n  }, [customTimeInput]);\r\n  const timeOptionClickHandler = (value) => {\r\n    localStorage.setItem(\"time\", value);\r\n    setTime(localStorage.getItem(\"time\"));\r\n    dispatch(resetTestTimer());\r\n    setShowTimeMenu(false);\r\n    if (customTimeInput) {\r\n      closeTimeInput();\r\n    }\r\n  };\r\n\r\n  // function to close opened time-option-menu when the user clicks outside\r\n\r\n  function handleClickOutside(e) {\r\n    if (\r\n      timeMenuRef.current &&\r\n      !timeMenuRef.current.contains(e.target) &&\r\n      !e.target.matches(\"#custom-time-input, #custom-time-input *\")\r\n    ) {\r\n      if (customTimeInput) {\r\n        closeTimeInput();\r\n      } else {\r\n        setShowTimeMenu(false);\r\n      }\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"mousedown\", handleClickOutside, true);\r\n  }, [timeMenuRef]);\r\n\r\n  return (\r\n    <Container>\r\n      <Fade left duration={250}>\r\n        <Time>\r\n          {props.testOn && time > 0 ? (\r\n            <CountdownTimer testOn={props.testOn} />\r\n          ) : (\r\n            <TimeControls ref={timeMenuRef}>\r\n              <TimeSettings\r\n                src=\"icons/timer_settings.png\"\r\n                className=\"time-icons grey-icon\"\r\n                onClick={(event) => {\r\n                  event.stopPropagation();\r\n                  timerSettingsClick(event);\r\n                }}\r\n              />\r\n\r\n              <TimeSettingsMenuWrap>\r\n                <Slide\r\n                  duration={300}\r\n                  delay={showTimeMenu ? 100 : 0}\r\n                  left\r\n                  when={showTimeMenu}\r\n                  className=\"time-settings-menu\"\r\n                >\r\n                  <TimeSettingsMenu className={!showTimeMenu && \"display-none\"}>\r\n                    <Time0\r\n                      onClick={() => timeOptionClickHandler(0)}\r\n                      className={time == 0 ? \"selected-time-option\" : \"\"}\r\n                    >\r\n                      0s\r\n                    </Time0>\r\n\r\n                    <Time30\r\n                      onClick={() => timeOptionClickHandler(30)}\r\n                      className={time == 30 ? \"selected-time-option\" : \"\"}\r\n                    >\r\n                      30s\r\n                    </Time30>\r\n\r\n                    <Time60\r\n                      onClick={() => timeOptionClickHandler(60)}\r\n                      className={time == 60 ? \"selected-time-option\" : \"\"}\r\n                    >\r\n                      60s\r\n                    </Time60>\r\n\r\n                    <TimeCustom\r\n                      src=\"icons/time_input.png\"\r\n                      onClick={() => setCustomTimeInput(true)}\r\n                      className={\r\n                        time != 0 && time != 30 && time != 60\r\n                          ? \"cyan-icon\"\r\n                          : \"grey-icon\"\r\n                      }\r\n                    />\r\n                  </TimeSettingsMenu>\r\n                </Slide>\r\n              </TimeSettingsMenuWrap>\r\n\r\n              <CurrentTimeWrap>\r\n                <Slide\r\n                  duration={!showTimeMenu ? 250 : 100}\r\n                  delay={!showTimeMenu ? 300 : 0}\r\n                  left\r\n                  when={!showTimeMenu}\r\n                >\r\n                  <CurrentTime\r\n                    className={showTimeMenu && \"display-none\"}\r\n                    duration={!showTimeMenu ? 250 : 100}\r\n                    delay={!showTimeMenu ? 300 : 0}\r\n                    left={!showTimeMenu}\r\n                    showTimeMenu={showTimeMenu}\r\n                    onClick={() => setCustomTimeInput(true)}\r\n                  >\r\n                    {time <= 60\r\n                      ? `${time}s`\r\n                      : `${calculateTime(time, \"for-display\").minutes}:${\r\n                          calculateTime(time, \"for-display\").seconds\r\n                        }`}\r\n                  </CurrentTime>\r\n                </Slide>\r\n              </CurrentTimeWrap>\r\n            </TimeControls>\r\n          )}\r\n        </Time>\r\n      </Fade>\r\n\r\n      <Fade right duration={250}>\r\n        <Restart src=\"icons/restart.png\" className=\"grey-icon\" />\r\n      </Fade>\r\n\r\n      {customTimeInput && (\r\n        <CustomTime\r\n          calculateTime={calculateTime}\r\n          submitInput={timeOptionClickHandler}\r\n          closeTimeInput={closeTimeInput}\r\n          timeMenuRef={timeMenuRef}\r\n        />\r\n      )}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Controls;\r\n\r\n// controls\r\n\r\nconst Container = styled.div`\r\n  padding-top: 35px;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  #time-view {\r\n    margin: 0;\r\n    color: cyan;\r\n  }\r\n\r\n  .time-icons {\r\n    width: 22px;\r\n    height: 22px;\r\n  }\r\n\r\n  @media (max-width: 430px) {\r\n    padding-top: 15px;\r\n    font-size: 0.75em;\r\n\r\n    .time-icons {\r\n      width: 18px;\r\n      height: 18px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Time = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst TimeControls = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  position: relative;\r\n`;\r\n\r\nconst TimeSettings = styled.img`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TimeSettingsMenuWrap = styled.div`\r\n  position: absolute;\r\n  left: 27px;\r\n  z-index: 2;\r\n  background-color: transparent;\r\n\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n\r\n  * {\r\n    background-color: transparent;\r\n  }\r\n`;\r\n\r\nconst CurrentTimeWrap = styled(TimeSettingsMenuWrap)`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TimeSettingsMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  * {\r\n    margin: 0 5px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .selected-time-option {\r\n    color: cyan;\r\n  }\r\n`;\r\n\r\nconst TimeCustom = styled.img`\r\n  width: 19px;\r\n  height: 19px;\r\n\r\n  @media (max-width: 430px) {\r\n    width: 15px;\r\n    height: 15px;\r\n  }\r\n`;\r\n\r\nconst CurrentTime = styled.div`\r\n  border-bottom: 1px solid cyan;\r\n  box-sizing: border-box;\r\n  margin-bottom: 5px;\r\n  z-index: 1;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Restart = styled.img`\r\n  width: 24px;\r\n  cursor: pointer;\r\n\r\n  @media (max-width: 430px) {\r\n    width: 20px;\r\n  }\r\n`;\r\n\r\nconst Time30 = styled.p``;\r\n\r\nconst Time60 = styled.p``;\r\n\r\nconst Time0 = styled.p``;\r\n"]},"metadata":{},"sourceType":"module"}