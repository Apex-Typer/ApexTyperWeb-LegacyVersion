{"ast":null,"code":"var _jsxFileName = \"D:\\\\APEX_TYPER\\\\apex_typer_5.0\\\\src\\\\components\\\\Test.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport words from \"./wordsData\";\nimport TextInput from \"./TextInput\";\nimport { Fade } from \"react-reveal\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { newWords, evaluateWords } from \"../state/action-creators/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Test(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [wordsRendered, setWordsRendered] = useState(false);\n  const testWords1 = useSelector(state => state.testWords);\n  const [testWords, setTestWords] = useState(null);\n\n  function testWordsLoader() {\n    let j = 500;\n    let wordList = [];\n    let prevRanNum = 0;\n\n    for (let i = 0; i < j; i++) {\n      var r = Math.floor(Math.random() * words.length);\n\n      if (r == prevRanNum) {\n        r++;\n      }\n\n      prevRanNum = r;\n      const word = words[r];\n      let letterArray = [];\n\n      for (let l = 0; l < word.length; l++) {\n        letterArray.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          id: `word-${i + 1}-letter-${l + 1}`,\n          className: \"letter\",\n          children: word[l]\n        }, `word-${i + 1}-letter-${l + 1}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this));\n      }\n\n      wordList.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `test-words${i == 0 ? \" current-word\" : \"\"}`,\n        id: `word-${i + 1}`,\n        children: letterArray\n      }, `word-${i + 1}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this));\n      wordList.push(\" \");\n    }\n\n    setWordsRendered(true);\n    setTestWords(wordList);\n  }\n\n  useEffect(() => {\n    dispatch(newWords());\n  }, []);\n  console.log(testWords1);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Fade, {\n      bottom: true,\n      duration: 250,\n      children: /*#__PURE__*/_jsxDEV(TestContent, {\n        id: \"testContent\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"testContentChild\",\n          children: testWords1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Test, \"jpKfgLtjlatg94jecLJ/2Yges/Q=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Test;\nexport default Test;\nconst Container = styled.div``;\n_c2 = Container;\nconst TestContent = styled.div`\n  height: 80px;\n  overflow: hidden;\n  font-size: 1.25em;\n  line-height: 40px;\n  text-align: justify;\n  #testContentChild {\n    transition: all 250ms ease-in-out;\n  }\n\n  .test-words {\n    padding: 3px 3px 5px 3px;\n    margin: 5px 5px 20px 5px;\n  }\n\n  .current-word {\n    background-color: #aaa;\n    color: #1b1b1e;\n    border-radius: 3px;\n  }\n`;\n_c3 = TestContent;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Test\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"TestContent\");","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/components/Test.js"],"names":["React","useEffect","useState","styled","words","TextInput","Fade","useSelector","useDispatch","newWords","evaluateWords","Test","props","dispatch","wordsRendered","setWordsRendered","testWords1","state","testWords","setTestWords","testWordsLoader","j","wordList","prevRanNum","i","r","Math","floor","random","length","word","letterArray","l","push","console","log","Container","div","TestContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport words from \"./wordsData\";\r\nimport TextInput from \"./TextInput\";\r\nimport { Fade } from \"react-reveal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { newWords, evaluateWords } from \"../state/action-creators/index\";\r\n\r\nfunction Test(props) {\r\n  const dispatch = useDispatch();\r\n  const [wordsRendered, setWordsRendered] = useState(false);\r\n  const testWords1 = useSelector((state) => state.testWords);\r\n  const [testWords, setTestWords] = useState(null);\r\n  function testWordsLoader() {\r\n    let j = 500;\r\n    let wordList = [];\r\n    let prevRanNum = 0;\r\n    for (let i = 0; i < j; i++) {\r\n      var r = Math.floor(Math.random() * words.length);\r\n      if (r == prevRanNum) {\r\n        r++;\r\n      }\r\n      prevRanNum = r;\r\n      const word = words[r];\r\n      let letterArray = [];\r\n      for (let l = 0; l < word.length; l++) {\r\n        letterArray.push(\r\n          <span\r\n            key={`word-${i + 1}-letter-${l + 1}`}\r\n            id={`word-${i + 1}-letter-${l + 1}`}\r\n            className=\"letter\"\r\n          >\r\n            {word[l]}\r\n          </span>\r\n        );\r\n      }\r\n      wordList.push(\r\n        <span\r\n          className={`test-words${i == 0 ? \" current-word\" : \"\"}`}\r\n          id={`word-${i + 1}`}\r\n          key={`word-${i + 1}`}\r\n        >\r\n          {letterArray}\r\n        </span>\r\n      );\r\n      wordList.push(\" \");\r\n    }\r\n    setWordsRendered(true);\r\n    setTestWords(wordList);\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(newWords());\r\n  }, []);\r\n  console.log(testWords1);\r\n  return (\r\n    <Container>\r\n      {/* {wordsRendered && <TextInput />} */}\r\n      \r\n      <Fade bottom duration={250}>\r\n        <TestContent id=\"testContent\">\r\n          <div id=\"testContentChild\">\r\n            {/* {wordsRendered ? testWords : testWordsLoader()} */}\r\n            {testWords1}\r\n          </div>\r\n        </TestContent>\r\n      </Fade>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n\r\nconst Container = styled.div``;\r\n\r\nconst TestContent = styled.div`\r\n  height: 80px;\r\n  overflow: hidden;\r\n  font-size: 1.25em;\r\n  line-height: 40px;\r\n  text-align: justify;\r\n  #testContentChild {\r\n    transition: all 250ms ease-in-out;\r\n  }\r\n\r\n  .test-words {\r\n    padding: 3px 3px 5px 3px;\r\n    margin: 5px 5px 20px 5px;\r\n  }\r\n\r\n  .current-word {\r\n    background-color: #aaa;\r\n    color: #1b1b1e;\r\n    border-radius: 3px;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}