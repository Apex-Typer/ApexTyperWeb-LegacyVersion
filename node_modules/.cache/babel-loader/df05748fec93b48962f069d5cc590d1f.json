{"ast":null,"code":"import{current}from\"@reduxjs/toolkit\";var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{word:\"\",isWrong:false,isComplete:false};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"UPDATE_INPUT\":return evaluateAndUpdateInput(action.payload.enteredWord,action.payload.currentWord);case\"RESET_INPUT\":return{word:\"\",isWrong:false,isComplete:false};default:return state;}};export default reducer;function evaluateAndUpdateInput(enteredWord,currentWord){var isWrong=false;var isComplete=false;var enteredWordLength=enteredWord.length;var currentWordLength=currentWord.length;var currentWordSliced=currentWord.slice(0,enteredWordLength);if(enteredWordLength<=currentWordLength){if(enteredWord==currentWordSliced){isWrong=false;isComplete=false;if(enteredWordLength==currentWordLength){isComplete=true;}}else{isWrong=true;isComplete=false;}}else{isWrong=true;isComplete=false;}return{word:enteredWord,isWrong:isWrong,isComplete:isComplete};}","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/state/reducers/enteredWord.js"],"names":["current","reducer","state","word","isWrong","isComplete","action","type","evaluateAndUpdateInput","payload","enteredWord","currentWord","enteredWordLength","length","currentWordLength","currentWordSliced","slice"],"mappings":"AAAA,OAASA,OAAT,KAAwB,kBAAxB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAGX,IAFHC,CAAAA,KAEG,2DAFK,CAAEC,IAAI,CAAE,EAAR,CAAYC,OAAO,CAAE,KAArB,CAA4BC,UAAU,CAAE,KAAxC,CAEL,IADHC,CAAAA,MACG,2CACH,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,cAAL,CACE,MAAOC,CAAAA,sBAAsB,CAC3BF,MAAM,CAACG,OAAP,CAAeC,WADY,CAE3BJ,MAAM,CAACG,OAAP,CAAeE,WAFY,CAA7B,CAIF,IAAK,aAAL,CACE,MAAO,CAAER,IAAI,CAAE,EAAR,CAAYC,OAAO,CAAE,KAArB,CAA4BC,UAAU,CAAE,KAAxC,CAAP,CACF,QACE,MAAOH,CAAAA,KAAP,CATJ,CAWD,CAfD,CAiBA,cAAeD,CAAAA,OAAf,CAEA,QAASO,CAAAA,sBAAT,CAAgCE,WAAhC,CAA6CC,WAA7C,CAA0D,CACxD,GAAIP,CAAAA,OAAO,CAAG,KAAd,CACA,GAAIC,CAAAA,UAAU,CAAG,KAAjB,CACA,GAAIO,CAAAA,iBAAiB,CAAGF,WAAW,CAACG,MAApC,CACA,GAAIC,CAAAA,iBAAiB,CAAGH,WAAW,CAACE,MAApC,CACA,GAAIE,CAAAA,iBAAiB,CAAGJ,WAAW,CAACK,KAAZ,CAAkB,CAAlB,CAAqBJ,iBAArB,CAAxB,CAEA,GAAIA,iBAAiB,EAAIE,iBAAzB,CAA4C,CAC1C,GAAIJ,WAAW,EAAIK,iBAAnB,CAAsC,CACpCX,OAAO,CAAG,KAAV,CACAC,UAAU,CAAG,KAAb,CACA,GAAIO,iBAAiB,EAAIE,iBAAzB,CAA4C,CAC1CT,UAAU,CAAG,IAAb,CACD,CACF,CAND,IAMO,CACLD,OAAO,CAAG,IAAV,CACAC,UAAU,CAAG,KAAb,CACD,CACF,CAXD,IAWO,CACLD,OAAO,CAAG,IAAV,CACAC,UAAU,CAAG,KAAb,CACD,CAED,MAAO,CAAEF,IAAI,CAAEO,WAAR,CAAqBN,OAAO,CAAEA,OAA9B,CAAuCC,UAAU,CAAEA,UAAnD,CAAP,CACD","sourcesContent":["import { current } from \"@reduxjs/toolkit\";\r\n\r\nconst reducer = (\r\n  state = { word: \"\", isWrong: false, isComplete: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_INPUT\":\r\n      return evaluateAndUpdateInput(\r\n        action.payload.enteredWord,\r\n        action.payload.currentWord\r\n      );\r\n    case \"RESET_INPUT\":\r\n      return { word: \"\", isWrong: false, isComplete: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n\r\nfunction evaluateAndUpdateInput(enteredWord, currentWord) {\r\n  let isWrong = false;\r\n  let isComplete = false;\r\n  let enteredWordLength = enteredWord.length;\r\n  let currentWordLength = currentWord.length;\r\n  let currentWordSliced = currentWord.slice(0, enteredWordLength);\r\n\r\n  if (enteredWordLength <= currentWordLength) {\r\n    if (enteredWord == currentWordSliced) {\r\n      isWrong = false;\r\n      isComplete = false;\r\n      if (enteredWordLength == currentWordLength) {\r\n        isComplete = true;\r\n      }\r\n    } else {\r\n      isWrong = true;\r\n      isComplete = false;\r\n    }\r\n  } else {\r\n    isWrong = true;\r\n    isComplete = false;\r\n  }\r\n\r\n  return { word: enteredWord, isWrong: isWrong, isComplete: isComplete };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}