{"ast":null,"code":"const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    time: localStorage.getItem(\"time\") === null ? 30 : parseInt(localStorage.getItem(\"time\")),\n    liveTime: localStorage.getItem(\"time\") === null ? 30 : parseInt(localStorage.getItem(\"time\")),\n    calculatedTime: {\n      forDisplay: calculateTime(localStorage.getItem(\"time\") === null ? 30 : parseInt(localStorage.getItem(\"time\")))\n    }\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"RESET_LIVE_TIME\":\n      return { ...state,\n        liveTime: state.time\n      };\n\n    case \"DECREMENT_LIVE_TIME\":\n      return { ...state,\n        liveTime: state.liveTime - 1\n      };\n\n    case \"UPDATE_TEST_TIMER\":\n      localStorage.setItem(\"time\", action.payload);\n      return {\n        time: localStorage.getItem(\"time\") === null ? 30 : parseInt(localStorage.getItem(\"time\")),\n        liveTime: localStorage.getItem(\"time\") === null ? 30 : parseInt(localStorage.getItem(\"time\"))\n      };\n\n    default:\n      return state;\n  }\n};\n\nfunction displayTime(time) {\n  let r;\n  let minutes = parseInt(time / 60, 10);\n  let seconds = parseInt(time % 60, 10);\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n  if (minutes > \"00\") {\n    r = minutes + \":\" + seconds;\n  } else {\n    r = seconds;\n  }\n\n  return r;\n}\n\nexport default reducer;","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/state/reducers/testTimer.js"],"names":["reducer","state","time","localStorage","getItem","parseInt","liveTime","calculatedTime","forDisplay","calculateTime","action","type","setItem","payload","displayTime","r","minutes","seconds"],"mappings":"AAAA,MAAMA,OAAO,GAAG,YAeX;AAAA,MAdHC,KAcG,uEAdK;AACNC,IAAAA,IAAI,EACFC,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,IAAjC,GACI,EADJ,GAEIC,QAAQ,CAACF,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAJR;AAKNE,IAAAA,QAAQ,EACNH,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,IAAjC,GACI,EADJ,GAEIC,QAAQ,CAACF,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CARR;AASNG,IAAAA,cAAc,EAAC;AAACC,MAAAA,UAAU,EAACC,aAAa,CAACN,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,IAAjC,GACvC,EADuC,GAEvCC,QAAQ,CAACF,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAF8B;AAAzB;AATT,GAcL;AAAA,MADHM,MACG;;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,aAAO,EAAE,GAAGV,KAAL;AAAYK,QAAAA,QAAQ,EAAEL,KAAK,CAACC;AAA5B,OAAP;;AACF,SAAK,qBAAL;AACE,aAAO,EAAE,GAAGD,KAAL;AAAYK,QAAAA,QAAQ,EAAEL,KAAK,CAACK,QAAN,GAAiB;AAAvC,OAAP;;AACF,SAAK,mBAAL;AACEH,MAAAA,YAAY,CAACS,OAAb,CAAqB,MAArB,EAA6BF,MAAM,CAACG,OAApC;AACA,aAAO;AACLX,QAAAA,IAAI,EACFC,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,IAAjC,GACI,EADJ,GAEIC,QAAQ,CAACF,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAJT;AAKLE,QAAAA,QAAQ,EACNH,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,IAAjC,GACI,EADJ,GAEIC,QAAQ,CAACF,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD;AART,OAAP;;AAUF;AACE,aAAOH,KAAP;AAlBJ;AAoBD,CApCD;;AAsCA,SAASa,WAAT,CAAqBZ,IAArB,EAA2B;AACzB,MAAIa,CAAJ;AACA,MAAIC,OAAO,GAAGX,QAAQ,CAACH,IAAI,GAAG,EAAR,EAAY,EAAZ,CAAtB;AACA,MAAIe,OAAO,GAAGZ,QAAQ,CAACH,IAAI,GAAG,EAAR,EAAY,EAAZ,CAAtB;AAEAc,EAAAA,OAAO,GAAGA,OAAO,GAAG,EAAV,GAAe,MAAMA,OAArB,GAA+BA,OAAzC;AACAC,EAAAA,OAAO,GAAGA,OAAO,GAAG,EAAV,GAAe,MAAMA,OAArB,GAA+BA,OAAzC;;AAEA,MAAID,OAAO,GAAG,IAAd,EAAoB;AAClBD,IAAAA,CAAC,GAAGC,OAAO,GAAG,GAAV,GAAgBC,OAApB;AACD,GAFD,MAEO;AACLF,IAAAA,CAAC,GAAGE,OAAJ;AACD;;AACD,SAAOF,CAAP;AACD;;AAED,eAAef,OAAf","sourcesContent":["const reducer = (\r\n  state = {\r\n    time:\r\n      localStorage.getItem(\"time\") === null\r\n        ? 30\r\n        : parseInt(localStorage.getItem(\"time\")),\r\n    liveTime:\r\n      localStorage.getItem(\"time\") === null\r\n        ? 30\r\n        : parseInt(localStorage.getItem(\"time\")),\r\n    calculatedTime:{forDisplay:calculateTime(localStorage.getItem(\"time\") === null\r\n    ? 30\r\n    : parseInt(localStorage.getItem(\"time\")),)}\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"RESET_LIVE_TIME\":\r\n      return { ...state, liveTime: state.time };\r\n    case \"DECREMENT_LIVE_TIME\":\r\n      return { ...state, liveTime: state.liveTime - 1 };\r\n    case \"UPDATE_TEST_TIMER\":\r\n      localStorage.setItem(\"time\", action.payload);\r\n      return {\r\n        time:\r\n          localStorage.getItem(\"time\") === null\r\n            ? 30\r\n            : parseInt(localStorage.getItem(\"time\")),\r\n        liveTime:\r\n          localStorage.getItem(\"time\") === null\r\n            ? 30\r\n            : parseInt(localStorage.getItem(\"time\")),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction displayTime(time) {\r\n  let r;\r\n  let minutes = parseInt(time / 60, 10);\r\n  let seconds = parseInt(time % 60, 10);\r\n\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n  if (minutes > \"00\") {\r\n    r = minutes + \":\" + seconds;\r\n  } else {\r\n    r = seconds;\r\n  }\r\n  return r;\r\n}\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}