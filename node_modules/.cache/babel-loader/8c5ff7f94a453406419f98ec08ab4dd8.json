{"ast":null,"code":"var _jsxFileName = \"D:\\\\APEX_TYPER\\\\apex_typer_5.0\\\\src\\\\components\\\\CountdownTimer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { decrementTestTimer, resetTestTimer } from \"../state/action-creators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CountdownTimer(props) {\n  _s();\n\n  // states and functions for showing the countdown timer once the test starts\n  const time = useSelector(state => state.testTimer);\n  const dispatch = useDispatch();\n\n  function startTimer() {\n    setInterval(function () {\n      console.log(time);\n\n      if (time - 1 < 0) {\n        dispatch(resetTestTimer());\n      } else {\n        dispatch(decrementTestTimer());\n      }\n    }, 1000);\n  }\n\n  useEffect(() => {\n    if (props.testOn && time > 0) {\n      startTimer();\n    }\n  }, [props.testOn]);\n\n  function displayTime(time) {\n    let r;\n    let minutes = parseInt(time / 60, 10);\n    let seconds = parseInt(time % 60, 10);\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n    if (minutes > \"00\") {\n      r = minutes + \":\" + seconds;\n    } else {\n      r = seconds;\n    }\n\n    return r;\n  }\n\n  return /*#__PURE__*/_jsxDEV(TimeView, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"time-view\",\n      children: displayTime(time)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountdownTimer, \"6tQdg67cKdEGYqXp7T9L5ZNPJN8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CountdownTimer;\nexport default CountdownTimer;\nconst TimeView = styled.div``;\n_c2 = TimeView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CountdownTimer\");\n$RefreshReg$(_c2, \"TimeView\");","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/components/CountdownTimer.js"],"names":["React","useState","useEffect","useDispatch","useSelector","styled","decrementTestTimer","resetTestTimer","CountdownTimer","props","time","state","testTimer","dispatch","startTimer","setInterval","console","log","testOn","displayTime","r","minutes","parseInt","seconds","TimeView","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,kBAAT,EAA6BC,cAA7B,QAAmD,0BAAnD;;;AAEA,SAASC,cAAT,CAAwBC,KAAxB,EAA+B;AAAA;;AAC7B;AAEA,QAAMC,IAAI,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,SAAlB,CAAxB;AACA,QAAMC,QAAQ,GAAGV,WAAW,EAA5B;;AAEA,WAASW,UAAT,GAAsB;AACpBC,IAAAA,WAAW,CAAC,YAAY;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ;;AACA,UAAIA,IAAI,GAAC,CAAL,GAAS,CAAb,EAAgB;AACdG,QAAAA,QAAQ,CAACN,cAAc,EAAf,CAAR;AACD,OAFD,MAEO;AACLM,QAAAA,QAAQ,CAACP,kBAAkB,EAAnB,CAAR;AACD;AACF,KAPU,EAOR,IAPQ,CAAX;AAQD;;AAEDJ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,KAAK,CAACS,MAAN,IAAgBR,IAAI,GAAG,CAA3B,EAA8B;AAC5BI,MAAAA,UAAU;AACX;AACF,GAJQ,EAIN,CAACL,KAAK,CAACS,MAAP,CAJM,CAAT;;AAMA,WAASC,WAAT,CAAqBT,IAArB,EAA2B;AACzB,QAAIU,CAAJ;AACA,QAAIC,OAAO,GAAGC,QAAQ,CAACZ,IAAI,GAAG,EAAR,EAAY,EAAZ,CAAtB;AACA,QAAIa,OAAO,GAAGD,QAAQ,CAACZ,IAAI,GAAG,EAAR,EAAY,EAAZ,CAAtB;AAEAW,IAAAA,OAAO,GAAGA,OAAO,GAAG,EAAV,GAAe,MAAMA,OAArB,GAA+BA,OAAzC;AACAE,IAAAA,OAAO,GAAGA,OAAO,GAAG,EAAV,GAAe,MAAMA,OAArB,GAA+BA,OAAzC;;AAEA,QAAIF,OAAO,GAAG,IAAd,EAAoB;AAClBD,MAAAA,CAAC,GAAGC,OAAO,GAAG,GAAV,GAAgBE,OAApB;AACD,KAFD,MAEO;AACLH,MAAAA,CAAC,GAAGG,OAAJ;AACD;;AACD,WAAOH,CAAP;AACD;;AAED,sBACE,QAAC,QAAD;AAAA,2BACE;AAAG,MAAA,EAAE,EAAC,WAAN;AAAA,gBAAmBD,WAAW,CAACT,IAAD;AAA9B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GA5CQF,c;UAGMJ,W,EACID,W;;;KAJVK,c;AA8CT,eAAeA,cAAf;AAEA,MAAMgB,QAAQ,GAAGnB,MAAM,CAACoB,GAAI,EAA5B;MAAMD,Q","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { decrementTestTimer, resetTestTimer } from \"../state/action-creators\";\r\n\r\nfunction CountdownTimer(props) {\r\n  // states and functions for showing the countdown timer once the test starts\r\n\r\n  const time = useSelector((state) => state.testTimer);\r\n  const dispatch = useDispatch();\r\n\r\n  function startTimer() {\r\n    setInterval(function () {\r\n      console.log(time);\r\n      if (time-1 < 0) {\r\n        dispatch(resetTestTimer());\r\n      } else {\r\n        dispatch(decrementTestTimer());\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (props.testOn && time > 0) {\r\n      startTimer();\r\n    }\r\n  }, [props.testOn]);\r\n\r\n  function displayTime(time) {\r\n    let r;\r\n    let minutes = parseInt(time / 60, 10);\r\n    let seconds = parseInt(time % 60, 10);\r\n\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n    if (minutes > \"00\") {\r\n      r = minutes + \":\" + seconds;\r\n    } else {\r\n      r = seconds;\r\n    }\r\n    return r;\r\n  }\r\n\r\n  return (\r\n    <TimeView>\r\n      <p id=\"time-view\">{displayTime(time)}</p>\r\n    </TimeView>\r\n  );\r\n}\r\n\r\nexport default CountdownTimer;\r\n\r\nconst TimeView = styled.div``;\r\n"]},"metadata":{},"sourceType":"module"}