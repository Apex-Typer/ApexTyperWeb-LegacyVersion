{"ast":null,"code":"const reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    time: localStorage.getItem(\"time\") === null ? 30 : parseInt(localStorage.getItem(\"time\")),\n    liveTime: localStorage.getItem(\"time\") === null ? 30 : parseInt(localStorage.getItem(\"time\")),\n    forDisplay: displayTime(localStorage.getItem(\"time\") === null ? 30 : parseInt(localStorage.getItem(\"time\")))\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"RESET_LIVE_TIME\":\n      return { ...state,\n        liveTime: state.time,\n        forDisplay: displayTime(state.time)\n      };\n\n    case \"DECREMENT_LIVE_TIME\":\n      return { ...state,\n        liveTime: state.liveTime - 1,\n        forDisplay: displayTime(state.liveTime - 1)\n      };\n\n    case \"UPDATE_TEST_TIMER\":\n      localStorage.setItem(\"time\", action.payload);\n      return {\n        time: parseInt(localStorage.getItem(\"time\")),\n        liveTime: parseInt(localStorage.getItem(\"time\")),\n        forDisplay: displayTime(parseInt(localStorage.getItem(\"time\")))\n      };\n\n    case \"START_COUNTDOWN_TIMER\":\n      startCountDownTimer(state);\n\n    default:\n      return state;\n  }\n};\n\nfunction displayTime(time) {\n  let minutes = parseInt(time / 60, 10);\n  let seconds = parseInt(time % 60, 10);\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\n  return {\n    minutes: minutes,\n    seconds: seconds\n  };\n}\n\nexport default reducer;","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/state/reducers/testTimer.js"],"names":["reducer","state","time","localStorage","getItem","parseInt","liveTime","forDisplay","displayTime","action","type","setItem","payload","startCountDownTimer","minutes","seconds"],"mappings":"AAAA,MAAMA,OAAO,GAAG,YAiBX;AAAA,MAhBHC,KAgBG,uEAhBK;AACNC,IAAAA,IAAI,EACFC,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,IAAjC,GACI,EADJ,GAEIC,QAAQ,CAACF,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAJR;AAKNE,IAAAA,QAAQ,EACNH,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,IAAjC,GACI,EADJ,GAEIC,QAAQ,CAACF,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CARR;AASNG,IAAAA,UAAU,EAAEC,WAAW,CACrBL,YAAY,CAACC,OAAb,CAAqB,MAArB,MAAiC,IAAjC,GACI,EADJ,GAEIC,QAAQ,CAACF,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAHS;AATjB,GAgBL;AAAA,MADHK,MACG;;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,aAAO,EACL,GAAGT,KADE;AAELK,QAAAA,QAAQ,EAAEL,KAAK,CAACC,IAFX;AAGLK,QAAAA,UAAU,EAAEC,WAAW,CAACP,KAAK,CAACC,IAAP;AAHlB,OAAP;;AAKF,SAAK,qBAAL;AACE,aAAO,EACL,GAAGD,KADE;AAELK,QAAAA,QAAQ,EAAEL,KAAK,CAACK,QAAN,GAAiB,CAFtB;AAGLC,QAAAA,UAAU,EAAEC,WAAW,CAACP,KAAK,CAACK,QAAN,GAAiB,CAAlB;AAHlB,OAAP;;AAKF,SAAK,mBAAL;AACEH,MAAAA,YAAY,CAACQ,OAAb,CAAqB,MAArB,EAA6BF,MAAM,CAACG,OAApC;AACA,aAAO;AACLV,QAAAA,IAAI,EAAEG,QAAQ,CAACF,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CADT;AAELE,QAAAA,QAAQ,EAAED,QAAQ,CAACF,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAFb;AAGLG,QAAAA,UAAU,EAAEC,WAAW,CAACH,QAAQ,CAACF,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAD,CAAT;AAHlB,OAAP;;AAKF,SAAK,uBAAL;AACES,MAAAA,mBAAmB,CAACZ,KAAD,CAAnB;;AACF;AACE,aAAOA,KAAP;AAvBJ;AAyBD,CA3CD;;AA6CA,SAASO,WAAT,CAAqBN,IAArB,EAA2B;AACzB,MAAIY,OAAO,GAAGT,QAAQ,CAACH,IAAI,GAAG,EAAR,EAAY,EAAZ,CAAtB;AACA,MAAIa,OAAO,GAAGV,QAAQ,CAACH,IAAI,GAAG,EAAR,EAAY,EAAZ,CAAtB;AAEAY,EAAAA,OAAO,GAAGA,OAAO,GAAG,EAAV,GAAe,MAAMA,OAArB,GAA+BA,OAAzC;AACAC,EAAAA,OAAO,GAAGA,OAAO,GAAG,EAAV,GAAe,MAAMA,OAArB,GAA+BA,OAAzC;AAEA,SAAO;AAAED,IAAAA,OAAO,EAAEA,OAAX;AAAoBC,IAAAA,OAAO,EAAEA;AAA7B,GAAP;AACD;;AAGD,eAAef,OAAf","sourcesContent":["const reducer = (\r\n  state = {\r\n    time:\r\n      localStorage.getItem(\"time\") === null\r\n        ? 30\r\n        : parseInt(localStorage.getItem(\"time\")),\r\n    liveTime:\r\n      localStorage.getItem(\"time\") === null\r\n        ? 30\r\n        : parseInt(localStorage.getItem(\"time\")),\r\n    forDisplay: displayTime(\r\n      localStorage.getItem(\"time\") === null\r\n        ? 30\r\n        : parseInt(localStorage.getItem(\"time\"))\r\n    ),\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"RESET_LIVE_TIME\":\r\n      return {\r\n        ...state,\r\n        liveTime: state.time,\r\n        forDisplay: displayTime(state.time),\r\n      };\r\n    case \"DECREMENT_LIVE_TIME\":\r\n      return {\r\n        ...state,\r\n        liveTime: state.liveTime - 1,\r\n        forDisplay: displayTime(state.liveTime - 1),\r\n      };\r\n    case \"UPDATE_TEST_TIMER\":\r\n      localStorage.setItem(\"time\", action.payload);\r\n      return {\r\n        time: parseInt(localStorage.getItem(\"time\")),\r\n        liveTime: parseInt(localStorage.getItem(\"time\")),\r\n        forDisplay: displayTime(parseInt(localStorage.getItem(\"time\"))),\r\n      };\r\n    case \"START_COUNTDOWN_TIMER\":\r\n      startCountDownTimer(state)\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction displayTime(time) {\r\n  let minutes = parseInt(time / 60, 10);\r\n  let seconds = parseInt(time % 60, 10);\r\n\r\n  minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n  return { minutes: minutes, seconds: seconds };\r\n}\r\n\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}