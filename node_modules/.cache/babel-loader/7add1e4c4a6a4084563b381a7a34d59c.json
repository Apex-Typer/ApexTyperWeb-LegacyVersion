{"ast":null,"code":"var _jsxFileName = \"D:\\\\APEX_TYPER\\\\apex_typer_5.0\\\\src\\\\components\\\\TextInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TextInput(props) {\n  _s();\n\n  const [currentWord, setCurrentWord] = useState({\n    key: 1,\n    id: \"word-1\",\n    word: \"\",\n    width: 0,\n    left: 0\n  });\n  var wrong = false;\n  useEffect(() => {\n    setCurrentWord(prevWord => ({ ...prevWord,\n      word: document.getElementById(currentWord.id).innerText,\n      width: document.getElementById(currentWord.id).offsetWidth,\n      left: document.getElementById(currentWord.id).offsetLeft - document.getElementById(currentWord.id).parentElement.offsetLeft\n    }));\n  }, []);\n\n  function wordIncrementer() {\n    setCurrentWord(prevWord => ({\n      key: prevWord.key + 1,\n      word: document.getElementById(`word-${prevWord.key + 1}`).innerText,\n      width: document.getElementById(`word-${prevWord.key + 1}`).offsetWidth,\n      left: document.getElementById(`word-${prevWord.key + 1}`).offsetLeft - document.getElementById(`word-${prevWord.key + 1}`).parentElement.offsetLeft\n    }));\n  }\n\n  function textInputEvaluater(e) {\n    let enteredValue = e.target.value.replace(/\\s/g, \"\");\n    wrong = false;\n    document.getElementById(currentWord.id).classList.remove(\"right-warning\");\n    document.getElementById(currentWord.id).classList.remove(\"wrong-warning\");\n\n    if (enteredValue != currentWord.word.slice(0, enteredValue.length)) {\n      document.getElementById(currentWord.id).classList.add(\"wrong-warning\");\n      wrong = true;\n    } else if (enteredValue == currentWord.word) {\n      document.getElementById(currentWord.id).classList.add(\"right-warning\");\n    }\n  }\n\n  function textInputClickHandler(e) {\n    console.log(e.keyCode);\n\n    if (e.keyCode == 32 && e.target.value != \"\") {\n      e.preventDefault();\n      wordIncrementer();\n    } else {\n      textInputEvaluater(e);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    width: `${currentWord.width}px`,\n    left: `${currentWord.left}px`,\n    onKeyDown: e => setTimeout(() => {\n      textInputClickHandler(e);\n    }, 1)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TextInput, \"KH2sBSrN09OGVelMOSG3ktXbWmo=\");\n\n_c = TextInput;\nexport default TextInput;\nconst Container = styled.input`\n  background-color: transparent;\n  border: none;\n  border-bottom: #aaa solid 2px;\n  caret-color: #ffff;\n  font-size: 1.2em;\n  text-align: center;\n  margin: 10px 0 20px;\n  padding: 3px 3px 5px;\n  color: #ffff;\n  width: ${props => props.width};\n  transform: translateX(${props => props.left});\n  transition: all 150ms ease-in-out;\n\n  &:focus {\n    outline: none;\n  }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextInput\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/components/TextInput.js"],"names":["React","useState","useEffect","useRef","styled","TextInput","props","currentWord","setCurrentWord","key","id","word","width","left","wrong","prevWord","document","getElementById","innerText","offsetWidth","offsetLeft","parentElement","wordIncrementer","textInputEvaluater","e","enteredValue","target","value","replace","classList","remove","slice","length","add","textInputClickHandler","console","log","keyCode","preventDefault","setTimeout","Container","input"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction TextInput(props) {\r\n  const [currentWord, setCurrentWord] = useState({\r\n    key: 1,\r\n    id: \"word-1\",\r\n    word: \"\",\r\n    width: 0,\r\n    left: 0,\r\n  });\r\n\r\n  var wrong = false;\r\n\r\n  useEffect(() => {\r\n    setCurrentWord((prevWord) => ({\r\n      ...prevWord,\r\n      word: document.getElementById(currentWord.id).innerText,\r\n      width: document.getElementById(currentWord.id).offsetWidth,\r\n      left:\r\n        document.getElementById(currentWord.id).offsetLeft -\r\n        document.getElementById(currentWord.id).parentElement.offsetLeft,\r\n    }));\r\n  }, []);\r\n\r\n  function wordIncrementer() {\r\n    setCurrentWord((prevWord) => ({\r\n      key: prevWord.key + 1,\r\n      word: document.getElementById(`word-${prevWord.key + 1}`).innerText,\r\n      width: document.getElementById(`word-${prevWord.key + 1}`).offsetWidth,\r\n      left:\r\n        document.getElementById(`word-${prevWord.key + 1}`).offsetLeft -\r\n        document.getElementById(`word-${prevWord.key + 1}`).parentElement\r\n          .offsetLeft,\r\n    }));\r\n  }\r\n\r\n  function textInputEvaluater(e) {\r\n    let enteredValue = e.target.value.replace(/\\s/g, \"\");\r\n    wrong = false;\r\n    document.getElementById(currentWord.id).classList.remove(\"right-warning\");\r\n    document.getElementById(currentWord.id).classList.remove(\"wrong-warning\");\r\n    if (enteredValue != currentWord.word.slice(0, enteredValue.length)) {\r\n      document.getElementById(currentWord.id).classList.add(\"wrong-warning\");\r\n      wrong = true;\r\n    } else if (enteredValue == currentWord.word) {\r\n      document.getElementById(currentWord.id).classList.add(\"right-warning\");\r\n    }\r\n  }\r\n\r\n  function textInputClickHandler(e) {\r\n    console.log(e.keyCode);\r\n    if (e.keyCode == 32 && e.target.value != \"\") {\r\n      e.preventDefault();\r\n      wordIncrementer();\r\n    } else {\r\n      textInputEvaluater(e);\r\n    }\r\n  }\r\n  return (\r\n    <Container\r\n      width={`${currentWord.width}px`}\r\n      left={`${currentWord.left}px`}\r\n      onKeyDown={(e) =>\r\n        setTimeout(() => {\r\n          textInputClickHandler(e);\r\n        }, 1)\r\n      }\r\n    ></Container>\r\n  );\r\n}\r\n\r\nexport default TextInput;\r\n\r\nconst Container = styled.input`\r\n  background-color: transparent;\r\n  border: none;\r\n  border-bottom: #aaa solid 2px;\r\n  caret-color: #ffff;\r\n  font-size: 1.2em;\r\n  text-align: center;\r\n  margin: 10px 0 20px;\r\n  padding: 3px 3px 5px;\r\n  color: #ffff;\r\n  width: ${(props) => props.width};\r\n  transform: translateX(${(props) => props.left});\r\n  transition: all 150ms ease-in-out;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}