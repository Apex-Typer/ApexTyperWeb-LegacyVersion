{"ast":null,"code":"export const firstWord = () => {\n  return {\n    type: \"FIRST_WORD\"\n  };\n};\nexport const confirmWord = currentWord => {\n  return {\n    type: \"CONFIRM_WORD\",\n    payload: {\n      currentWord,\n      rawWor\n    }\n  };\n};\nexport const resetWord = () => {\n  return {\n    type: \"RESET_WORD\"\n  };\n};\nexport const nextWord = () => {\n  return {\n    type: \"NEXT_WORD\"\n  };\n};\nexport const prevWord = () => {\n  return {\n    type: \"PREVIOUS_WORD\"\n  };\n};\nexport const updateInput = (enteredWord, currentWord) => {\n  return {\n    type: \"UPDATE_INPUT\",\n    payload: {\n      enteredWord,\n      currentWord\n    }\n  };\n};\nexport const resetInput = () => {\n  return {\n    type: \"RESET_INPUT\",\n    payload: \"\"\n  };\n};\nexport const newWords = () => {\n  return {\n    type: \"NEW_WORDS\"\n  };\n};\nexport const updateCurrentWord = (currentWord, enteredWord) => {\n  return {\n    type: \"UPDATE_CURRENT_WORD\",\n    payload: {\n      currentWord,\n      enteredWord,\n      blinkCurrentLetter: true,\n      wordChanged: false\n    }\n  };\n};\nexport const updateAndChangeCurrentWord = (currentWord, enteredWord) => {\n  return {\n    type: \"UPDATE_CURRENT_WORD\",\n    payload: {\n      currentWord,\n      enteredWord,\n      blinkCurrentLetter: false,\n      wordChanged: true\n    }\n  };\n};\nexport const inactivateCurrentWord = (currentWord, enteredWord) => {\n  return {\n    type: \"UPDATE_CURRENT_WORD\",\n    payload: {\n      currentWord,\n      enteredWord,\n      blinkCurrentLetter: false,\n      wordChanged: false\n    }\n  };\n};\nexport const updateInputLog = (currentWord, enteredWord) => {\n  return {\n    type: \"UPDATE_INPUT_LOG\",\n    payload: {\n      currentWord,\n      enteredWord\n    }\n  };\n};\nexport const focusInput = () => {\n  return {\n    type: \"FOCUS_INPUT\"\n  };\n};\nexport const blurInput = () => {\n  return {\n    type: \"BLUR_INPUT\"\n  };\n};","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/state/action-creators/index.js"],"names":["firstWord","type","confirmWord","currentWord","payload","rawWor","resetWord","nextWord","prevWord","updateInput","enteredWord","resetInput","newWords","updateCurrentWord","blinkCurrentLetter","wordChanged","updateAndChangeCurrentWord","inactivateCurrentWord","updateInputLog","focusInput","blurInput"],"mappings":"AAAA,OAAO,MAAMA,SAAS,GAAG,MAAM;AAC7B,SAAO;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAFM;AAGP,OAAO,MAAMC,WAAW,GAAIC,WAAD,IAAiB;AAC1C,SAAO;AAAEF,IAAAA,IAAI,EAAE,cAAR;AAAwBG,IAAAA,OAAO,EAAE;AAACD,MAAAA,WAAD;AAAaE,MAAAA;AAAb;AAAjC,GAAP;AACD,CAFM;AAIP,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,SAAO;AAAEL,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAFM;AAIP,OAAO,MAAMM,QAAQ,GAAG,MAAM;AAC5B,SAAO;AAAEN,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAFM;AAIP,OAAO,MAAMO,QAAQ,GAAG,MAAM;AAC5B,SAAO;AAAEP,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAFM;AAIP,OAAO,MAAMQ,WAAW,GAAG,CAACC,WAAD,EAAcP,WAAd,KAA8B;AACvD,SAAO;AAAEF,IAAAA,IAAI,EAAE,cAAR;AAAwBG,IAAAA,OAAO,EAAE;AAAEM,MAAAA,WAAF;AAAeP,MAAAA;AAAf;AAAjC,GAAP;AACD,CAFM;AAIP,OAAO,MAAMQ,UAAU,GAAG,MAAM;AAC9B,SAAO;AAAEV,IAAAA,IAAI,EAAE,aAAR;AAAuBG,IAAAA,OAAO,EAAE;AAAhC,GAAP;AACD,CAFM;AAIP,OAAO,MAAMQ,QAAQ,GAAG,MAAM;AAC5B,SAAO;AAAEX,IAAAA,IAAI,EAAE;AAAR,GAAP;AACD,CAFM;AAIP,OAAO,MAAMY,iBAAiB,GAAG,CAACV,WAAD,EAAcO,WAAd,KAA8B;AAC7D,SAAO;AACLT,IAAAA,IAAI,EAAE,qBADD;AAELG,IAAAA,OAAO,EAAE;AACPD,MAAAA,WADO;AAEPO,MAAAA,WAFO;AAGPI,MAAAA,kBAAkB,EAAE,IAHb;AAIPC,MAAAA,WAAW,EAAE;AAJN;AAFJ,GAAP;AASD,CAVM;AAYP,OAAO,MAAMC,0BAA0B,GAAG,CAACb,WAAD,EAAcO,WAAd,KAA8B;AACtE,SAAO;AACLT,IAAAA,IAAI,EAAE,qBADD;AAELG,IAAAA,OAAO,EAAE;AACPD,MAAAA,WADO;AAEPO,MAAAA,WAFO;AAGPI,MAAAA,kBAAkB,EAAE,KAHb;AAIPC,MAAAA,WAAW,EAAE;AAJN;AAFJ,GAAP;AASD,CAVM;AAYP,OAAO,MAAME,qBAAqB,GAAG,CAACd,WAAD,EAAcO,WAAd,KAA8B;AACjE,SAAO;AACLT,IAAAA,IAAI,EAAE,qBADD;AAELG,IAAAA,OAAO,EAAE;AACPD,MAAAA,WADO;AAEPO,MAAAA,WAFO;AAGPI,MAAAA,kBAAkB,EAAE,KAHb;AAIPC,MAAAA,WAAW,EAAE;AAJN;AAFJ,GAAP;AASD,CAVM;AAYP,OAAO,MAAMG,cAAc,GAAG,CAACf,WAAD,EAAcO,WAAd,KAA8B;AAC1D,SAAO;AACLT,IAAAA,IAAI,EAAE,kBADD;AAELG,IAAAA,OAAO,EAAE;AACPD,MAAAA,WADO;AAEPO,MAAAA;AAFO;AAFJ,GAAP;AAOD,CARM;AAUP,OAAO,MAAMS,UAAU,GAAG,MAAM;AAC9B,SAAO;AACLlB,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAKP,OAAO,MAAMmB,SAAS,GAAG,MAAM;AAC7B,SAAO;AACLnB,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM","sourcesContent":["export const firstWord = () => {\r\n  return { type: \"FIRST_WORD\" };\r\n};\r\nexport const confirmWord = (currentWord) => {\r\n  return { type: \"CONFIRM_WORD\", payload: {currentWord,rawWor} };\r\n};\r\n\r\nexport const resetWord = () => {\r\n  return { type: \"RESET_WORD\" };\r\n};\r\n\r\nexport const nextWord = () => {\r\n  return { type: \"NEXT_WORD\" };\r\n};\r\n\r\nexport const prevWord = () => {\r\n  return { type: \"PREVIOUS_WORD\" };\r\n};\r\n\r\nexport const updateInput = (enteredWord, currentWord) => {\r\n  return { type: \"UPDATE_INPUT\", payload: { enteredWord, currentWord } };\r\n};\r\n\r\nexport const resetInput = () => {\r\n  return { type: \"RESET_INPUT\", payload: \"\" };\r\n};\r\n\r\nexport const newWords = () => {\r\n  return { type: \"NEW_WORDS\" };\r\n};\r\n\r\nexport const updateCurrentWord = (currentWord, enteredWord) => {\r\n  return {\r\n    type: \"UPDATE_CURRENT_WORD\",\r\n    payload: {\r\n      currentWord,\r\n      enteredWord,\r\n      blinkCurrentLetter: true,\r\n      wordChanged: false,\r\n    },\r\n  };\r\n};\r\n\r\nexport const updateAndChangeCurrentWord = (currentWord, enteredWord) => {\r\n  return {\r\n    type: \"UPDATE_CURRENT_WORD\",\r\n    payload: {\r\n      currentWord,\r\n      enteredWord,\r\n      blinkCurrentLetter: false,\r\n      wordChanged: true,\r\n    },\r\n  };\r\n};\r\n\r\nexport const inactivateCurrentWord = (currentWord, enteredWord) => {\r\n  return {\r\n    type: \"UPDATE_CURRENT_WORD\",\r\n    payload: {\r\n      currentWord,\r\n      enteredWord,\r\n      blinkCurrentLetter: false,\r\n      wordChanged: false,\r\n    },\r\n  };\r\n};\r\n\r\nexport const updateInputLog = (currentWord, enteredWord) => {\r\n  return {\r\n    type: \"UPDATE_INPUT_LOG\",\r\n    payload: {\r\n      currentWord,\r\n      enteredWord,\r\n    },\r\n  };\r\n};\r\n\r\nexport const focusInput = () => {\r\n  return {\r\n    type: \"FOCUS_INPUT\",\r\n  };\r\n};\r\nexport const blurInput = () => {\r\n  return {\r\n    type: \"BLUR_INPUT\",\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}