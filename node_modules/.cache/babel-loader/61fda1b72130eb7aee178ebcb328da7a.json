{"ast":null,"code":"var _jsxFileName = \"D:\\\\APEX_TYPER\\\\apex_typer_5.0\\\\src\\\\components\\\\Test.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport words from \"./wordsData\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Test() {\n  _s();\n\n  function testWordsLoader() {\n    let j = 500;\n    let wordList = [];\n    let prevRanNum = 0;\n\n    for (let i = 0; i < j; i++) {\n      var r = Math.floor(Math.random() * words.length);\n\n      if (r == prevRanNum) {\n        r++;\n      }\n\n      const word = words[r];\n      let letterArray = [];\n\n      for (let l = 0; l < word.length; l++) {\n        letterArray.push( /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"letter\",\n          children: word[l]\n        }, `word-${i + 1}-letter-${l + 1}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this));\n      }\n\n      wordList.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `test-words${i == 0 ? \" current-word\" : \"\"}`,\n        id: `word-${i + 1}`,\n        children: letterArray\n      }, `word-${i + 1}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this));\n      wordList.push( /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }, this));\n    }\n\n    return wordList;\n  }\n\n  useEffect(() => {\n    const TestWordsHtml = testWordsLoader();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      width: \"50px\",\n      position: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TestContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Test, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Test;\nexport default Test;\nconst Container = styled.div``;\n_c2 = Container;\nconst TextInput = styled.input`\n  background-color: transparent;\n  border: none;\n  border-bottom: #aaa solid 2px;\n  caret-color: #ffff;\n  font-size: 1.2em;\n  text-align: center;\n  margin: 20px 0 10px;\n  padding: 3px 3px 5px;\n  color: #ffff;\n  width: ${props => props.width};\n\n  &:focus {\n    outline: none;\n  }\n`;\n_c3 = TextInput;\nconst TestContent = styled.div`\n  height: 80px;\n  overflow: hidden;\n  font-size: 1.25em;\n  line-height: 40px;\n\n  .test-words {\n    padding: 3px 3px 5px 3px;\n    margin: 5px 5px 20px 5px;\n  }\n\n  .current-word {\n    background-color: #aaa;\n    color: #1b1b1e;\n    border-radius: 3px;\n  }\n`;\n_c4 = TestContent;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Test\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"TextInput\");\n$RefreshReg$(_c4, \"TestContent\");","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/components/Test.js"],"names":["React","styled","words","Test","testWordsLoader","j","wordList","prevRanNum","i","r","Math","floor","random","length","word","letterArray","l","push","useEffect","TestWordsHtml","Container","div","TextInput","input","props","width","TestContent"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,aAAlB;;;AAEA,SAASC,IAAT,GAAgB;AAAA;;AACd,WAASC,eAAT,GAA2B;AACzB,QAAIC,CAAC,GAAG,GAAR;AACA,QAAIC,QAAQ,GAAG,EAAf;AACA,QAAIC,UAAU,GAAG,CAAjB;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAApB,EAAuBG,CAAC,EAAxB,EAA4B;AAC1B,UAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBV,KAAK,CAACW,MAAjC,CAAR;;AACA,UAAIJ,CAAC,IAAIF,UAAT,EAAqB;AACnBE,QAAAA,CAAC;AACF;;AACD,YAAMK,IAAI,GAAGZ,KAAK,CAACO,CAAD,CAAlB;AACA,UAAIM,WAAW,GAAG,EAAlB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACD,MAAzB,EAAiCG,CAAC,EAAlC,EAAsC;AACpCD,QAAAA,WAAW,CAACE,IAAZ,eACE;AAA4C,UAAA,SAAS,EAAC,QAAtD;AAAA,oBACGH,IAAI,CAACE,CAAD;AADP,WAAY,QAAOR,CAAC,GAAG,CAAE,WAAUQ,CAAC,GAAG,CAAE,EAAzC;AAAA;AAAA;AAAA;AAAA,gBADF;AAKD;;AACDV,MAAAA,QAAQ,CAACW,IAAT,eACE;AACE,QAAA,SAAS,EAAG,aAAYT,CAAC,IAAI,CAAL,GAAS,eAAT,GAA2B,EAAG,EADxD;AAEE,QAAA,EAAE,EAAG,QAAOA,CAAC,GAAG,CAAE,EAFpB;AAAA,kBAKGO;AALH,SAGQ,QAAOP,CAAC,GAAG,CAAE,EAHrB;AAAA;AAAA;AAAA;AAAA,cADF;AASAF,MAAAA,QAAQ,CAACW,IAAT,eAAc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAd;AACD;;AACD,WAAOX,QAAP;AACD;;AAEDY,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMC,aAAa,GAAGf,eAAe,EAArC;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,sBACE,QAAC,SAAD;AAAA,4BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAC,MAAjB;AAAwB,MAAA,QAAQ,EAAC;AAAjC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GA3CQD,I;;KAAAA,I;AA6CT,eAAeA,IAAf;AAEA,MAAMiB,SAAS,GAAGnB,MAAM,CAACoB,GAAI,EAA7B;MAAMD,S;AACN,MAAME,SAAS,GAAGrB,MAAM,CAACsB,KAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAYC,KAAD,IAAWA,KAAK,CAACC,KAAM;AAClC;AACA;AACA;AACA;AACA,CAfA;MAAMH,S;AAiBN,MAAMI,WAAW,GAAGzB,MAAM,CAACoB,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;MAAMK,W","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport words from \"./wordsData\";\r\n\r\nfunction Test() {\r\n  function testWordsLoader() {\r\n    let j = 500;\r\n    let wordList = [];\r\n    let prevRanNum = 0;\r\n    for (let i = 0; i < j; i++) {\r\n      var r = Math.floor(Math.random() * words.length);\r\n      if (r == prevRanNum) {\r\n        r++;\r\n      }\r\n      const word = words[r];\r\n      let letterArray = [];\r\n      for (let l = 0; l < word.length; l++) {\r\n        letterArray.push(\r\n          <span key={`word-${i + 1}-letter-${l + 1}`} className=\"letter\">\r\n            {word[l]}\r\n          </span>\r\n        );\r\n      }\r\n      wordList.push(\r\n        <span\r\n          className={`test-words${i == 0 ? \" current-word\" : \"\"}`}\r\n          id={`word-${i + 1}`}\r\n          key={`word-${i + 1}`}\r\n        >\r\n          {letterArray}\r\n        </span>\r\n      );\r\n      wordList.push(<span> </span>);\r\n    }\r\n    return wordList;\r\n  }\r\n\r\n  useEffect(() => {\r\n      const TestWordsHtml = testWordsLoader()\r\n  }, [])\r\n  \r\n  return (\r\n    <Container>\r\n      <TextInput width=\"50px\" position=\"\"></TextInput>\r\n      <TestContent>{}</TestContent>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n\r\nconst Container = styled.div``;\r\nconst TextInput = styled.input`\r\n  background-color: transparent;\r\n  border: none;\r\n  border-bottom: #aaa solid 2px;\r\n  caret-color: #ffff;\r\n  font-size: 1.2em;\r\n  text-align: center;\r\n  margin: 20px 0 10px;\r\n  padding: 3px 3px 5px;\r\n  color: #ffff;\r\n  width: ${(props) => props.width};\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst TestContent = styled.div`\r\n  height: 80px;\r\n  overflow: hidden;\r\n  font-size: 1.25em;\r\n  line-height: 40px;\r\n\r\n  .test-words {\r\n    padding: 3px 3px 5px 3px;\r\n    margin: 5px 5px 20px 5px;\r\n  }\r\n\r\n  .current-word {\r\n    background-color: #aaa;\r\n    color: #1b1b1e;\r\n    border-radius: 3px;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}