{"ast":null,"code":"import _taggedTemplateLiteral from\"D:/APEX_TYPER/apex_typer_5.0/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject;import React,{useState,useEffect,useRef,componentDidMount}from\"react\";import styled from\"styled-components\";import{useSelector,useDispatch}from\"react-redux\";import{firstWord,nextWord,prevWord,updateInput,resetInput,focusInput,blurInput,updateCurrentWord,updateAndChangeCurrentWord,confirmWord,updateInputLog,switchTestOn,incrementErrorLog,decrementErrorLog,inactivateCurrentWord}from\"../state/action-creators/index\";import{jsx as _jsx}from\"react/jsx-runtime\";function TextInput(){var currentWord=useSelector(function(state){return state.currentWord;});var time=useSelector(function(state){return state.testTimer.time;});var enteredWord=useSelector(function(state){return state.enteredWord;});var inputLog=useSelector(function(state){return state.inputLog.log;});var errorLog=useSelector(function(state){return state.inputLog.errors;});var testWords=useSelector(function(state){return state.testWords;});var testOn=useSelector(function(state){return state.testOn;});var inputFocused=useSelector(function(state){return state.inputFocused;});var dispatch=useDispatch();var inputRef=useRef(null);var testContentScrollerCount=useRef(0);useEffect(function(){if(currentWord.key>0){if(inputRef.current&&document.activeElement!=inputRef.current){inputRef.current.focus();}var currentLineHeight=parseInt(window.getComputedStyle(document.getElementById(\"TestContent\")).getPropertyValue(\"line-height\"));if(currentWord.top==0){testContentScrollerCount.current=0;document.getElementById(\"TestContentChild\").style.transform=\"translateY(\".concat(currentLineHeight,\"px)\");}else if(currentWord.top-currentLineHeight*testContentScrollerCount.current!=0){testContentScroller();}if(currentWord.key<=inputLog.length&&enteredWord.word==\"\"){dispatch(updateInput(inputLog[currentWord.index].word,currentWord.word));if(inputLog[currentWord.index].isWrong){dispatch(decrementErrorLog());}dispatch(updateInputLog(currentWord,enteredWord));}}},[currentWord]);useEffect(function(){if(currentWord.key>0){dispatch(updateCurrentWord(currentWord,enteredWord));}},[enteredWord]);useEffect(function(){if(enteredWord.isWrong){dispatch(incrementErrorLog());}},[enteredWord.isWrong]);function testContentScroller(){var currentLineHeight=parseInt(window.getComputedStyle(document.getElementById(\"TestContent\")).getPropertyValue(\"line-height\"));var topOffsetFactor=(currentWord.top-currentLineHeight*testContentScrollerCount.current)/currentLineHeight;testContentScrollerCount.current=testContentScrollerCount.current+topOffsetFactor;document.getElementById(\"TestContentChild\").style.transform=\"translateY(\".concat(-1*(currentLineHeight*testContentScrollerCount.current-currentLineHeight),\"px)\");}function textInputChangeHandler(e){// let enteredValue = String(e.target.value.replace(/\\s/g, \"\"));\nvar enteredValue=e.target.value;if(enteredValue.indexOf(\" \")>0){dispatch(updateAndChangeCurrentWord(currentWord,enteredWord));dispatch(updateInputLog(currentWord,enteredWord));dispatch(nextWord(testWords.rawWords));dispatch(resetInput());}else if(enteredValue!=\" \"){dispatch(updateInput(enteredValue,currentWord.word));if(!testOn&&currentWord.key==1&&enteredValue!=\"\"&&time!=0){dispatch(switchTestOn());}}else{resetInput();}}function keyDownHandler(e){var keyClicked=e.nativeEvent.code;var enteredValue=String(e.target.value.replace(/\\s/g,\"\"));// if (keyClicked == \"Space\" && enteredValue != \"\") {\n//   dispatch(updateAndChangeCurrentWord(currentWord, enteredWord));\n//   dispatch(updateInputLog(currentWord, enteredWord));\n//   dispatch(nextWord(testWords.rawWords));\n//   dispatch(resetInput());\n// } else\nif(keyClicked==\"Backspace\"&&enteredValue==\"\"&&currentWord.key>1&&!inputLog[currentWord.index-1].isComplete){dispatch(updateAndChangeCurrentWord(currentWord,enteredWord));dispatch(prevWord(testWords.rawWords));}}return/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(\"input\",{ref:inputRef,id:\"textInput\",autoFocus:true,autoCapitalize:\"off\",autoComplete:\"off\",spellCheck:false,maxLength:\"15\",value:enteredWord.word// onKeyDown={(e) => keyDownHandler(e)}\n,onKeyDown:function onKeyDown(e){return keyDownHandler(e);},onChange:function onChange(e){return textInputChangeHandler(e);},onBlur:function onBlur(){dispatch(blurInput());}})});}export default TextInput;var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  position: absolute;\\n\\n  input {\\n    background-color: transparent;\\n    border: none;\\n    cursor: default;\\n    border-bottom: \\\"none\\\";\\n    caret-color: transparent !important;\\n    font-size: 1.2em;\\n    font-family: \\\"Quicksand\\\", sans-serif;\\n    font-weight: 500;\\n    text-align: center;\\n    color: transparent;\\n    transition: all 150ms ease-in-out;\\n\\n    &:focus {\\n      outline: none;\\n    }\\n  }\\n\"])));","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/components/TextInput.js"],"names":["React","useState","useEffect","useRef","componentDidMount","styled","useSelector","useDispatch","firstWord","nextWord","prevWord","updateInput","resetInput","focusInput","blurInput","updateCurrentWord","updateAndChangeCurrentWord","confirmWord","updateInputLog","switchTestOn","incrementErrorLog","decrementErrorLog","inactivateCurrentWord","TextInput","currentWord","state","time","testTimer","enteredWord","inputLog","log","errorLog","errors","testWords","testOn","inputFocused","dispatch","inputRef","testContentScrollerCount","key","current","document","activeElement","focus","currentLineHeight","parseInt","window","getComputedStyle","getElementById","getPropertyValue","top","style","transform","testContentScroller","length","word","index","isWrong","topOffsetFactor","textInputChangeHandler","e","enteredValue","target","value","indexOf","rawWords","keyDownHandler","keyClicked","nativeEvent","code","String","replace","isComplete","Container","div"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef, componentDidMount } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  firstWord,\r\n  nextWord,\r\n  prevWord,\r\n  updateInput,\r\n  resetInput,\r\n  focusInput,\r\n  blurInput,\r\n  updateCurrentWord,\r\n  updateAndChangeCurrentWord,\r\n  confirmWord,\r\n  updateInputLog,\r\n  switchTestOn,\r\n  incrementErrorLog,\r\n  decrementErrorLog,\r\n  inactivateCurrentWord,\r\n\r\n} from \"../state/action-creators/index\";\r\n\r\nfunction TextInput() {\r\n  const currentWord = useSelector((state) => state.currentWord);\r\n  const time = useSelector((state) => state.testTimer.time);\r\n  const enteredWord = useSelector((state) => state.enteredWord);\r\n  const inputLog = useSelector((state) => state.inputLog.log);\r\n  const errorLog = useSelector((state) => state.inputLog.errors);\r\n  const testWords = useSelector((state) => state.testWords);\r\n  const testOn = useSelector((state) => state.testOn);\r\n  const inputFocused = useSelector((state) => state.inputFocused);\r\n  const dispatch = useDispatch();\r\n\r\n  const inputRef = useRef(null);\r\n  const testContentScrollerCount = useRef(0);\r\n\r\n  useEffect(() => {\r\n    if (currentWord.key > 0) {\r\n      if (inputRef.current && document.activeElement != inputRef.current) {\r\n        inputRef.current.focus();\r\n      }\r\n      let currentLineHeight = parseInt(\r\n        window\r\n          .getComputedStyle(document.getElementById(\"TestContent\"))\r\n          .getPropertyValue(\"line-height\")\r\n      );\r\n\r\n      if (currentWord.top == 0) {\r\n        testContentScrollerCount.current = 0;\r\n        document.getElementById(\r\n          \"TestContentChild\"\r\n        ).style.transform = `translateY(${currentLineHeight}px)`;\r\n      } else if (\r\n        currentWord.top -\r\n          currentLineHeight * testContentScrollerCount.current !=\r\n        0\r\n      ) {\r\n        testContentScroller();\r\n      }\r\n\r\n      if (currentWord.key <= inputLog.length && enteredWord.word == \"\") {\r\n        dispatch(\r\n          updateInput(inputLog[currentWord.index].word, currentWord.word)\r\n        );\r\n        if (inputLog[currentWord.index].isWrong) {\r\n          dispatch(decrementErrorLog());\r\n        }\r\n        dispatch(updateInputLog(currentWord, enteredWord));\r\n      }\r\n    }\r\n  }, [currentWord]);\r\n\r\n  useEffect(() => {\r\n    if (currentWord.key > 0) {\r\n      dispatch(updateCurrentWord(currentWord, enteredWord));\r\n    }\r\n  }, [enteredWord]);\r\n\r\n  useEffect(() => {\r\n    if (enteredWord.isWrong) {\r\n      dispatch(incrementErrorLog());\r\n    }\r\n  }, [enteredWord.isWrong]);\r\n\r\n  function testContentScroller() {\r\n    let currentLineHeight = parseInt(\r\n      window\r\n        .getComputedStyle(document.getElementById(\"TestContent\"))\r\n        .getPropertyValue(\"line-height\")\r\n    );\r\n\r\n    let topOffsetFactor =\r\n      (currentWord.top - currentLineHeight * testContentScrollerCount.current) /\r\n      currentLineHeight;\r\n\r\n    testContentScrollerCount.current =\r\n      testContentScrollerCount.current + topOffsetFactor;\r\n\r\n    document.getElementById(\"TestContentChild\").style.transform = `translateY(${\r\n      -1 *\r\n      (currentLineHeight * testContentScrollerCount.current - currentLineHeight)\r\n    }px)`;\r\n  }\r\n\r\n  function textInputChangeHandler(e) {\r\n    // let enteredValue = String(e.target.value.replace(/\\s/g, \"\"));\r\n    let enteredValue = e.target.value;\r\n    if (enteredValue.indexOf(\" \") > 0) {\r\n      dispatch(updateAndChangeCurrentWord(currentWord, enteredWord));\r\n      dispatch(updateInputLog(currentWord, enteredWord));\r\n      dispatch(nextWord(testWords.rawWords));\r\n      dispatch(resetInput());\r\n    } else if (enteredValue != \" \") {\r\n      dispatch(updateInput(enteredValue, currentWord.word));\r\n      if (!testOn && currentWord.key == 1 && enteredValue != \"\" && time != 0) {\r\n        dispatch(switchTestOn());\r\n      }\r\n    } else {\r\n      resetInput();\r\n    }\r\n  }\r\n\r\n  function keyDownHandler(e) {\r\n    let keyClicked = e.nativeEvent.code;\r\n    let enteredValue = String(e.target.value.replace(/\\s/g, \"\"));\r\n    // if (keyClicked == \"Space\" && enteredValue != \"\") {\r\n    //   dispatch(updateAndChangeCurrentWord(currentWord, enteredWord));\r\n    //   dispatch(updateInputLog(currentWord, enteredWord));\r\n    //   dispatch(nextWord(testWords.rawWords));\r\n    //   dispatch(resetInput());\r\n    // } else\r\n\r\n    if (\r\n      keyClicked == \"Backspace\" &&\r\n      enteredValue == \"\" &&\r\n      currentWord.key > 1 &&\r\n      !inputLog[currentWord.index - 1].isComplete\r\n    ) {\r\n      dispatch(updateAndChangeCurrentWord(currentWord, enteredWord));\r\n      dispatch(prevWord(testWords.rawWords));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <input\r\n        ref={inputRef}\r\n        id=\"textInput\"\r\n        autoFocus={true}\r\n        autoCapitalize=\"off\"\r\n        autoComplete=\"off\"\r\n        spellCheck={false}\r\n        maxLength=\"15\"\r\n        value={enteredWord.word}\r\n        // onKeyDown={(e) => keyDownHandler(e)}\r\n        onKeyDown={(e) => keyDownHandler(e)}\r\n        onChange={(e) => textInputChangeHandler(e)}\r\n        onBlur={() => {\r\n          dispatch(blurInput());\r\n        }}\r\n      ></input>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default TextInput;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  position: absolute;\r\n\r\n  input {\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: default;\r\n    border-bottom: \"none\";\r\n    caret-color: transparent !important;\r\n    font-size: 1.2em;\r\n    font-family: \"Quicksand\", sans-serif;\r\n    font-weight: 500;\r\n    text-align: center;\r\n    color: transparent;\r\n    transition: all 150ms ease-in-out;\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}