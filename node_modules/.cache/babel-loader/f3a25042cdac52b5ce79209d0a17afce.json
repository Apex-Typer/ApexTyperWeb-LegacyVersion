{"ast":null,"code":"import _taggedTemplateLiteral from\"D:/APEX_TYPER/apex_typer_5.0/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";import _slicedToArray from\"D:/APEX_TYPER/apex_typer_5.0/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";var _templateObject,_templateObject2,_templateObject3;import React,{useEffect,useState,useRef,forwardRef}from\"react\";import styled from\"styled-components\";import words from\"./wordsData\";import TextInput from\"./TextInput\";import{Fade}from\"react-reveal\";import{useSelector,useDispatch}from\"react-redux\";import{newWords,evaluateWords,blurInput,focusInput,confirmWord,firstWord,resetWord,inactivateCurrentWord,resetInput,resetInputLog,resetTest,updateCurrentWord}from\"../state/action-creators/index\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Test(){var dispatch=useDispatch();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),wordsRendered=_useState2[0],setWordsRendered=_useState2[1];var testWords=useSelector(function(state){return state.testWords;});var currentWord=useSelector(function(state){return state.currentWord;});var inputFocused=useSelector(function(state){return state.inputFocused;});var enteredWord=useSelector(function(state){return state.enteredWord;});var testRef=useRef(null);function loadWords(){dispatch(newWords());setWordsRendered(true);}useEffect(function(){loadWords();},[]);useEffect(function(){if(currentWord.key!=0){dispatch(confirmWord(currentWord));}else{if(wordsRendered){dispatch(firstWord(testWords.rawWords));dispatch(focusInput());dispatch(resetInput());dispatch(resetInputLog());}}},[testWords]);function handleClickOutside(e){if(testRef.current&&!testRef.current.contains(e.target)){dispatch(blurInput());}else{dispatch(blurInput());dispatch(focusInput());}}function handleKeyDown(e){if(!inputFocused&&!e.target.matches(\"#custom-time-input, #custom-time-input *\")){dispatch(focusInput());}if(e.key==\"Alt\"&&inputFocused){dispatch(blurInput());}if(e.key==\"Tab\"){e.preventDefault();}if((e.shiftKey||e.ctrlKey)&&(e.code==\"Enter\"||e.keyCode==32)){resetTest(dispatch);}}function handleResize(){dispatch(blurInput());dispatch(focusInput());}useEffect(function(){if(!inputFocused&&currentWord.key>0){dispatch(inactivateCurrentWord(currentWord,enteredWord));dispatch(confirmWord(currentWord));}else if(inputFocused&&currentWord.key>0){updateCurrentWord(currentWord,enteredWord);// dispatch(confirmWord(currentWord));\n}},[inputFocused]);useEffect(function(){// document.addEventListener(\"mousedown\", handleClickOutside, true);\n// document.addEventListener(\"mouseup\", handleClickOutside, true);\n// document.addEventListener(\"keydown\", handleKeyDown, true);\n// window.addEventListener(\"resize\", handleResize);\n},[testRef]);return/*#__PURE__*/_jsxs(Container,{tabIndex:3,children:[wordsRendered&&inputFocused?/*#__PURE__*/_jsx(TextInput,{}):\"\",/*#__PURE__*/_jsxs(TestContent,{id:\"TestContent\",className:!inputFocused?\"blur-content\":\"\",children:[/*#__PURE__*/_jsx(Underline,{width:\"\".concat(currentWord.width,\"px\"),left:\"\".concat(currentWord.left,\"px\"),enteredWordIsWrong:enteredWord.isWrong,enteredWordIsComplete:enteredWord.isComplete}),/*#__PURE__*/_jsx(\"div\",{id:\"TestContentChild\",onClick:function onClick(){return dispatch(focusInput());},ref:testRef,children:testWords.forHtml})]})]});}export default Test;var Container=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding-top: 30px;\\n\"])));var TestContent=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  height: 120px;\\n  overflow: hidden;\\n  font-size: 1.3em;\\n  font-family: \\\"Quicksand\\\", sans-serif;\\n  font-weight: 500;\\n  line-height: 40px;\\n  /* text-align: justify;\\n  text-justify: distribute;\\n  text-align-last: left; */\\n  text-align: justify;\\n  hyphens: auto;\\n  -webkit-hyphens: auto;\\n  word-spacing: -0.05em;\\n  position: relative;\\n  #TestContentChild {\\n    transform: translateY(120px);\\n    transition: all 250ms ease-in-out;\\n  }\\n  .test-words {\\n    padding: 3px;\\n  }\\n  @media (max-width: 770px) {\\n    font-size: 1.2em;\\n    line-height: 30px;\\n    height: 90px;\\n\\n    .test-words {\\n      padding: 1px;\\n    }\\n  }\\n\"])));var Underline=styled.div.attrs(function(props){return{style:{width:props.width,borderColor:props.enteredWordIsWrong?\"red\":props.enteredWordIsComplete?\"#00ffff99\":\"#aaa\"}};})(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  position: absolute;\\n  z-index: 0;\\n  height: 76px;\\n  padding: 0;\\n  transform: translateX(\",\");\\n  transition: all 150ms ease-in-out;\\n  border-bottom: 2px solid;\\n  @media (max-width: 770px) {\\n    height: 60px;\\n  }\\n\"])),function(props){return props.left;});","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/components/Test.js"],"names":["React","useEffect","useState","useRef","forwardRef","styled","words","TextInput","Fade","useSelector","useDispatch","newWords","evaluateWords","blurInput","focusInput","confirmWord","firstWord","resetWord","inactivateCurrentWord","resetInput","resetInputLog","resetTest","updateCurrentWord","Test","dispatch","wordsRendered","setWordsRendered","testWords","state","currentWord","inputFocused","enteredWord","testRef","loadWords","key","rawWords","handleClickOutside","e","current","contains","target","handleKeyDown","matches","preventDefault","shiftKey","ctrlKey","code","keyCode","handleResize","width","left","isWrong","isComplete","forHtml","Container","div","TestContent","Underline","attrs","props","style","borderColor","enteredWordIsWrong","enteredWordIsComplete"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, forwardRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport words from \"./wordsData\";\r\nimport TextInput from \"./TextInput\";\r\nimport { Fade } from \"react-reveal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  newWords,\r\n  evaluateWords,\r\n  blurInput,\r\n  focusInput,\r\n  confirmWord,\r\n  firstWord,\r\n  resetWord,\r\n  inactivateCurrentWord,\r\n  resetInput,\r\n  resetInputLog,\r\n  resetTest,\r\n  updateCurrentWord,\r\n} from \"../state/action-creators/index\";\r\n\r\nfunction Test() {\r\n  const dispatch = useDispatch();\r\n  const [wordsRendered, setWordsRendered] = useState(false);\r\n  const testWords = useSelector((state) => state.testWords);\r\n  const currentWord = useSelector((state) => state.currentWord);\r\n  const inputFocused = useSelector((state) => state.inputFocused);\r\n  const enteredWord = useSelector((state) => state.enteredWord);\r\n\r\n  const testRef = useRef(null);\r\n\r\n  function loadWords() {\r\n    dispatch(newWords());\r\n    setWordsRendered(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadWords();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentWord.key != 0) {\r\n      dispatch(confirmWord(currentWord));\r\n    } else {\r\n      if (wordsRendered) {\r\n        dispatch(firstWord(testWords.rawWords));\r\n        dispatch(focusInput());\r\n        dispatch(resetInput());\r\n        dispatch(resetInputLog());\r\n      }\r\n    }\r\n  }, [testWords]);\r\n\r\n  function handleClickOutside(e) {\r\n    if (testRef.current && !testRef.current.contains(e.target)) {\r\n      dispatch(blurInput());\r\n    } else {\r\n      dispatch(blurInput());\r\n      dispatch(focusInput());\r\n    }\r\n  }\r\n\r\n  function handleKeyDown(e) {\r\n    if (\r\n      !inputFocused &&\r\n      !e.target.matches(\"#custom-time-input, #custom-time-input *\")\r\n    ) {\r\n      dispatch(focusInput());\r\n    }\r\n    if (e.key == \"Alt\" && inputFocused) {\r\n      dispatch(blurInput());\r\n    }\r\n    if (e.key == \"Tab\") {\r\n      e.preventDefault();\r\n    }\r\n    if ((e.shiftKey || e.ctrlKey) && (e.code == \"Enter\" || e.keyCode == 32)) {\r\n      resetTest(dispatch);\r\n    }\r\n  }\r\n\r\n  function handleResize() {\r\n    dispatch(blurInput());\r\n    dispatch(focusInput());\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!inputFocused && currentWord.key > 0) {\r\n      dispatch(inactivateCurrentWord(currentWord, enteredWord));\r\n      dispatch(confirmWord(currentWord));\r\n    } else if (inputFocused && currentWord.key > 0) {\r\n      updateCurrentWord(currentWord, enteredWord);\r\n      // dispatch(confirmWord(currentWord));\r\n    }\r\n  }, [inputFocused]);\r\n\r\n  useEffect(() => {\r\n    // document.addEventListener(\"mousedown\", handleClickOutside, true);\r\n    // document.addEventListener(\"mouseup\", handleClickOutside, true);\r\n    // document.addEventListener(\"keydown\", handleKeyDown, true);\r\n    // window.addEventListener(\"resize\", handleResize);\r\n  }, [testRef]);\r\n\r\n  return (\r\n    <Container tabIndex={3}>\r\n      {/* <Fade top duration={250}> */}\r\n      {wordsRendered && inputFocused ? <TextInput /> : \"\"}\r\n      <TestContent\r\n        id=\"TestContent\"\r\n        className={!inputFocused ? \"blur-content\" : \"\"}\r\n      >\r\n        <Underline\r\n          width={`${currentWord.width}px`}\r\n          left={`${currentWord.left}px`}\r\n          enteredWordIsWrong={enteredWord.isWrong}\r\n          enteredWordIsComplete={enteredWord.isComplete}\r\n        ></Underline>\r\n\r\n        <div\r\n          id=\"TestContentChild\"\r\n          onClick={() => dispatch(focusInput())}\r\n          ref={testRef}\r\n        >\r\n          {testWords.forHtml}\r\n        </div>\r\n      </TestContent>\r\n      {/* </Fade> */}\r\n    </Container>\r\n  );\r\n}\r\nexport default Test;\r\n\r\nconst Container = styled.div`\r\n  padding-top: 30px;\r\n`;\r\n\r\nconst TestContent = styled.div`\r\n  height: 120px;\r\n  overflow: hidden;\r\n  font-size: 1.3em;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  font-weight: 500;\r\n  line-height: 40px;\r\n  /* text-align: justify;\r\n  text-justify: distribute;\r\n  text-align-last: left; */\r\n  text-align: justify;\r\n  hyphens: auto;\r\n  -webkit-hyphens: auto;\r\n  word-spacing: -0.05em;\r\n  position: relative;\r\n  #TestContentChild {\r\n    transform: translateY(120px);\r\n    transition: all 250ms ease-in-out;\r\n  }\r\n  .test-words {\r\n    padding: 3px;\r\n  }\r\n  @media (max-width: 770px) {\r\n    font-size: 1.2em;\r\n    line-height: 30px;\r\n    height: 90px;\r\n\r\n    .test-words {\r\n      padding: 1px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Underline = styled.div.attrs((props) => ({\r\n  style: {\r\n    width: props.width,\r\n    borderColor: props.enteredWordIsWrong\r\n      ? \"red\"\r\n      : props.enteredWordIsComplete\r\n      ? \"#00ffff99\"\r\n      : \"#aaa\",\r\n  },\r\n}))`\r\n  position: absolute;\r\n  z-index: 0;\r\n  height: 76px;\r\n  padding: 0;\r\n  transform: translateX(${(props) => props.left});\r\n  transition: all 150ms ease-in-out;\r\n  border-bottom: 2px solid;\r\n  @media (max-width: 770px) {\r\n    height: 60px;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}