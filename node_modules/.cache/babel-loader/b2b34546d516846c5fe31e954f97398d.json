{"ast":null,"code":"var _jsxFileName = \"D:\\\\APEX_TYPER\\\\apex_typer_5.0\\\\src\\\\components\\\\CountdownTimer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { decrementLiveTime, resetLiveTime } from \"../state/action-creators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CountdownTimer() {\n  _s();\n\n  // states and functions for showing the countdown timer once the test starts\n  const liveTime = useSelector(state => state.testTimer.liveTime);\n  const timeForDisplay = useSelector(state => state.testTimer.forDisplay);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    setTimeout(() => {\n      dispatch(decrementLiveTime());\n    }, 1000);\n\n    if (liveTime < 0) {\n      dispatch(resetLiveTime());\n    }\n  }, [liveTime]);\n  return /*#__PURE__*/_jsxDEV(TimeView, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      id: \"time-view\",\n      children: liveTime <= 60 ? `${liveTime}s` : `${timeForDisplay.minutes}:${timeForDisplay.seconds}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CountdownTimer, \"nQf2Das+3O5QZmN5gHqoNadd+IM=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CountdownTimer;\nexport default CountdownTimer;\nconst TimeView = styled.div``;\n_c2 = TimeView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CountdownTimer\");\n$RefreshReg$(_c2, \"TimeView\");","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/components/CountdownTimer.js"],"names":["React","useState","useEffect","useDispatch","useSelector","styled","decrementLiveTime","resetLiveTime","CountdownTimer","liveTime","state","testTimer","timeForDisplay","forDisplay","dispatch","setTimeout","minutes","seconds","TimeView","div"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,0BAAjD;;;AAEA,SAASC,cAAT,GAA0B;AAAA;;AACxB;AACA,QAAMC,QAAQ,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,SAAN,CAAgBF,QAA5B,CAA5B;AACA,QAAMG,cAAc,GAAGR,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,SAAN,CAAgBE,UAA5B,CAAlC;AACA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACda,IAAAA,UAAU,CAAC,MAAM;AACfD,MAAAA,QAAQ,CAACR,iBAAiB,EAAlB,CAAR;AACD,KAFS,EAEP,IAFO,CAAV;;AAIA,QAAIG,QAAQ,GAAG,CAAf,EAAkB;AAChBK,MAAAA,QAAQ,CAACP,aAAa,EAAd,CAAR;AACD;AAEF,GATQ,EASN,CAACE,QAAD,CATM,CAAT;AAWA,sBACE,QAAC,QAAD;AAAA,2BACE;AAAG,MAAA,EAAE,EAAC,WAAN;AAAA,gBACGA,QAAQ,IAAI,EAAZ,GACI,GAAEA,QAAS,GADf,GAEI,GAAEG,cAAc,CAACI,OAAQ,IAAGJ,cAAc,CAACK,OAAQ;AAH1D;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA1BQT,c;UAEUJ,W,EACMA,W,EACND,W;;;KAJVK,c;AA4BT,eAAeA,cAAf;AAEA,MAAMU,QAAQ,GAAGb,MAAM,CAACc,GAAI,EAA5B;MAAMD,Q","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { decrementLiveTime, resetLiveTime } from \"../state/action-creators\";\r\n\r\nfunction CountdownTimer() {\r\n  // states and functions for showing the countdown timer once the test starts\r\n  const liveTime = useSelector((state) => state.testTimer.liveTime);\r\n  const timeForDisplay = useSelector((state) => state.testTimer.forDisplay);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      dispatch(decrementLiveTime());\r\n    }, 1000);\r\n\r\n    if (liveTime < 0) {\r\n      dispatch(resetLiveTime());\r\n    }\r\n\r\n  }, [liveTime]);\r\n\r\n  return (\r\n    <TimeView>\r\n      <p id=\"time-view\">\r\n        {liveTime <= 60\r\n          ? `${liveTime}s`\r\n          : `${timeForDisplay.minutes}:${timeForDisplay.seconds}`}\r\n      </p>\r\n    </TimeView>\r\n  );\r\n}\r\n\r\nexport default CountdownTimer;\r\n\r\nconst TimeView = styled.div``;\r\n"]},"metadata":{},"sourceType":"module"}