{"ast":null,"code":"import _objectSpread from\"D:/APEX_TYPER/apex_typer_5.0/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{current}from\"@reduxjs/toolkit\";var reducer=function reducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{log:[],wrongWords:0,errors:0};var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case\"UPDATE_INPUT_LOG\":return inputLogUpdater(action.payload.enteredWord,action.payload.currentWord,state);case\"INCREMENT_ERROR_LOG\":return _objectSpread(_objectSpread({},state),{},{errors:state.errors+1});case\"DECREMENT_ERROR_LOG\":return _objectSpread(_objectSpread({},state),{},{errors:state.errors-1});case\"RESET_INPUT_LOG\":return{log:[],wrongWords:0,errors:0};default:return state;}};function inputLogUpdater(enteredWord,currentWord,prevInputLog){var updatedInputLog=[];if(currentWord.key>prevInputLog.log.length){updatedInputLog=prevInputLog.log;updatedInputLog[currentWord.index]=enteredWord;}else{updatedInputLog=prevInputLog.log;updatedInputLog.splice(currentWord.index,1);}var wrongWords=updatedInputLog.filter(function(prevLog){return!prevLog.isComplete;});updatedInputLog={log:updatedInputLog,wrongWords:wrongWords.length,errors:prevInputLog.errors};return updatedInputLog;}export default reducer;","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/state/reducers/inputLog.js"],"names":["current","reducer","state","log","wrongWords","errors","action","type","inputLogUpdater","payload","enteredWord","currentWord","prevInputLog","updatedInputLog","key","length","index","splice","filter","prevLog","isComplete"],"mappings":"iHAAA,OAASA,OAAT,KAAwB,kBAAxB,CAEA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,EAA2D,IAA1DC,CAAAA,KAA0D,2DAAlD,CAAEC,GAAG,CAAE,EAAP,CAAWC,UAAU,CAAE,CAAvB,CAA0BC,MAAM,CAAE,CAAlC,CAAkD,IAAXC,CAAAA,MAAW,2CACzE,OAAQA,MAAM,CAACC,IAAf,EACE,IAAK,kBAAL,CACE,MAAOC,CAAAA,eAAe,CACpBF,MAAM,CAACG,OAAP,CAAeC,WADK,CAEpBJ,MAAM,CAACG,OAAP,CAAeE,WAFK,CAGpBT,KAHoB,CAAtB,CAKF,IAAK,qBAAL,CACE,sCAAYA,KAAZ,MAAmBG,MAAM,CAAEH,KAAK,CAACG,MAAN,CAAe,CAA1C,GACF,IAAK,qBAAL,CACE,sCAAYH,KAAZ,MAAmBG,MAAM,CAAEH,KAAK,CAACG,MAAN,CAAe,CAA1C,GACF,IAAK,iBAAL,CACE,MAAO,CAAEF,GAAG,CAAE,EAAP,CAAWC,UAAU,CAAE,CAAvB,CAA0BC,MAAM,CAAE,CAAlC,CAAP,CACF,QACE,MAAOH,CAAAA,KAAP,CAdJ,CAgBD,CAjBD,CAmBA,QAASM,CAAAA,eAAT,CAAyBE,WAAzB,CAAsCC,WAAtC,CAAmDC,YAAnD,CAAiE,CAC/D,GAAIC,CAAAA,eAAe,CAAG,EAAtB,CACA,GAAIF,WAAW,CAACG,GAAZ,CAAkBF,YAAY,CAACT,GAAb,CAAiBY,MAAvC,CAA+C,CAC7CF,eAAe,CAAGD,YAAY,CAACT,GAA/B,CACAU,eAAe,CAACF,WAAW,CAACK,KAAb,CAAf,CAAqCN,WAArC,CACD,CAHD,IAGO,CACLG,eAAe,CAAGD,YAAY,CAACT,GAA/B,CACAU,eAAe,CAACI,MAAhB,CAAuBN,WAAW,CAACK,KAAnC,CAA0C,CAA1C,EACD,CACD,GAAMZ,CAAAA,UAAU,CAAGS,eAAe,CAACK,MAAhB,CAAuB,SAACC,OAAD,QAAa,CAACA,OAAO,CAACC,UAAtB,EAAvB,CAAnB,CACAP,eAAe,CAAG,CAChBV,GAAG,CAAEU,eADW,CAEhBT,UAAU,CAAEA,UAAU,CAACW,MAFP,CAGhBV,MAAM,CAAEO,YAAY,CAACP,MAHL,CAAlB,CAKA,MAAOQ,CAAAA,eAAP,CACD,CAED,cAAeZ,CAAAA,OAAf","sourcesContent":["import { current } from \"@reduxjs/toolkit\";\r\n\r\nconst reducer = (state = { log: [], wrongWords: 0, errors: 0 }, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_INPUT_LOG\":\r\n      return inputLogUpdater(\r\n        action.payload.enteredWord,\r\n        action.payload.currentWord,\r\n        state\r\n      );\r\n    case \"INCREMENT_ERROR_LOG\":\r\n      return { ...state, errors: state.errors + 1 };\r\n    case \"DECREMENT_ERROR_LOG\":\r\n      return { ...state, errors: state.errors - 1 };\r\n    case \"RESET_INPUT_LOG\":\r\n      return { log: [], wrongWords: 0, errors: 0 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction inputLogUpdater(enteredWord, currentWord, prevInputLog) {\r\n  let updatedInputLog = [];\r\n  if (currentWord.key > prevInputLog.log.length) {\r\n    updatedInputLog = prevInputLog.log;\r\n    updatedInputLog[currentWord.index] = enteredWord;\r\n  } else {\r\n    updatedInputLog = prevInputLog.log;\r\n    updatedInputLog.splice(currentWord.index, 1);\r\n  }\r\n  const wrongWords = updatedInputLog.filter((prevLog) => !prevLog.isComplete);\r\n  updatedInputLog = {\r\n    log: updatedInputLog,\r\n    wrongWords: wrongWords.length,\r\n    errors: prevInputLog.errors,\r\n  };\r\n  return updatedInputLog;\r\n}\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}