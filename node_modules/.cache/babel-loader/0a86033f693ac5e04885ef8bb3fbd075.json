{"ast":null,"code":"var _jsxFileName = \"D:\\\\APEX_TYPER\\\\apex_typer_5.0\\\\src\\\\components\\\\CustomTime.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, forwardRef, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { Fade } from \"react-reveal\";\nimport HeadShake from \"react-reveal/HeadShake\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { closeTimeInput, updateTestTimer, closeTimeMenu } from \"../state/action-creators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CustomTime() {\n  _s();\n\n  // states and state managers\n  const timeInputContainer = useRef(null);\n  const time = useSelector(state => state.testTimer.time);\n  const timeForDisplay = useSelector(state => state.testTimer.forDisplay);\n  const [customTime, setTime] = useState({\n    minutes: parseInt(timeForDisplay.minutes),\n    seconds: parseInt(timeForDisplay.seconds)\n  });\n  const dispatch = useDispatch();\n  const [MinuteInputError, setMinuteInputError] = useState(false);\n  const [SecondInputError, setSecondInputError] = useState(false);\n\n  if (MinuteInputError || SecondInputError) {\n    setTimeout(() => {\n      setMinuteInputError(false);\n      setSecondInputError(false);\n    }, 100);\n  } // to ensure second's input stays zero when minutes is set to 60\n\n\n  useEffect(() => {\n    if (customTime.minutes == 60 && customTime.seconds > 0) {\n      setTime(prevTime => ({ ...prevTime,\n        seconds: 0\n      }));\n      inputError(\"seconds\");\n    }\n  }, [customTime]);\n  useEffect(() => {\n    if (timeInputContainer.current) {\n      timeInputContainer.current.focus();\n    }\n  }, [customTime]); // event handlers\n\n  function inputError(t) {\n    switch (t) {\n      case \"minutes\":\n        setMinuteInputError(true);\n        break;\n\n      case \"seconds\":\n        setSecondInputError(true);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function valueController(m, l, v, t) {\n    let r;\n\n    if (v >= m && v <= l) {\n      r = v;\n    } else if (v > l) {\n      if (t == \"seconds\") {\n        r = m;\n        inputError(t);\n        timeUpdate({\n          target: {\n            value: customTime.minutes + 1\n          }\n        }, \"minutes\", \"custom\");\n      } else {\n        r = l;\n        inputError(t);\n      }\n    } else if (v < m) {\n      r = m;\n      inputError(t);\n    } else {\n      r = 0;\n    }\n\n    return r;\n  }\n\n  function timeUpdate(e, t, c) {\n    switch (c) {\n      case \"custom\":\n        setTime(prevTime => ({ ...prevTime,\n          [t]: valueController(0, 60, parseInt(e.target.value), t)\n        }));\n        break;\n\n      case \"increment\":\n        setTime(prevTime => ({ ...prevTime,\n          [t]: valueController(0, 60, parseInt(prevTime[t]) + 1, t)\n        }));\n        break;\n\n      case \"decrement\":\n        setTime(prevTime => ({ ...prevTime,\n          [t]: valueController(0, 60, parseInt(prevTime[t]) - 1, t)\n        }));\n        break;\n\n      case \"reset\":\n        setTime(prevTime => ({ ...prevTime,\n          [t]: \"\"\n        }));\n        break;\n\n      case \"fill\":\n        setTime(prevTime => ({ ...prevTime,\n          [t]: 0\n        }));\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  function keyDownHandler(event) {\n    switch (event.key) {\n      case \"Escape\":\n        dispatch(closeTimeInput());\n        break;\n\n      case \"Enter\":\n        dispatch(updateTestTimer(parseInt(customTime[\"minutes\"] * 60) + parseInt(customTime[\"seconds\"])));\n        dispatch(closeTimeInput());\n        dispatch(closeTimeMenu());\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    ref: timeInputContainer,\n    tabIndex: \"2\",\n    onKeyDown: event => {\n      keyDownHandler(event);\n    },\n    children: /*#__PURE__*/_jsxDEV(Fade, {\n      bottom: true,\n      duration: 250,\n      children: /*#__PURE__*/_jsxDEV(TimeInput, {\n        id: \"CustomTimeInput\",\n        children: [/*#__PURE__*/_jsxDEV(CloseTimeInput, {\n          src: \"icons/close.png\",\n          className: \"cyan-icon\",\n          onClick: () => dispatch(closeTimeInput())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TimeInputFixedOptions1, {\n          children: [/*#__PURE__*/_jsxDEV(TimeOptions, {\n            onClick: () => {\n              timeUpdate({\n                target: {\n                  value: 0\n                }\n              }, \"minutes\", \"custom\");\n              timeUpdate({\n                target: {\n                  value: 0\n                }\n              }, \"seconds\", \"custom\");\n            },\n            className: time == 0 ? \"selected-time-option\" : \"\",\n            children: \"0s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TimeOptions, {\n            onClick: () => {\n              timeUpdate({\n                target: {\n                  value: 0\n                }\n              }, \"minutes\", \"custom\");\n              timeUpdate({\n                target: {\n                  value: 30\n                }\n              }, \"seconds\", \"custom\");\n            },\n            className: time == 30 ? \"selected-time-option\" : \"\",\n            children: \"30s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TimeOptions, {\n            onClick: () => {\n              timeUpdate({\n                target: {\n                  value: 0\n                }\n              }, \"minutes\", \"custom\");\n              timeUpdate({\n                target: {\n                  value: 60\n                }\n              }, \"seconds\", \"custom\");\n            },\n            className: time == 60 ? \"selected-time-option\" : \"\",\n            children: \"60s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TimeInputUI, {\n          children: [/*#__PURE__*/_jsxDEV(MinuteBlock, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/icons/up-arrow.png\",\n              className: \"grey-icon arrow-icon\",\n              alt: \"\",\n              onClick: event => timeUpdate(event, \"minutes\", \"increment\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HeadShake, {\n              when: MinuteInputError,\n              duration: 400,\n              children: /*#__PURE__*/_jsxDEV(MinuteInput, {\n                type: \"number\",\n                value: customTime.minutes,\n                onFocus: event => {\n                  timeUpdate(event, \"minutes\", \"reset\");\n                },\n                onBlur: customTime.minutes === null ? event => timeUpdate(event, \"minutes\", \"fill\") : event => timeUpdate(event, \"minutes\", \"custom\"),\n                onChange: event => {\n                  timeUpdate(event, \"minutes\", \"custom\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/icons/down-arrow.png\",\n              className: \"grey-icon arrow-icon\",\n              alt: \"\",\n              onClick: event => timeUpdate(event, \"minutes\", \"decrement\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"m\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"time-input-divider\",\n            children: \":\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(SecondBlock, {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/icons/up-arrow.png\",\n              className: \"grey-icon arrow-icon\",\n              alt: \"\",\n              onClick: event => timeUpdate(event, \"seconds\", \"increment\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(HeadShake, {\n              when: SecondInputError,\n              duration: 400,\n              children: /*#__PURE__*/_jsxDEV(SecondInput, {\n                type: \"number\",\n                value: customTime.seconds,\n                onFocus: event => timeUpdate(event, \"seconds\", \"reset\"),\n                onBlur: customTime.seconds ? event => timeUpdate(event, \"seconds\", \"custom\") : event => timeUpdate(event, \"seconds\", \"fill\"),\n                onChange: event => timeUpdate(event, \"seconds\", \"custom\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/icons/down-arrow.png\",\n              className: \"grey-icon arrow-icon\",\n              alt: \"\",\n              onClick: event => timeUpdate(event, \"seconds\", \"decrement\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TimeInputFixedOptions2, {\n          children: [/*#__PURE__*/_jsxDEV(TimeOptions, {\n            onClick: () => {\n              timeUpdate({\n                target: {\n                  value: customTime.seconds - 5\n                }\n              }, \"seconds\", \"custom\");\n            },\n            children: \"-5s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TimeOptions, {\n            onClick: () => {\n              timeUpdate({\n                target: {\n                  value: customTime.seconds + 5\n                }\n              }, \"seconds\", \"custom\");\n            },\n            children: \"+5s\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Uploadtime, {\n          onClick: () => {\n            dispatch(updateTestTimer(parseInt(customTime[\"minutes\"] * 60) + parseInt(customTime[\"seconds\"])));\n            dispatch(closeTimeInput());\n            dispatch(closeTimeMenu());\n          },\n          children: \"OK\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomTime, \"HbK4kKpUFjfcF4vXoGQFdxtosrs=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = CustomTime;\nexport default CustomTime; // styles\n\nconst Container = styled.div`\n  position: absolute;\n  right: 0;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  z-index: 3;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  overflow: hidden;\n\n  backdrop-filter: blur(3px);\n  transition: all 250ms ease-in-out;\n\n  &:focus {\n    outline: none;\n  }\n`;\n_c2 = Container;\nconst TimeInputFixedOptions1 = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  width: 100%;\n  border-bottom: 1px solid rgba(170, 170, 170, 0.2);\n  border-top: 1px solid rgba(170, 170, 170, 0.2);\n  margin-top: 10px;\n  p {\n    cursor: pointer;\n    /* margin: 10px 0 10px; */\n    margin: 5px 0;\n  }\n  .selected-time-option {\n    color: cyan;\n  }\n  @media (max-width: 430px) {\n    p {\n      font-size: 0.8em;\n    }\n  }\n`;\n_c3 = TimeInputFixedOptions1;\nconst TimeInputFixedOptions2 = styled(TimeInputFixedOptions1)`\n  margin-top: 0;\n  justify-content: space-between;\n`;\n_c4 = TimeInputFixedOptions2;\nconst TimeOptions = styled.p`\n`;\n_c5 = TimeOptions;\nconst TimeInput = styled.div`\n  position: relative;\n  background-color: #17171a;\n  max-width: 50vw;\n  width: 300px;\n  padding: 10px;\n  border-radius: 5px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  box-shadow: -1px 10px 23px 0px rgba(0, 0, 0, 0.51);\n  -webkit-box-shadow: -1px 10px 23px 0px rgba(0, 0, 0, 0.51);\n  -moz-box-shadow: -1px 10px 23px 0px rgba(0, 0, 0, 0.51);\n`;\n_c6 = TimeInput;\nconst CloseTimeInput = styled.img`\n  width: 12px;\n  margin-left: auto;\n  cursor: pointer;\n  padding: 5px;\n`;\n_c7 = CloseTimeInput;\nconst TimeInputUI = styled.div`\n  width: 100%;\n  padding: 10px 0px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  span {\n    margin: 0 0 0 10px;\n    font-size: 1.5em;\n  }\n\n  .arrow-icon {\n    width: 22px;\n  }\n\n  .time-input-divider {\n    margin: 0 10px;\n    color: #00ffff99;\n    font-size: 1.5em;\n  }\n\n  img {\n    cursor: pointer;\n  }\n\n  input {\n    background-color: transparent;\n    border: none;\n    color: #aaaaaa;\n    font-size: 1.5em;\n    text-align: center;\n    width: 2ch;\n  }\n  input:focus {\n    outline: none;\n  }\n  input::-webkit-outer-spin-button,\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n  }\n  input[type=\"number\"] {\n    -moz-appearance: textfield;\n  }\n\n  @media (max-width: 430px) {\n    span {\n      font-size: 1em;\n    }\n    input {\n      font-size: 1em;\n    }\n    .arrow-icon {\n      width: 18px;\n    }\n  }\n`;\n_c8 = TimeInputUI;\nconst MinuteBlock = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n_c9 = MinuteBlock;\nconst MinuteInput = styled.input``;\n_c10 = MinuteInput;\nconst SecondBlock = styled(MinuteBlock)``;\n_c11 = SecondBlock;\nconst SecondInput = styled(MinuteInput)``;\n_c12 = SecondInput;\nconst Uploadtime = styled.p`\n  left: auto;\n  opacity: 0.75;\n  color: cyan;\n  cursor: pointer;\n  margin: 10px 0px;\n  @media (max-width: 430px) {\n    margin: 10px;\n  }\n`;\n_c13 = Uploadtime;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11, _c12, _c13;\n\n$RefreshReg$(_c, \"CustomTime\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"TimeInputFixedOptions1\");\n$RefreshReg$(_c4, \"TimeInputFixedOptions2\");\n$RefreshReg$(_c5, \"TimeOptions\");\n$RefreshReg$(_c6, \"TimeInput\");\n$RefreshReg$(_c7, \"CloseTimeInput\");\n$RefreshReg$(_c8, \"TimeInputUI\");\n$RefreshReg$(_c9, \"MinuteBlock\");\n$RefreshReg$(_c10, \"MinuteInput\");\n$RefreshReg$(_c11, \"SecondBlock\");\n$RefreshReg$(_c12, \"SecondInput\");\n$RefreshReg$(_c13, \"Uploadtime\");","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/components/CustomTime.js"],"names":["React","useEffect","useState","forwardRef","useRef","styled","Fade","HeadShake","useDispatch","useSelector","closeTimeInput","updateTestTimer","closeTimeMenu","CustomTime","timeInputContainer","time","state","testTimer","timeForDisplay","forDisplay","customTime","setTime","minutes","parseInt","seconds","dispatch","MinuteInputError","setMinuteInputError","SecondInputError","setSecondInputError","setTimeout","prevTime","inputError","current","focus","t","valueController","m","l","v","r","timeUpdate","target","value","e","c","keyDownHandler","event","key","Container","div","TimeInputFixedOptions1","TimeInputFixedOptions2","TimeOptions","p","TimeInput","CloseTimeInput","img","TimeInputUI","MinuteBlock","MinuteInput","input","SecondBlock","SecondInput","Uploadtime"],"mappings":"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AAC6C,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;MAAMD,S;AAqBN,MAAME,sBAAsB,GAAG9C,MAAM,CAAC6C,GAAI;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CApBA;MAAMC,sB;AAsBN,MAAMC,sBAAsB,GAAG/C,MAAM,CAAC8C,sBAAD,CAAyB;AAC9D;AACA;AACA,CAHA;MAAMC,sB;AAKN,MAAMC,WAAW,GAAGhD,MAAM,CAACiD,CAAE;AAC7B,CADA;MAAMD,W;AAGN,MAAME,SAAS,GAAGlD,MAAM,CAAC6C,GAAI;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAhBA;MAAMK,S;AAkBN,MAAMC,cAAc,GAAGnD,MAAM,CAACoD,GAAI;AAClC;AACA;AACA;AACA;AACA,CALA;MAAMD,c;AAMN,MAAME,WAAW,GAAGrD,MAAM,CAAC6C,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAzDA;MAAMQ,W;AA0DN,MAAMC,WAAW,GAAGtD,MAAM,CAAC6C,GAAI;AAC/B;AACA;AACA;AACA;AACA,CALA;MAAMS,W;AAON,MAAMC,WAAW,GAAGvD,MAAM,CAACwD,KAAM,EAAjC;OAAMD,W;AAEN,MAAME,WAAW,GAAGzD,MAAM,CAACsD,WAAD,CAAc,EAAxC;OAAMG,W;AAEN,MAAMC,WAAW,GAAG1D,MAAM,CAACuD,WAAD,CAAc,EAAxC;OAAMG,W;AAEN,MAAMC,UAAU,GAAG3D,MAAM,CAACiD,CAAE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;OAAMU,U","sourcesContent":["import React, { useEffect, useState, forwardRef, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Fade } from \"react-reveal\";\r\nimport HeadShake from \"react-reveal/HeadShake\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  closeTimeInput,\r\n  updateTestTimer,\r\n  closeTimeMenu,\r\n} from \"../state/action-creators\";\r\n\r\nfunction CustomTime() {\r\n  // states and state managers\r\n\r\n  const timeInputContainer = useRef(null);\r\n\r\n  const time = useSelector((state) => state.testTimer.time);\r\n  const timeForDisplay = useSelector((state) => state.testTimer.forDisplay);\r\n  const [customTime, setTime] = useState({\r\n    minutes: parseInt(timeForDisplay.minutes),\r\n    seconds: parseInt(timeForDisplay.seconds),\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [MinuteInputError, setMinuteInputError] = useState(false);\r\n  const [SecondInputError, setSecondInputError] = useState(false);\r\n\r\n  if (MinuteInputError || SecondInputError) {\r\n    setTimeout(() => {\r\n      setMinuteInputError(false);\r\n      setSecondInputError(false);\r\n    }, 100);\r\n  }\r\n\r\n  // to ensure second's input stays zero when minutes is set to 60\r\n\r\n  useEffect(() => {\r\n    if (customTime.minutes == 60 && customTime.seconds > 0) {\r\n      setTime((prevTime) => ({ ...prevTime, seconds: 0 }));\r\n      inputError(\"seconds\");\r\n    }\r\n  }, [customTime]);\r\n  useEffect(() => {\r\n    if (timeInputContainer.current) {\r\n      timeInputContainer.current.focus();\r\n    }\r\n  }, [customTime]);\r\n\r\n  // event handlers\r\n\r\n  function inputError(t) {\r\n    switch (t) {\r\n      case \"minutes\":\r\n        setMinuteInputError(true);\r\n        break;\r\n      case \"seconds\":\r\n        setSecondInputError(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function valueController(m, l, v, t) {\r\n    let r;\r\n    if (v >= m && v <= l) {\r\n      r = v;\r\n    } else if (v > l) {\r\n      if (t == \"seconds\") {\r\n        r = m;\r\n        inputError(t);\r\n        timeUpdate(\r\n          { target: { value: customTime.minutes + 1 } },\r\n          \"minutes\",\r\n          \"custom\"\r\n        );\r\n      } else {\r\n        r = l;\r\n        inputError(t);\r\n      }\r\n    } else if (v < m) {\r\n      r = m;\r\n      inputError(t);\r\n    } else {\r\n      r = 0;\r\n    }\r\n    return r;\r\n  }\r\n\r\n  function timeUpdate(e, t, c) {\r\n    switch (c) {\r\n      case \"custom\":\r\n        setTime((prevTime) => ({\r\n          ...prevTime,\r\n          [t]: valueController(0, 60, parseInt(e.target.value), t),\r\n        }));\r\n        break;\r\n      case \"increment\":\r\n        setTime((prevTime) => ({\r\n          ...prevTime,\r\n          [t]: valueController(0, 60, parseInt(prevTime[t]) + 1, t),\r\n        }));\r\n        break;\r\n      case \"decrement\":\r\n        setTime((prevTime) => ({\r\n          ...prevTime,\r\n          [t]: valueController(0, 60, parseInt(prevTime[t]) - 1, t),\r\n        }));\r\n        break;\r\n      case \"reset\":\r\n        setTime((prevTime) => ({ ...prevTime, [t]: \"\" }));\r\n        break;\r\n      case \"fill\":\r\n        setTime((prevTime) => ({ ...prevTime, [t]: 0 }));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function keyDownHandler(event) {\r\n    switch (event.key) {\r\n      case \"Escape\":\r\n        dispatch(closeTimeInput());\r\n        break;\r\n      case \"Enter\":\r\n        dispatch(\r\n          updateTestTimer(\r\n            parseInt(customTime[\"minutes\"] * 60) +\r\n              parseInt(customTime[\"seconds\"])\r\n          )\r\n        );\r\n        dispatch(closeTimeInput());\r\n        dispatch(closeTimeMenu());\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  return (\r\n    <Container\r\n      ref={timeInputContainer}\r\n      tabIndex=\"2\"\r\n      onKeyDown={(event) => {\r\n        keyDownHandler(event);\r\n      }}\r\n    >\r\n      <Fade bottom duration={250}>\r\n        <TimeInput id=\"CustomTimeInput\">\r\n          <CloseTimeInput\r\n            src=\"icons/close.png\"\r\n            className=\"cyan-icon\"\r\n            onClick={() => dispatch(closeTimeInput())}\r\n          />\r\n\r\n          <TimeInputFixedOptions1>\r\n            <TimeOptions\r\n              onClick={() => {\r\n                timeUpdate({ target: { value: 0 } }, \"minutes\", \"custom\");\r\n                timeUpdate({ target: { value: 0 } }, \"seconds\", \"custom\");\r\n              }}\r\n              className={time == 0 ? \"selected-time-option\" : \"\"}\r\n            >\r\n              0s\r\n            </TimeOptions>\r\n\r\n            <TimeOptions\r\n              onClick={() => {\r\n                timeUpdate({ target: { value: 0 } }, \"minutes\", \"custom\");\r\n                timeUpdate({ target: { value: 30 } }, \"seconds\", \"custom\");\r\n              }}\r\n              className={time == 30 ? \"selected-time-option\" : \"\"}\r\n            >\r\n              30s\r\n            </TimeOptions>\r\n\r\n            <TimeOptions\r\n              onClick={() => {\r\n                timeUpdate({ target: { value: 0 } }, \"minutes\", \"custom\");\r\n                timeUpdate({ target: { value: 60 } }, \"seconds\", \"custom\");\r\n              }}\r\n              className={time == 60 ? \"selected-time-option\" : \"\"}\r\n            >\r\n              60s\r\n            </TimeOptions>\r\n          </TimeInputFixedOptions1>\r\n\r\n          <TimeInputUI>\r\n            <MinuteBlock>\r\n              <img\r\n                src=\"/icons/up-arrow.png\"\r\n                className=\"grey-icon arrow-icon\"\r\n                alt=\"\"\r\n                onClick={(event) => timeUpdate(event, \"minutes\", \"increment\")}\r\n              />\r\n\r\n              <HeadShake when={MinuteInputError} duration={400}>\r\n                <MinuteInput\r\n                  type=\"number\"\r\n                  value={customTime.minutes}\r\n                  onFocus={(event) => {\r\n                    timeUpdate(event, \"minutes\", \"reset\");\r\n                  }}\r\n                  onBlur={\r\n                    customTime.minutes === null\r\n                      ? (event) => timeUpdate(event, \"minutes\", \"fill\")\r\n                      : (event) => timeUpdate(event, \"minutes\", \"custom\")\r\n                  }\r\n                  onChange={(event) => {\r\n                    timeUpdate(event, \"minutes\", \"custom\");\r\n                  }}\r\n                />\r\n              </HeadShake>\r\n\r\n              <img\r\n                src=\"/icons/down-arrow.png\"\r\n                className=\"grey-icon arrow-icon\"\r\n                alt=\"\"\r\n                onClick={(event) => timeUpdate(event, \"minutes\", \"decrement\")}\r\n              />\r\n            </MinuteBlock>\r\n\r\n            <span>m</span>\r\n            <span className=\"time-input-divider\">:</span>\r\n\r\n            <SecondBlock>\r\n              <img\r\n                src=\"/icons/up-arrow.png\"\r\n                className=\"grey-icon arrow-icon\"\r\n                alt=\"\"\r\n                onClick={(event) => timeUpdate(event, \"seconds\", \"increment\")}\r\n              />\r\n\r\n              <HeadShake when={SecondInputError} duration={400}>\r\n                <SecondInput\r\n                  type=\"number\"\r\n                  value={customTime.seconds}\r\n                  onFocus={(event) => timeUpdate(event, \"seconds\", \"reset\")}\r\n                  onBlur={\r\n                    customTime.seconds\r\n                      ? (event) => timeUpdate(event, \"seconds\", \"custom\")\r\n                      : (event) => timeUpdate(event, \"seconds\", \"fill\")\r\n                  }\r\n                  onChange={(event) => timeUpdate(event, \"seconds\", \"custom\")}\r\n                />\r\n              </HeadShake>\r\n\r\n              <img\r\n                src=\"/icons/down-arrow.png\"\r\n                className=\"grey-icon arrow-icon\"\r\n                alt=\"\"\r\n                onClick={(event) => timeUpdate(event, \"seconds\", \"decrement\")}\r\n              />\r\n            </SecondBlock>\r\n\r\n            <span>s</span>\r\n          </TimeInputUI>\r\n\r\n          <TimeInputFixedOptions2>\r\n            <TimeOptions\r\n              onClick={() => {\r\n                timeUpdate(\r\n                  { target: { value: customTime.seconds - 5 } },\r\n                  \"seconds\",\r\n                  \"custom\"\r\n                );\r\n              }}\r\n            >\r\n              -5s\r\n            </TimeOptions>\r\n            <TimeOptions\r\n              onClick={() => {\r\n                timeUpdate(\r\n                  { target: { value: customTime.seconds + 5 } },\r\n                  \"seconds\",\r\n                  \"custom\"\r\n                );\r\n              }}\r\n            >\r\n              +5s\r\n            </TimeOptions>\r\n          </TimeInputFixedOptions2>\r\n          <Uploadtime\r\n            onClick={() => {\r\n              dispatch(\r\n                updateTestTimer(\r\n                  parseInt(customTime[\"minutes\"] * 60) +\r\n                    parseInt(customTime[\"seconds\"])\r\n                )\r\n              );\r\n              dispatch(closeTimeInput());\r\n              dispatch(closeTimeMenu());\r\n            }}\r\n          >\r\n            OK\r\n          </Uploadtime>\r\n        </TimeInput>\r\n      </Fade>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CustomTime;\r\n\r\n// styles\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  z-index: 3;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n\r\n  backdrop-filter: blur(3px);\r\n  transition: all 250ms ease-in-out;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst TimeInputFixedOptions1 = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  width: 100%;\r\n  border-bottom: 1px solid rgba(170, 170, 170, 0.2);\r\n  border-top: 1px solid rgba(170, 170, 170, 0.2);\r\n  margin-top: 10px;\r\n  p {\r\n    cursor: pointer;\r\n    /* margin: 10px 0 10px; */\r\n    margin: 5px 0;\r\n  }\r\n  .selected-time-option {\r\n    color: cyan;\r\n  }\r\n  @media (max-width: 430px) {\r\n    p {\r\n      font-size: 0.8em;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TimeInputFixedOptions2 = styled(TimeInputFixedOptions1)`\r\n  margin-top: 0;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst TimeOptions = styled.p`\r\n`;\r\n\r\nconst TimeInput = styled.div`\r\n  position: relative;\r\n  background-color: #17171a;\r\n  max-width: 50vw;\r\n  width: 300px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  box-shadow: -1px 10px 23px 0px rgba(0, 0, 0, 0.51);\r\n  -webkit-box-shadow: -1px 10px 23px 0px rgba(0, 0, 0, 0.51);\r\n  -moz-box-shadow: -1px 10px 23px 0px rgba(0, 0, 0, 0.51);\r\n`;\r\n\r\nconst CloseTimeInput = styled.img`\r\n  width: 12px;\r\n  margin-left: auto;\r\n  cursor: pointer;\r\n  padding: 5px;\r\n`;\r\nconst TimeInputUI = styled.div`\r\n  width: 100%;\r\n  padding: 10px 0px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  span {\r\n    margin: 0 0 0 10px;\r\n    font-size: 1.5em;\r\n  }\r\n\r\n  .arrow-icon {\r\n    width: 22px;\r\n  }\r\n\r\n  .time-input-divider {\r\n    margin: 0 10px;\r\n    color: #00ffff99;\r\n    font-size: 1.5em;\r\n  }\r\n\r\n  img {\r\n    cursor: pointer;\r\n  }\r\n\r\n  input {\r\n    background-color: transparent;\r\n    border: none;\r\n    color: #aaaaaa;\r\n    font-size: 1.5em;\r\n    text-align: center;\r\n    width: 2ch;\r\n  }\r\n  input:focus {\r\n    outline: none;\r\n  }\r\n  input::-webkit-outer-spin-button,\r\n  input::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n  input[type=\"number\"] {\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  @media (max-width: 430px) {\r\n    span {\r\n      font-size: 1em;\r\n    }\r\n    input {\r\n      font-size: 1em;\r\n    }\r\n    .arrow-icon {\r\n      width: 18px;\r\n    }\r\n  }\r\n`;\r\nconst MinuteBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst MinuteInput = styled.input``;\r\n\r\nconst SecondBlock = styled(MinuteBlock)``;\r\n\r\nconst SecondInput = styled(MinuteInput)``;\r\n\r\nconst Uploadtime = styled.p`\r\n  left: auto;\r\n  opacity: 0.75;\r\n  color: cyan;\r\n  cursor: pointer;\r\n  margin: 10px 0px;\r\n  @media (max-width: 430px) {\r\n    margin: 10px;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}