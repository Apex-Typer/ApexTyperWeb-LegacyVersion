{"ast":null,"code":"import { current } from \"@reduxjs/toolkit\";\n\nconst reducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    word: \"\",\n    isWrong: false,\n    isComplete: false\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"UPDATE_INPUT\":\n      return evaluateAndUpdateInput(action.payload.entered, action.payload.current);\n\n    case \"RESET_INPUT\":\n      return {\n        word: \"\",\n        isWrong: false,\n        isComplete: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n\nfunction evaluateAndUpdateInput(enteredWord, currentWord) {\n  let isWrong = false;\n  let isComplete = false;\n  let enteredWordLength = enteredWord.length;\n  let currentWordLength = currentWord.leng;\n}","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/state/reducers/enteredWord.js"],"names":["current","reducer","state","word","isWrong","isComplete","action","type","evaluateAndUpdateInput","payload","entered","enteredWord","currentWord","enteredWordLength","length","currentWordLength","leng"],"mappings":"AAAA,SAASA,OAAT,QAAwB,kBAAxB;;AAEA,MAAMC,OAAO,GAAG,YAGX;AAAA,MAFHC,KAEG,uEAFK;AAAEC,IAAAA,IAAI,EAAE,EAAR;AAAYC,IAAAA,OAAO,EAAE,KAArB;AAA4BC,IAAAA,UAAU,EAAE;AAAxC,GAEL;AAAA,MADHC,MACG;;AACH,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,cAAL;AACE,aAAOC,sBAAsB,CAC3BF,MAAM,CAACG,OAAP,CAAeC,OADY,EAE3BJ,MAAM,CAACG,OAAP,CAAeT,OAFY,CAA7B;;AAIF,SAAK,aAAL;AACE,aAAO;AAAEG,QAAAA,IAAI,EAAE,EAAR;AAAYC,QAAAA,OAAO,EAAE,KAArB;AAA4BC,QAAAA,UAAU,EAAE;AAAxC,OAAP;;AACF;AACE,aAAOH,KAAP;AATJ;AAWD,CAfD;;AAiBA,eAAeD,OAAf;;AAEA,SAASO,sBAAT,CAAgCG,WAAhC,EAA6CC,WAA7C,EAA0D;AACxD,MAAIR,OAAO,GAAG,KAAd;AACA,MAAIC,UAAU,GAAG,KAAjB;AACA,MAAIQ,iBAAiB,GAAGF,WAAW,CAACG,MAApC;AACA,MAAIC,iBAAiB,GAAGH,WAAW,CAACI,IAApC;AACD","sourcesContent":["import { current } from \"@reduxjs/toolkit\";\r\n\r\nconst reducer = (\r\n  state = { word: \"\", isWrong: false, isComplete: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_INPUT\":\r\n      return evaluateAndUpdateInput(\r\n        action.payload.entered,\r\n        action.payload.current\r\n      );\r\n    case \"RESET_INPUT\":\r\n      return { word: \"\", isWrong: false, isComplete: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n\r\nfunction evaluateAndUpdateInput(enteredWord, currentWord) {\r\n  let isWrong = false;\r\n  let isComplete = false;\r\n  let enteredWordLength = enteredWord.length\r\n  let currentWordLength = currentWord.leng\r\n}\r\n"]},"metadata":{},"sourceType":"module"}