{"ast":null,"code":"var _jsxFileName = \"D:\\\\APEX_TYPER\\\\apex_typer_5.0\\\\src\\\\components\\\\TextInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TextInput(props) {\n  _s();\n\n  const [currentWord, setCurrentWord] = useState({\n    id: \"word-1\",\n    word: \"\",\n    width: 0,\n    left: 0\n  });\n  var wrong = false;\n  useEffect(() => {\n    setCurrentWord(prevWord => ({ ...prevWord,\n      word: document.getElementById(currentWord.id).innerText,\n      width: document.getElementById(currentWord.id).offsetWidth,\n      left: document.getElementById(currentWord.id).offsetLeft\n    }));\n    console.log('useeffect called');\n  }, []);\n\n  function textInputEvaluater(e) {\n    let enteredValue = e.target.value.replace(/\\s/g, \"\");\n    wrong = false;\n    document.getElementById(currentWord.id).classList.remove(\"right-warning\");\n    document.getElementById(currentWord.id).classList.remove(\"wrong-warning\");\n\n    if (enteredValue != currentWord.word.slice(0, enteredValue.length)) {\n      document.getElementById(currentWord.id).classList.add(\"wrong-warning\");\n      wrong = true;\n    } else if (enteredValue == currentWord.word) {\n      document.getElementById(currentWord.id).classList.add(\"right-warning\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    width: `${currentWord.width}px`,\n    left: `${currentWord.left}px`,\n    onChange: e => textInputEvaluater(e)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TextInput, \"leyu/cyFgHcm41uT7Dc6PCobRbs=\");\n\n_c = TextInput;\nexport default TextInput;\nconst Container = styled.input`\n  position: absolute;\n  top: 0;\n  background-color: transparent;\n  border: none;\n  border-bottom: #aaa solid 2px;\n  caret-color: #ffff;\n  font-size: 1.2em;\n  text-align: center;\n  margin: 10px 0 0;\n  padding: 3px 3px 5px;\n  color: #ffff;\n  width: ${props => props.width};\n  transform: translateX(${props => props.left});\n  transition: all 150ms ease-in-out;\n\n  &:focus {\n    outline: none;\n  }\n`;\n_c2 = Container;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TextInput\");\n$RefreshReg$(_c2, \"Container\");","map":{"version":3,"sources":["D:/APEX_TYPER/apex_typer_5.0/src/components/TextInput.js"],"names":["React","useState","useEffect","useRef","styled","TextInput","props","currentWord","setCurrentWord","id","word","width","left","wrong","prevWord","document","getElementById","innerText","offsetWidth","offsetLeft","console","log","textInputEvaluater","e","enteredValue","target","value","replace","classList","remove","slice","length","add","Container","input"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACxB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAC;AAC7CQ,IAAAA,EAAE,EAAE,QADyC;AAE7CC,IAAAA,IAAI,EAAE,EAFuC;AAG7CC,IAAAA,KAAK,EAAE,CAHsC;AAI7CC,IAAAA,IAAI,EAAE;AAJuC,GAAD,CAA9C;AAOA,MAAIC,KAAK,GAAG,KAAZ;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,cAAc,CAAEM,QAAD,KAAe,EAC5B,GAAGA,QADyB;AAE5BJ,MAAAA,IAAI,EAAEK,QAAQ,CAACC,cAAT,CAAwBT,WAAW,CAACE,EAApC,EAAwCQ,SAFlB;AAG5BN,MAAAA,KAAK,EAAEI,QAAQ,CAACC,cAAT,CAAwBT,WAAW,CAACE,EAApC,EAAwCS,WAHnB;AAI5BN,MAAAA,IAAI,EAAEG,QAAQ,CAACC,cAAT,CAAwBT,WAAW,CAACE,EAApC,EAAwCU;AAJlB,KAAf,CAAD,CAAd;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,GARQ,EAQN,EARM,CAAT;;AAUA,WAASC,kBAAT,CAA4BC,CAA5B,EAA+B;AAC7B,QAAIC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAeC,OAAf,CAAuB,KAAvB,EAA8B,EAA9B,CAAnB;AACAd,IAAAA,KAAK,GAAG,KAAR;AACAE,IAAAA,QAAQ,CAACC,cAAT,CAAwBT,WAAW,CAACE,EAApC,EAAwCmB,SAAxC,CAAkDC,MAAlD,CAAyD,eAAzD;AACAd,IAAAA,QAAQ,CAACC,cAAT,CAAwBT,WAAW,CAACE,EAApC,EAAwCmB,SAAxC,CAAkDC,MAAlD,CAAyD,eAAzD;;AACA,QAAIL,YAAY,IAAIjB,WAAW,CAACG,IAAZ,CAAiBoB,KAAjB,CAAuB,CAAvB,EAA0BN,YAAY,CAACO,MAAvC,CAApB,EAAoE;AAClEhB,MAAAA,QAAQ,CAACC,cAAT,CAAwBT,WAAW,CAACE,EAApC,EAAwCmB,SAAxC,CAAkDI,GAAlD,CAAsD,eAAtD;AACAnB,MAAAA,KAAK,GAAG,IAAR;AACD,KAHD,MAGO,IAAIW,YAAY,IAAIjB,WAAW,CAACG,IAAhC,EAAsC;AAC3CK,MAAAA,QAAQ,CAACC,cAAT,CAAwBT,WAAW,CAACE,EAApC,EAAwCmB,SAAxC,CAAkDI,GAAlD,CAAsD,eAAtD;AACD;AACF;;AAED,sBACE,QAAC,SAAD;AACE,IAAA,KAAK,EAAG,GAAEzB,WAAW,CAACI,KAAM,IAD9B;AAEE,IAAA,IAAI,EAAG,GAAEJ,WAAW,CAACK,IAAK,IAF5B;AAGE,IAAA,QAAQ,EAAGW,CAAD,IAAOD,kBAAkB,CAACC,CAAD;AAHrC;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAxCQlB,S;;KAAAA,S;AA0CT,eAAeA,SAAf;AAEA,MAAM4B,SAAS,GAAG7B,MAAM,CAAC8B,KAAM;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAY5B,KAAD,IAAWA,KAAK,CAACK,KAAM;AAClC,0BAA2BL,KAAD,IAAWA,KAAK,CAACM,IAAK;AAChD;AACA;AACA;AACA;AACA;AACA,CAnBA;MAAMqB,S","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction TextInput(props) {\r\n  const [currentWord, setCurrentWord] = useState({\r\n    id: \"word-1\",\r\n    word: \"\",\r\n    width: 0,\r\n    left: 0,\r\n  });\r\n\r\n  var wrong = false;\r\n\r\n  useEffect(() => {\r\n    setCurrentWord((prevWord) => ({\r\n      ...prevWord,\r\n      word: document.getElementById(currentWord.id).innerText,\r\n      width: document.getElementById(currentWord.id).offsetWidth,\r\n      left: document.getElementById(currentWord.id).offsetLeft,\r\n    }));\r\n    console.log('useeffect called');\r\n  }, []);\r\n\r\n  function textInputEvaluater(e) {\r\n    let enteredValue = e.target.value.replace(/\\s/g, \"\");\r\n    wrong = false;\r\n    document.getElementById(currentWord.id).classList.remove(\"right-warning\");\r\n    document.getElementById(currentWord.id).classList.remove(\"wrong-warning\");\r\n    if (enteredValue != currentWord.word.slice(0, enteredValue.length)) {\r\n      document.getElementById(currentWord.id).classList.add(\"wrong-warning\");\r\n      wrong = true;\r\n    } else if (enteredValue == currentWord.word) {\r\n      document.getElementById(currentWord.id).classList.add(\"right-warning\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container\r\n      width={`${currentWord.width}px`}\r\n      left={`${currentWord.left}px`}\r\n      onChange={(e) => textInputEvaluater(e)}\r\n    ></Container>\r\n  );\r\n}\r\n\r\nexport default TextInput;\r\n\r\nconst Container = styled.input`\r\n  position: absolute;\r\n  top: 0;\r\n  background-color: transparent;\r\n  border: none;\r\n  border-bottom: #aaa solid 2px;\r\n  caret-color: #ffff;\r\n  font-size: 1.2em;\r\n  text-align: center;\r\n  margin: 10px 0 0;\r\n  padding: 3px 3px 5px;\r\n  color: #ffff;\r\n  width: ${(props) => props.width};\r\n  transform: translateX(${(props) => props.left});\r\n  transition: all 150ms ease-in-out;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}