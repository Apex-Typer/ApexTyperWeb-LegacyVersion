[{"E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\index.js":"1","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\App.js":"2","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\store.js":"3","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\Settings.js":"4","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\Home.js":"5","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\Footer.js":"6","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\Navbar.js":"7","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\index.js":"8","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\action-creators\\index.js":"9","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\Controls.js":"10","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\TestResult.js":"11","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\Test.js":"12","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\controlsStates.js":"13","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\inputLog.js":"14","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\testOn.js":"15","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\enteredWord.js":"16","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\currentWord.js":"17","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\dialogFlags.js":"18","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\inputFocused.js":"19","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\showResult.js":"20","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\testWords.js":"21","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\testTimer.js":"22","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\CustomTime.js":"23","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\TextInput.js":"24","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\wordsData.js":"25"},{"size":628,"mtime":1677641718976,"results":"26","hashOfConfig":"27"},{"size":4083,"mtime":1677641718965,"results":"28","hashOfConfig":"27"},{"size":232,"mtime":1677641718976,"results":"29","hashOfConfig":"27"},{"size":3561,"mtime":1677641718965,"results":"30","hashOfConfig":"27"},{"size":3102,"mtime":1677641718965,"results":"31","hashOfConfig":"27"},{"size":1343,"mtime":1677641718965,"results":"32","hashOfConfig":"27"},{"size":1631,"mtime":1677641718965,"results":"33","hashOfConfig":"27"},{"size":666,"mtime":1677641718976,"results":"34","hashOfConfig":"27"},{"size":4060,"mtime":1679075623271,"results":"35","hashOfConfig":"27"},{"size":7294,"mtime":1677641718965,"results":"36","hashOfConfig":"27"},{"size":4102,"mtime":1679075608061,"results":"37","hashOfConfig":"27"},{"size":4844,"mtime":1677641718965,"results":"38","hashOfConfig":"27"},{"size":471,"mtime":1677641718976,"results":"39","hashOfConfig":"27"},{"size":1230,"mtime":1677641718976,"results":"40","hashOfConfig":"27"},{"size":227,"mtime":1677641718976,"results":"41","hashOfConfig":"27"},{"size":1203,"mtime":1677641718976,"results":"42","hashOfConfig":"27"},{"size":3465,"mtime":1677641718976,"results":"43","hashOfConfig":"27"},{"size":293,"mtime":1677641718976,"results":"44","hashOfConfig":"27"},{"size":253,"mtime":1677641718976,"results":"45","hashOfConfig":"27"},{"size":249,"mtime":1677641718976,"results":"46","hashOfConfig":"27"},{"size":4476,"mtime":1677641718976,"results":"47","hashOfConfig":"27"},{"size":1445,"mtime":1677641718976,"results":"48","hashOfConfig":"27"},{"size":11807,"mtime":1677641718965,"results":"49","hashOfConfig":"27"},{"size":5863,"mtime":1679072993302,"results":"50","hashOfConfig":"27"},{"size":2877,"mtime":1677641718968,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ct2ypb",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","suppressedMessages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","suppressedMessages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132"},{"filePath":"133","messages":"134","suppressedMessages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140"},"E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\index.js",[],[],"E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\App.js",["141","142","143","144","145","146","147","148","149"],[],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Home from \"./components/Home\";\r\nimport Footer from \"./components/Footer\";\r\nimport styled from \"styled-components\";\r\nimport Settings from \"./components/Settings\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  blurInput,\r\n  closeTimeInput,\r\n  closeTimeMenu,\r\n  focusInput,\r\n  resetTest,\r\n  showTimeInput,\r\n  switchCapsLockOn,\r\n  switchCapsLockOff,\r\n} from \"./state/action-creators\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  const windowWidth = useRef(window.innerWidth);\r\n\r\n  const showResult = useSelector((state) => state.showResult);\r\n\r\n  const inputFocused = useSelector((state) => state.inputFocused);\r\n\r\n  const timeInput = useSelector((state) => state.controlsStates.timeInput);\r\n  const timeMenu = useSelector((state) => state.controlsStates.timeMenu);\r\n\r\n  function handleClickOutside(event) {\r\n    // if (\r\n    //   document.getElementById(\"TestContentChild\") &&\r\n    //   document.getElementById(\"TestContentChild\").contains(event.target)\r\n    // ) {\r\n    //   // if (!inputFocused) {\r\n    //   //   dispatch(focusInput());\r\n    //   // } else {\r\n    //   //   dispatch(blurInput());\r\n    //   //   dispatch(focusInput);\r\n    //   // }\r\n    // } else\r\n    if (\r\n      document.getElementById(\"TestContentChild\") &&\r\n      !document.getElementById(\"TestContentChild\").contains(event.target) &&\r\n      inputFocused\r\n    ) {\r\n      dispatch(blurInput());\r\n    }\r\n    if (\r\n      document.getElementById(\"TimeControls\") &&\r\n      !document.getElementById(\"TimeControls\").contains(event.target) &&\r\n      (timeInput || timeMenu)\r\n    ) {\r\n      dispatch(closeTimeMenu());\r\n      if (\r\n        document.getElementById(\"CustomTimeInput\") &&\r\n        !document.getElementById(\"CustomTimeInput\").contains(event.target)\r\n      ) {\r\n        dispatch(closeTimeInput());\r\n      }\r\n    }\r\n    document.getElementById(\"App\").focus();\r\n  }\r\n\r\n  function handleKeyDown(event) {\r\n    event.stopPropagation();\r\n    if (!showResult) {\r\n      if (!inputFocused) {\r\n        event.preventDefault();\r\n        dispatch(focusInput());\r\n        if (timeMenu) {\r\n          dispatch(closeTimeMenu());\r\n        }\r\n      }\r\n      if (event.key == \"Alt\" && inputFocused) {\r\n        dispatch(blurInput());\r\n      }\r\n    }\r\n    if (event.key == \"Tab\" || event.key == \"Alt\") {\r\n      event.preventDefault();\r\n    }\r\n    if (\r\n      (event.shiftKey || event.ctrlKey) &&\r\n      (event.code == \"Enter\" || event.keyCode == 32)\r\n    ) {\r\n      resetTest(dispatch);\r\n    }\r\n\r\n    if (event.ctrlKey && event.code == \"Slash\") {\r\n      dispatch(showTimeInput());\r\n    }\r\n    if (event.getModifierState(\"CapsLock\")) {\r\n      dispatch(switchCapsLockOn());\r\n    } else {\r\n      dispatch(switchCapsLockOff());\r\n    }\r\n    // console.log(event);\r\n  }\r\n\r\n  function handleResize() {\r\n    if (window.innerWidth != windowWidth.current) {\r\n      dispatch(blurInput());\r\n      dispatch(focusInput());\r\n      windowWidth.current = window.innerWidth;\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", handleResize);\r\n    window.addEventListener(\"focus\", () =>\r\n      document.getElementById(\"App\").focus()\r\n    );\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return (\r\n    <Container\r\n      tabIndex={1}\r\n      onClick={(event) => handleClickOutside(event)}\r\n      onKeyDown={(event) => handleKeyDown(event)}\r\n      id=\"App\"\r\n    >\r\n      <Navbar />\r\n      <Routes>\r\n        <Route exact path=\"/\" element={<Home />} />\r\n        <Route exact path=\"/settings\" element={<Settings />} />\r\n      </Routes>\r\n      <Footer />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\nconst Container = styled.div`\r\n  /* position: relative; */\r\n  background-color: #1b1b1e;\r\n  color: #aaaaaa;\r\n  overflow-x: hidden;\r\n  padding: 0 10%;\r\n  @media (max-width: 639px) {\r\n    padding: 0 5%;\r\n    min-height: calc(100vh- 180px);\r\n  }\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\store.js",["150"],[],"import { createStore, applyMiddleware } from \"redux\";\r\nimport reducers from \"./reducers/index\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nexport const store = createStore(reducers, composeWithDevTools());\r\n","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\Settings.js",["151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168"],[],"import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { styled as styledMUI } from \"@mui/material/styles\";\r\nimport { alpha } from \"@mui/material/styles\";\r\nimport { pink } from \"@mui/material/colors\";\r\nimport withReveal from \"react-reveal/withReveal\";\r\nimport Fade from \"react-reveal/Fade\";\r\nimport Pulse from \"react-reveal/Pulse\";\r\nimport { Switch } from \"@mui/material\";\r\nimport { FormControlLabel } from \"@mui/material\";\r\nimport {\r\n  resetInput,\r\n  resetLiveTime,\r\n  resetTest,\r\n  resetWord,\r\n} from \"../state/action-creators\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nfunction Settings() {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    resetTest(dispatch);\r\n  }, []);\r\n\r\n  const settingsData = { backSpaceOn: true };\r\n\r\n  function optionClickHandler(option, setOption, item, value) {\r\n    setOption(value);\r\n    localStorage.setItem(item, value);\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      {/* <SettingsBlock>\r\n        <MainSettingsBlockChild>\r\n          <MainHeading>BackSpace</MainHeading>\r\n          <SettingsToggleOption>\r\n            {settingsData.backSpaceOn ? \"enabled\" : \"disabled\"}\r\n          </SettingsToggleOption>\r\n          <FormControlLabel control={<Android12Switch defaultChecked />} />\r\n\r\n          <Switch />\r\n        </MainSettingsBlockChild>\r\n      </SettingsBlock> */}\r\n      This feature is under-development, stay tuned for the next update to\r\n      experience some really good user customisability ;)\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Settings;\r\n\r\nconst Android12Switch = styledMUI(Switch)(({ theme }) => ({\r\n  padding: 8,\r\n  marginLeft: \"35%\",\r\n\r\n  \"& .MuiSwitch-root\": {\r\n    marginLeft: 20,\r\n    left: 20,\r\n  },\r\n\r\n  \"& .MuiSwitch-track\": {\r\n    borderRadius: 22 / 2,\r\n    border: \"1px solid #aaa\",\r\n    backgroundColor: \"#1b1b1e\",\r\n    boxSizing: \"border-box\",\r\n  },\r\n\r\n  \"& .MuiSwitch-switchBase.Mui-checked\": {\r\n    color: \"#c9c9c9\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"transparent\",\r\n    },\r\n  },\r\n\r\n  \"& .MuiSwitch-switchBase.Mui-checked + .MuiSwitch-track\": {\r\n    backgroundColor: \"#aaa\",\r\n  },\r\n\r\n  \"& .MuiSwitch-thumb\": {\r\n    boxShadow: \"none\",\r\n    width: 16,\r\n    height: 16,\r\n    margin: 2,\r\n  },\r\n}));\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  min-height: calc(100vh - 200px);\r\n  padding-top: 50px;\r\n\r\n  position: relative;\r\n\r\n  @media (max-width: 639px) {\r\n    min-height: calc(100vh - 230px);\r\n    font-size: 1rem;\r\n  }\r\n\r\n  /* temorary style for dialog */\r\n  text-align: center;\r\n  color: rgba(255, 255, 255, 0.2);\r\n  font-size: 1.1rem;\r\n`;\r\nconst SettingsBlock = styled.div`\r\n  /* border: 1px solid rgba(170, 170, 170, 0.3); */\r\n  border-radius: 4px;\r\n  box-shadow: -1px 10px 23px 0px rgba(0, 0, 0, 0.51);\r\n  -webkit-box-shadow: -1px 10px 23px 0px rgba(0, 0, 0, 0.51);\r\n  -moz-box-shadow: -1px 10px 23px 0px rgba(0, 0, 0, 0.51);\r\n  padding: 10px;\r\n  box-sizing: border-box;\r\n  max-width: 300px;\r\n  /* height: 300px; */\r\n  background-color: #17171a;\r\n  transition: height 1s ease-in-out;\r\n`;\r\n\r\nconst MainSettingsBlockChild = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst MainHeading = styled.span`\r\n  font-size: 1.8rem;\r\n  border-bottom: 1px solid cyan;\r\n  box-sizing: border-box;\r\n`;\r\n\r\nconst SettingsToggleOption = styled.span`\r\n  box-sizing: border-box;\r\n  border: 1px solid rgba(170, 170, 170, 0.3);\r\n  padding: 0px 3px;\r\n  color: #1b1b1b;\r\n  background-color: rgba(170, 170, 170, 0.7);\r\n  border-radius: 0%;\r\n`;\r\n","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\Home.js",["169","170","171","172"],[],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport Controls from \"./Controls\";\r\nimport Test from \"./Test\";\r\nimport TestResult from \"./TestResult\";\r\nimport { BrowserView } from \"react-device-detect\";\r\n\r\nfunction Home() {\r\n  const showResult = useSelector((state) => state.showResult);\r\n  const testOn = useSelector((state) => state.testOn);\r\n  const inputFocused = useSelector((state) => state.inputFocused);\r\n  const capsLock = useSelector((state) => state.dialogFlags.capsLock);\r\n  const bodyHeight = document.documentElement.scrollHeight;\r\n\r\n  return (\r\n    <Container id=\"HomeSection\" bodyHeight={bodyHeight}>\r\n      <Controls />\r\n      {showResult ? <TestResult /> : <Test />}\r\n      <DialogBoxForFocus\r\n        testOn={testOn}\r\n        inputFocused={inputFocused}\r\n        showResult={showResult}\r\n      >\r\n        click on the text or press any key to focus\r\n      </DialogBoxForFocus>\r\n      <DialogBoxForStart\r\n        testOn={testOn}\r\n        inputFocused={inputFocused}\r\n        showResult={showResult}\r\n      >\r\n        start the test by typing the first word\r\n      </DialogBoxForStart>\r\n      <DialogBoxForCapsLock capsLock={capsLock}>Caps Lock</DialogBoxForCapsLock>\r\n      <BrowserView>\r\n        <DialogBoxForRestart\r\n          testOn={testOn}\r\n          inputFocused={inputFocused}\r\n          showResult={showResult}\r\n        >\r\n          shift/ctrl + space/enter - restart\r\n        </DialogBoxForRestart>\r\n      </BrowserView>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\nconst Container = styled.div`\r\n  /* min-height: calc(100vh - 140px); */\r\n  min-height: ${(props) => props.bodyHeight - 140}px;\r\n  position: relative;\r\n  /* border: 1px solid white; */\r\n  /* \r\n  @media (max-width: 639px) {\r\n    min-height: calc(100vh - 180px);\r\n  } */\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst DialogBoxMain = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  display: flex;\r\n  /* padding: 30px 0 0; */\r\n  bottom: 30px;\r\n  /* border: 1px solid; */\r\n  justify-content: center;\r\n  /* color: ${(props) =>\r\n    props.testOn && props.inputFocused && !props.showResult\r\n      ? \"transparent\"\r\n      : \"rgba(255, 255, 255, 0.15)\"}; */\r\n  color: rgba(255, 255, 255, 0.15);\r\n  font-size: 1rem;\r\n  transition: color 200ms ease-in-out;\r\n`;\r\n\r\nconst DialogBoxForCapsLock = styled(DialogBoxMain)`\r\n  width: fit-content;\r\n  margin: auto;\r\n  position: relative;\r\n  top:  10px;\r\n  color: ${(props) =>\r\n    props.capsLock ? \"rgba(255, 162, 0, 0.3)\" : \"transparent\"};\r\n`;\r\n\r\nconst DialogBoxForRestart = styled(DialogBoxMain)``;\r\n\r\nconst DialogBoxForFocus = styled(DialogBoxMain)`\r\n  position: relative;\r\n  color: ${(props) =>\r\n    !props.inputFocused && !props.showResult\r\n      ? \"rgba(255, 255, 255, 0.15)\"\r\n      : \"transparent\"};\r\n  /* bottom: 170px; */\r\n  top: 20px;\r\n`;\r\n\r\nconst DialogBoxForStart = styled(DialogBoxForFocus)`\r\n  color: ${(props) =>\r\n    props.inputFocused && !props.testOn\r\n      ? \"rgba(255, 255, 255, 0.15)\"\r\n      : \"transparent\"};\r\n  top: 0px;\r\n`;\r\n","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\Footer.js",["173"],[],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <Container>\r\n      <a href=\"mailto: contact@apextyper.com\" className=\"footer-links\">\r\n        <img src=\"icons/email.png\" alt=\"\" className=\"icons\" /> Mail\r\n      </a>\r\n\r\n      <a href=\"/\" className=\"footer-links\">\r\n        <img src=\"icons/compare.png\" alt=\"\" className=\"icons\" /> v2.0\r\n      </a>\r\n\r\n      <a\r\n        href=\"https://www.instagram.com/apextyper/\"\r\n        target=\"_blank\"\r\n        className=\"footer-links\"\r\n      >\r\n        <img src=\"icons/instagram.png\" alt=\"\" className=\"icons\" /> Instagram\r\n      </a>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  bottom: 20px;\r\n  width: 80%;\r\n  margin: auto;\r\n  /* padding-bottom: 30px; */\r\n  height: 40px;\r\n  color: #575757;\r\n  /* border:1px solid white; */\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  .footer-links {\r\n    font-size: 0.8em;\r\n    color: #575757;\r\n\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    .icons {\r\n      filter: invert(30%);\r\n      width: 16px;\r\n      margin-right: 3px;\r\n    }\r\n  }\r\n\r\n  @media (max-width: 639px) {\r\n    width: 90%;\r\n  }\r\n\r\n  @media (max-width: 430px) {\r\n    font-size: 0.6em;\r\n\r\n    .icons {\r\n      width: 12px;\r\n    }\r\n  }\r\n`;\r\n","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\Navbar.js",[],[],"E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\index.js",[],[],"E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\action-creators\\index.js",[],[],"E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\Controls.js",["174","175","176","177","178","179","180","181","182","183","184"],[],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Slide, Fade } from \"react-reveal\";\r\nimport CustomTime from \"./CustomTime\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  showTimeInput,\r\n  closeTimeInput,\r\n  showTimeMenu,\r\n  closeTimeMenu,\r\n  resetLiveTime,\r\n  updateTestTimer,\r\n  resetTest,\r\n  decrementLiveTime,\r\n  enableShowResult,\r\n} from \"../state/action-creators\";\r\n\r\nfunction Controls() {\r\n  // states and state managers\r\n\r\n  const timeMenuRef = useRef(null);\r\n  const timerFunction = useRef(null);\r\n\r\n  const testOn = useSelector((state) => state.testOn);\r\n  const showResult = useSelector((state) => state.showResult);\r\n  const time = useSelector((state) => state.testTimer.time);\r\n  const liveTime = useSelector((state) => state.testTimer.liveTime);\r\n  const timeForDisplay = useSelector((state) => state.testTimer.forDisplay);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const timeInput = useSelector((state) => state.controlsStates.timeInput);\r\n  const timeMenu = useSelector((state) => state.controlsStates.timeMenu);\r\n\r\n  function timerSettingsClick() {\r\n    if (timeMenu) {\r\n      dispatch(closeTimeMenu());\r\n    } else {\r\n      dispatch(showTimeMenu());\r\n    }\r\n  }\r\n\r\n  function timeOptionClickHandler(value) {\r\n    dispatch(updateTestTimer(value));\r\n    dispatch(resetLiveTime());\r\n    dispatch(closeTimeMenu());\r\n    if (timeInput) {\r\n      dispatch(closeTimeInput());\r\n    }\r\n  }\r\n\r\n  function restartOnClick() {\r\n    resetTest(dispatch);\r\n  }\r\n\r\n  useEffect(() => {\r\n    clearInterval(timerFunction.current);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (liveTime == 0 && testOn) {\r\n      // resetTest(dispatch);\r\n      clearInterval(timerFunction.current);\r\n      dispatch(enableShowResult());\r\n    }\r\n  }, [liveTime]);\r\n\r\n  useEffect(() => {\r\n    if (testOn) {\r\n      timerFunction.current = setInterval(function () {\r\n        dispatch(decrementLiveTime());\r\n      }, 1000);\r\n    } else {\r\n      clearInterval(timerFunction.current);\r\n    }\r\n  }, [testOn]);\r\n\r\n  return (\r\n    <Container>\r\n      <Fade left duration={250}>\r\n        <Time>\r\n          {testOn && !showResult && time > 0 ? (\r\n            <p id=\"time-view\">\r\n              {time <= 60\r\n                ? `${liveTime}s`\r\n                : `${timeForDisplay.minutes}:${timeForDisplay.seconds}`}\r\n            </p>\r\n          ) : (\r\n            <TimeControls id=\"TimeControls\">\r\n              <TimeSettings\r\n                src=\"icons/timer_settings.png\"\r\n                className=\"time-icons grey-icon\"\r\n                onClick={(event) => {\r\n                  event.stopPropagation();\r\n                  timerSettingsClick(event);\r\n                }}\r\n              />\r\n\r\n              <TimeSettingsMenuWrap>\r\n                <Slide\r\n                  duration={300}\r\n                  delay={timeMenu ? 100 : 0}\r\n                  left\r\n                  when={timeMenu}\r\n                  className=\"time-settings-menu\"\r\n                >\r\n                  <TimeSettingsMenu className={!timeMenu && \"display-none\"}>\r\n                    <Time0\r\n                      onClick={() => timeOptionClickHandler(0)}\r\n                      className={time == 0 ? \"selected-time-option\" : \"\"}\r\n                    >\r\n                      0s\r\n                    </Time0>\r\n\r\n                    <Time30\r\n                      onClick={() => timeOptionClickHandler(30)}\r\n                      className={time == 30 ? \"selected-time-option\" : \"\"}\r\n                    >\r\n                      30s\r\n                    </Time30>\r\n\r\n                    <Time60\r\n                      onClick={() => timeOptionClickHandler(60)}\r\n                      className={time == 60 ? \"selected-time-option\" : \"\"}\r\n                    >\r\n                      60s\r\n                    </Time60>\r\n\r\n                    <TimeCustom\r\n                      src=\"icons/time_input.png\"\r\n                      onClick={() => dispatch(showTimeInput())}\r\n                      className={\r\n                        time != 0 && time != 30 && time != 60\r\n                          ? \"cyan-icon\"\r\n                          : \"grey-icon\"\r\n                      }\r\n                    />\r\n                  </TimeSettingsMenu>\r\n                </Slide>\r\n              </TimeSettingsMenuWrap>\r\n\r\n              <CurrentTimeWrap>\r\n                <Slide\r\n                  duration={!timeMenu ? 250 : 100}\r\n                  delay={!timeMenu ? 300 : 0}\r\n                  left\r\n                  when={!timeMenu}\r\n                >\r\n                  <CurrentTime\r\n                    className={timeMenu && \"display-none\"}\r\n                    duration={!timeMenu ? 250 : 100}\r\n                    delay={!timeMenu ? 300 : 0}\r\n                    left={!timeMenu}\r\n                    timeMenu={timeMenu}\r\n                    onClick={() => dispatch(showTimeInput())}\r\n                  >\r\n                    {time <= 60\r\n                      ? `${time}s`\r\n                      : `${timeForDisplay.minutes}:${timeForDisplay.seconds}`}\r\n                  </CurrentTime>\r\n                </Slide>\r\n              </CurrentTimeWrap>\r\n            </TimeControls>\r\n          )}\r\n        </Time>\r\n      </Fade>\r\n\r\n      <Fade right duration={250}>\r\n        <Restart\r\n          src=\"icons/restart.png\"\r\n          className=\"grey-icon\"\r\n          id=\"restartTest\"\r\n          onClick={() => restartOnClick()}\r\n        />\r\n      </Fade>\r\n\r\n      {timeInput && <CustomTime />}\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default Controls;\r\n\r\n// controls\r\n\r\nconst Container = styled.div`\r\n  padding-top: 35px;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  #time-view {\r\n    margin: 0;\r\n    color: cyan;\r\n  }\r\n\r\n  .time-icons {\r\n    width: 22px;\r\n    height: 22px;\r\n  }\r\n\r\n  @media (max-width: 430px) {\r\n    padding-top: 15px;\r\n    font-size: 0.75em;\r\n\r\n    .time-icons {\r\n      width: 18px;\r\n      height: 18px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Time = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst TimeControls = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  position: relative;\r\n`;\r\n\r\nconst TimeSettings = styled.img`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TimeSettingsMenuWrap = styled.div`\r\n  position: absolute;\r\n  left: 27px;\r\n  z-index: 2;\r\n  background-color: transparent;\r\n\r\n  overflow: hidden;\r\n\r\n  display: flex;\r\n\r\n  * {\r\n    background-color: transparent;\r\n  }\r\n`;\r\n\r\nconst CurrentTimeWrap = styled(TimeSettingsMenuWrap)`\r\n  cursor: pointer;\r\n`;\r\n\r\nconst TimeSettingsMenu = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  * {\r\n    margin: 0 5px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .selected-time-option {\r\n    color: cyan;\r\n  }\r\n`;\r\n\r\nconst TimeCustom = styled.img`\r\n  width: 19px;\r\n  height: 19px;\r\n\r\n  @media (max-width: 430px) {\r\n    width: 15px;\r\n    height: 15px;\r\n  }\r\n`;\r\n\r\nconst CurrentTime = styled.div`\r\n  border-bottom: 1px solid cyan;\r\n  box-sizing: border-box;\r\n  margin-bottom: 5px;\r\n  z-index: 1;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Restart = styled.img`\r\n  width: 24px;\r\n  cursor: pointer;\r\n\r\n  @media (max-width: 430px) {\r\n    width: 20px;\r\n  }\r\n`;\r\n\r\nconst Time30 = styled.p``;\r\n\r\nconst Time60 = styled.p``;\r\n\r\nconst Time0 = styled.p``;\r\n","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\TestResult.js",["185","186","187"],[],"import React, {useState, useEffect, useRef} from \"react\";\r\nimport {useSelector} from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction TestResult() {\r\n    const inputLog = useSelector((state) => state.inputLog);\r\n\r\n    const time = useSelector((state) => state.testTimer.time);\r\n    const timeMultiplier = 60 / time;\r\n    const totalWords = inputLog.log.length;\r\n    const completedWords = useSelector((state) =>\r\n        state.testWords.rawWords.slice(0, totalWords)\r\n    );\r\n    const totalLetters = completedWords.join(\"\").length;\r\n    const totalWrongWords = inputLog.wrongWords;\r\n    const totalCorrectWords = totalWords - totalWrongWords;\r\n    const totalErrors = inputLog.errors;\r\n\r\n    const accuracy = Math.max(\r\n        0,\r\n        Math.round((1 - (totalErrors + totalWrongWords) / totalLetters) * 100)\r\n    );\r\n    const wpm = Math.round(totalCorrectWords * timeMultiplier);\r\n\r\n    const evaluateAndSetHighScore = () => {\r\n        const highScore = JSON.parse(localStorage.getItem(\"highScore\"))\r\n        if (highScore) {\r\n            if (wpm > highScore) {\r\n                localStorage.setItem(\"highScore\", JSON.stringify(wpm))\r\n            }\r\n        } else if (wpm > 0) {\r\n            localStorage.setItem(\"highScore\", JSON.stringify(wpm))\r\n        }\r\n    }\r\n\r\n    function resultReveal(element) {\r\n        const counters = document.querySelectorAll(element);\r\n        const speed = 100;\r\n\r\n        counters.forEach((counter) => {\r\n            const animate = () => {\r\n                const value = +counter.getAttribute(\"result\");\r\n                const data = +counter.innerText;\r\n\r\n                const time = value / speed;\r\n                if (data < value) {\r\n                    counter.innerText = Math.ceil(data + time);\r\n                    // setTimeout(animate, 20 * (data / value));\r\n                    setTimeout(animate, 1 * (value / data));\r\n                } else {\r\n                    counter.innerText = value;\r\n                }\r\n            };\r\n\r\n            animate();\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        resultReveal(\".result-num\");\r\n        evaluateAndSetHighScore()\r\n        document.getElementById(\"App\").focus();\r\n    }, []);\r\n\r\n    return (\r\n        <Container tabIndex={3}>\r\n            {wpm > 0 && accuracy > 0 ? (\r\n                <ValidResult>\r\n                    <span>\r\n                        <p className=\"result-num\" result={wpm}>\r\n                            0\r\n                        </p>\r\n                            _wpm\r\n                        </span>\r\n                    <span>\r\n                        <p className=\"result-num\" result={accuracy}>\r\n                            0\r\n                        </p>\r\n                            %_accuracy\r\n                    </span>\r\n                </ValidResult>\r\n            ) : (\r\n                <InvalidResult>\r\n                    The test was invalid, try again!\r\n                </InvalidResult>\r\n\r\n            )}\r\n            {localStorage.getItem(\"highScore\") && <span\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    fontSize: \"2rem\",\r\n                    color: \"rgba(255, 255, 255, 0.4)\"\r\n                }}>\r\n                        highscore\r\n                        <p style={{fontSize: \"2.2rem\", color: \"#aaa\", marginLeft: \"1rem\"}}>\r\n                            {localStorage.getItem(\"highScore\")}\r\n                        </p>\r\n                            _wpm\r\n                    </span>}\r\n\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default TestResult;\r\n\r\nconst Container = styled.div`\r\n`;\r\n\r\nconst ValidResult = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n  p {\r\n    font-size: 3rem;\r\n    color: cyan;\r\n    margin: 0;\r\n    /* width: 3.8rem; */\r\n  }\r\n\r\n  span {\r\n    margin-top: 20px;\r\n    font-size: 2rem;\r\n    color: #aaa;\r\n    display: flex;\r\n    align-items: baseline;\r\n    margin-right: 60px;\r\n  }\r\n`;\r\n\r\nconst InvalidResult = styled.span`\r\n  display: flex;\r\n  margin-top: 50px;\r\n  color: rgba(255, 255, 255, 0.4);\r\n  font-size: 1.5rem;\r\n`;\r\n","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\Test.js",["188","189","190","191","192","193","194","195","196","197","198","199","200","201","202","203"],[],"import React, { useEffect, useState, useRef, forwardRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport words from \"./wordsData\";\r\nimport TextInput from \"./TextInput\";\r\nimport { Fade } from \"react-reveal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  newWords,\r\n  evaluateWords,\r\n  blurInput,\r\n  focusInput,\r\n  confirmWord,\r\n  firstWord,\r\n  resetWord,\r\n  inactivateCurrentWord,\r\n  resetInput,\r\n  resetInputLog,\r\n  resetTest,\r\n  updateCurrentWord,\r\n} from \"../state/action-creators/index\";\r\n\r\nfunction Test() {\r\n  const dispatch = useDispatch();\r\n  const [wordsRendered, setWordsRendered] = useState(false);\r\n  const testWords = useSelector((state) => state.testWords);\r\n  const currentWord = useSelector((state) => state.currentWord);\r\n  const inputFocused = useSelector((state) => state.inputFocused);\r\n  const enteredWord = useSelector((state) => state.enteredWord);\r\n\r\n  const testRef = useRef(null);\r\n\r\n  function loadWords() {\r\n    dispatch(newWords());\r\n    setWordsRendered(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadWords();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (currentWord.key != 0) {\r\n      dispatch(confirmWord(currentWord));\r\n    } else {\r\n      if (wordsRendered) {\r\n        dispatch(firstWord(testWords.rawWords));\r\n        dispatch(focusInput());\r\n        dispatch(resetInput());\r\n        dispatch(resetInputLog());\r\n      }\r\n    }\r\n  }, [testWords]);\r\n\r\n  function handleClickOutside(e) {\r\n    if (testRef.current && !testRef.current.contains(e.target)) {\r\n      dispatch(blurInput());\r\n    } else {\r\n      dispatch(blurInput());\r\n      dispatch(focusInput());\r\n    }\r\n  }\r\n\r\n  function handleKeyDown(e) {\r\n    if (\r\n      !inputFocused &&\r\n      !e.target.matches(\"#custom-time-input, #custom-time-input *\")\r\n    ) {\r\n      dispatch(focusInput());\r\n    }\r\n    if (e.key == \"Alt\" && inputFocused) {\r\n      dispatch(blurInput());\r\n    }\r\n    if (e.key == \"Tab\") {\r\n      e.preventDefault();\r\n    }\r\n    if ((e.shiftKey || e.ctrlKey) && (e.code == \"Enter\" || e.keyCode == 32)) {\r\n      resetTest(dispatch);\r\n    }\r\n  }\r\n\r\n  function handleResize() {\r\n    dispatch(blurInput());\r\n    dispatch(focusInput());\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!inputFocused && currentWord.key > 0) {\r\n      dispatch(inactivateCurrentWord(currentWord, enteredWord));\r\n      dispatch(confirmWord(currentWord));\r\n    } else if (inputFocused && currentWord.key > 0) {\r\n      updateCurrentWord(currentWord, enteredWord);\r\n      // dispatch(confirmWord(currentWord));\r\n    }\r\n  }, [inputFocused]);\r\n\r\n  useEffect(() => {\r\n    // document.addEventListener(\"mousedown\", handleClickOutside, true);\r\n    // document.addEventListener(\"mouseup\", handleClickOutside, true);\r\n    // document.addEventListener(\"keydown\", handleKeyDown, true);\r\n    // window.addEventListener(\"resize\", handleResize);\r\n  }, [testRef]);\r\n\r\n  return (\r\n    <Container tabIndex={3}>\r\n      {/* <Fade top duration={250}> */}\r\n      {wordsRendered && inputFocused ? <TextInput /> : \"\"}\r\n      <TestContent\r\n        id=\"TestContent\"\r\n        className={!inputFocused ? \"blur-content\" : \"\"}\r\n      >\r\n        <Underline\r\n          width={`${currentWord.width}px`}\r\n          left={`${currentWord.left}px`}\r\n          enteredWordIsWrong={enteredWord.isWrong}\r\n          enteredWordIsComplete={enteredWord.isComplete}\r\n        ></Underline>\r\n\r\n        <div\r\n          id=\"TestContentChild\"\r\n          onClick={() => dispatch(focusInput())}\r\n          ref={testRef}\r\n        >\r\n          {testWords.forHtml}\r\n        </div>\r\n      </TestContent>\r\n      {/* </Fade> */}\r\n    </Container>\r\n  );\r\n}\r\nexport default Test;\r\n\r\nconst Container = styled.div`\r\n  padding-top: 30px;\r\n`;\r\n\r\nconst TestContent = styled.div`\r\n  height: 120px;\r\n  overflow: hidden;\r\n  font-size: 1.3em;\r\n  font-family: \"Quicksand\", sans-serif;\r\n  font-weight: 500;\r\n  line-height: 40px;\r\n  /* text-align: justify;\r\n  text-justify: distribute;\r\n  text-align-last: left; */\r\n  text-align: justify;\r\n  hyphens: auto;\r\n  -webkit-hyphens: auto;\r\n  word-spacing: -0.05em;\r\n  position: relative;\r\n  #TestContentChild {\r\n    transform: translateY(120px);\r\n    transition: all 250ms ease-in-out;\r\n  }\r\n  .test-words {\r\n    padding: 3px;\r\n  }\r\n  @media (max-width: 770px) {\r\n    font-size: 1.2em;\r\n    line-height: 30px;\r\n    height: 90px;\r\n\r\n    .test-words {\r\n      padding: 1px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Underline = styled.div.attrs((props) => ({\r\n  style: {\r\n    width: props.width,\r\n    borderColor: props.enteredWordIsWrong\r\n      ? \"red\"\r\n      : props.enteredWordIsComplete\r\n      ? \"#00ffff99\"\r\n      : \"#aaa\",\r\n  },\r\n}))`\r\n  position: absolute;\r\n  z-index: 0;\r\n  height: 76px;\r\n  padding: 0;\r\n  transform: translateX(${(props) => props.left});\r\n  transition: all 150ms ease-in-out;\r\n  border-bottom: 2px solid;\r\n  @media (max-width: 770px) {\r\n    height: 60px;\r\n  }\r\n`;\r\n","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\controlsStates.js",[],[],"E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\inputLog.js",["204"],[],"import { current } from \"@reduxjs/toolkit\";\r\n\r\nconst reducer = (state = { log: [], wrongWords: 0, errors: 0 }, action) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_INPUT_LOG\":\r\n      return inputLogUpdater(\r\n        action.payload.enteredWord,\r\n        action.payload.currentWord,\r\n        state\r\n      );\r\n    case \"INCREMENT_ERROR_LOG\":\r\n      return { ...state, errors: state.errors + 1 };\r\n    case \"DECREMENT_ERROR_LOG\":\r\n      return { ...state, errors: state.errors - 1 };\r\n    case \"RESET_INPUT_LOG\":\r\n      return { log: [], wrongWords: 0, errors: 0 };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nfunction inputLogUpdater(enteredWord, currentWord, prevInputLog) {\r\n  let updatedInputLog = [];\r\n  if (currentWord.key > prevInputLog.log.length) {\r\n    updatedInputLog = prevInputLog.log;\r\n    updatedInputLog[currentWord.index] = enteredWord;\r\n  } else {\r\n    updatedInputLog = prevInputLog.log;\r\n    updatedInputLog.splice(currentWord.index, 1);\r\n  }\r\n  const wrongWords = updatedInputLog.filter((prevLog) => !prevLog.isComplete);\r\n  updatedInputLog = {\r\n    log: updatedInputLog,\r\n    wrongWords: wrongWords.length,\r\n    errors: prevInputLog.errors,\r\n  };\r\n  return updatedInputLog;\r\n}\r\n\r\nexport default reducer;\r\n","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\testOn.js",[],[],"E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\enteredWord.js",["205","206","207"],[],"import { current } from \"@reduxjs/toolkit\";\r\n\r\nconst reducer = (\r\n  state = { word: \"\", isWrong: false, isComplete: false },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"UPDATE_INPUT\":\r\n      return evaluateAndUpdateInput(\r\n        action.payload.enteredWord,\r\n        action.payload.currentWord\r\n      );\r\n    case \"RESET_INPUT\":\r\n      return { word: \"\", isWrong: false, isComplete: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n\r\nfunction evaluateAndUpdateInput(enteredWord, currentWord) {\r\n  let isWrong = false;\r\n  let isComplete = false;\r\n  let enteredWordLength = enteredWord.length;\r\n  let currentWordLength = currentWord.length;\r\n  let currentWordSliced = currentWord.slice(0, enteredWordLength);\r\n\r\n  if (enteredWordLength <= currentWordLength) {\r\n    if (enteredWord == currentWordSliced) {\r\n      isWrong = false;\r\n      isComplete = false;\r\n      if (enteredWordLength == currentWordLength) {\r\n        isComplete = true;\r\n      }\r\n    } else {\r\n      isWrong = true;\r\n      isComplete = false;\r\n    }\r\n  } else {\r\n    isWrong = true;\r\n    isComplete = false;\r\n  }\r\n\r\n  return { word: enteredWord, isWrong: isWrong, isComplete: isComplete };\r\n}\r\n","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\currentWord.js",[],[],"E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\dialogFlags.js",[],[],"E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\inputFocused.js",[],[],"E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\showResult.js",[],[],"E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\testWords.js",["208","209","210","211","212","213","214","215"],[],"import words from \"../../components/wordsData\";\r\n\r\nconst reducer = (state = { forHtml: [], rawWords: [] }, action) => {\r\n  switch (action.type) {\r\n    case \"NEW_WORDS\":\r\n      return testWordsLoader();\r\n    case \"UPDATE_CURRENT_WORD\":\r\n      return {\r\n        forHtml: updateCurrentWord(\r\n          state.forHtml,\r\n          action.payload.currentWord,\r\n          action.payload.enteredWord,\r\n          action.payload.blinkCurrentLetter,\r\n          action.payload.wordChanged\r\n        ),\r\n        rawWords: state.rawWords,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n\r\nfunction testWordsLoader() {\r\n  let j = 500;\r\n  let wordsArrayHtml = [];\r\n  let wordsArray = [];\r\n  let prevRanNum = 0;\r\n  for (let i = 0; i < j; i++) {\r\n    var r = Math.floor(Math.random() * words.length);\r\n    if (r == prevRanNum) {\r\n      r++;\r\n    }\r\n    prevRanNum = r;\r\n    const word = words[r];\r\n    let letterArray = [];\r\n    for (let l = 0; l < word.length; l++) {\r\n      letterArray.push(\r\n        <span\r\n          key={`word-${i + 1}-letter-${l + 1}`}\r\n          id={`word-${i + 1}-letter-${l + 1}`}\r\n          className={`letter${i == 0 && l == 0 ? \" current-letter\" : \"\"}`}\r\n        >\r\n          {word[l]}\r\n        </span>\r\n      );\r\n    }\r\n    wordsArrayHtml.push(\r\n      <span\r\n        className={`test-words${i == 0 ? \" current-word\" : \"\"}`}\r\n        id={`word-${i + 1}`}\r\n        key={`word-${i + 1}`}\r\n      >\r\n        {letterArray}\r\n      </span>\r\n    );\r\n    wordsArrayHtml.push(\" \");\r\n    wordsArray.push(word);\r\n  }\r\n  return { forHtml: wordsArrayHtml, rawWords: wordsArray };\r\n}\r\n\r\nfunction updateCurrentWord(\r\n  prevTestWords,\r\n  currentWord,\r\n  enteredWord,\r\n  blinkCurrentLetter,\r\n  wordChanged\r\n) {\r\n  let updatedWordList = [];\r\n  let currentWordIndex = currentWord.htmlIndex;\r\n\r\n  let enteredWordLength = enteredWord.word.length;\r\n  let currentWordLength = currentWord.word.length;\r\n\r\n  let letterArray = [];\r\n  let updatedWord;\r\n\r\n  if (currentWordLength >= enteredWordLength) {\r\n    for (let l = 0; l < currentWordLength; l++) {\r\n      letterArray.push(\r\n        <span\r\n          key={`word-${currentWord.key}-letter-${l + 1}`}\r\n          id={`word-${currentWord.key}-letter-${l + 1}`}\r\n          className={`letter ${classAssigner(\r\n            currentWord.word[l],\r\n            enteredWord.word[l],\r\n            currentWordLength,\r\n            enteredWordLength,\r\n            l,\r\n            enteredWord.isWrong,\r\n            blinkCurrentLetter,\r\n            wordChanged,\r\n            enteredWord.word == \"\"\r\n          )}`}\r\n        >\r\n          {currentWord.word[l]}\r\n        </span>\r\n      );\r\n    }\r\n  } else {\r\n    for (let l = 0; l < enteredWordLength; l++) {\r\n      letterArray.push(\r\n        <span\r\n          key={`word-${currentWord.key}-letter-${l + 1}`}\r\n          id={`word-${currentWord.key}-letter-${l + 1}`}\r\n          className={`letter ${\r\n            l + 1 <= enteredWordLength\r\n              ? currentWord.word[l] == enteredWord.word[l]\r\n                ? enteredWord.isWrong\r\n                  ? \"custom-dark-yellow\"\r\n                  : \"custom-dark-cyan\"\r\n                : \"custom-dark-red\"\r\n              : \"\"\r\n          }`}\r\n        >\r\n          {l + 1 <= currentWordLength\r\n            ? currentWord.word[l]\r\n            : enteredWord.word[l]}\r\n        </span>\r\n      );\r\n    }\r\n  }\r\n  updatedWord = (\r\n    <span className={\"test-words\"} id={currentWord.id} key={currentWord.id}>\r\n      {letterArray}\r\n    </span>\r\n  );\r\n\r\n  updatedWordList = [...prevTestWords];\r\n  updatedWordList[currentWordIndex] = updatedWord;\r\n  return updatedWordList;\r\n}\r\n\r\nfunction classAssigner(\r\n  currentLetter,\r\n  enteredLetter,\r\n  currentWordLength,\r\n  enteredWordLength,\r\n  currentLetterIndex,\r\n  enteredWordIsWrong,\r\n  blinkCurrentLetter,\r\n  wordChanged,\r\n  enteredWordIsEmpty\r\n) {\r\n  let classVal = \"letter \";\r\n\r\n  if (enteredWordLength >= currentLetterIndex + 1) {\r\n    if (currentLetter == enteredLetter) {\r\n      if (\r\n        enteredWordIsWrong ||\r\n        (wordChanged && enteredWordLength < currentWordLength)\r\n      ) {\r\n        classVal += \"custom-dark-yellow\";\r\n      } else {\r\n        classVal += \"custom-dark-cyan\";\r\n      }\r\n    } else {\r\n      classVal += \"custom-dark-red\";\r\n    }\r\n  } else if (enteredWordLength == currentLetterIndex && blinkCurrentLetter) {\r\n    classVal += \"current-letter\";\r\n  } else if (wordChanged && !enteredWordIsEmpty) {\r\n    classVal += \"custom-dark-grey\";\r\n  }\r\n  return classVal;\r\n}\r\n","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\state\\reducers\\testTimer.js",[],[],"E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\CustomTime.js",["216","217","218","219","220","221"],[],"import React, { useEffect, useState, forwardRef, useRef } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Fade } from \"react-reveal\";\r\nimport HeadShake from \"react-reveal/HeadShake\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  closeTimeInput,\r\n  updateTestTimer,\r\n  closeTimeMenu,\r\n} from \"../state/action-creators\";\r\n\r\nfunction CustomTime() {\r\n  // states and state managers\r\n\r\n  const timeInputContainer = useRef(null);\r\n\r\n  const time = useSelector((state) => state.testTimer.time);\r\n  const timeForDisplay = useSelector((state) => state.testTimer.forDisplay);\r\n  const [customTime, setTime] = useState({\r\n    minutes: parseInt(timeForDisplay.minutes),\r\n    seconds: parseInt(timeForDisplay.seconds),\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [MinuteInputError, setMinuteInputError] = useState(false);\r\n  const [SecondInputError, setSecondInputError] = useState(false);\r\n\r\n  if (MinuteInputError || SecondInputError) {\r\n    setTimeout(() => {\r\n      setMinuteInputError(false);\r\n      setSecondInputError(false);\r\n    }, 100);\r\n  }\r\n\r\n  // to ensure second's input stays zero when minutes is set to 60\r\n\r\n  useEffect(() => {\r\n    if (customTime.minutes == 60 && customTime.seconds > 0) {\r\n      setTime((prevTime) => ({ ...prevTime, seconds: 0 }));\r\n      inputError(\"seconds\");\r\n    }\r\n  }, [customTime]);\r\n  useEffect(() => {\r\n    if (timeInputContainer.current) {\r\n      timeInputContainer.current.focus();\r\n    }\r\n  }, [customTime]);\r\n\r\n  // event handlers\r\n\r\n  function inputError(t) {\r\n    switch (t) {\r\n      case \"minutes\":\r\n        setMinuteInputError(true);\r\n        break;\r\n      case \"seconds\":\r\n        setSecondInputError(true);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function valueController(m, l, v, t) {\r\n    let r;\r\n    if (v >= m && v <= l) {\r\n      r = v;\r\n    } else if (v > l) {\r\n      if (t == \"seconds\") {\r\n        r = m;\r\n        inputError(t);\r\n        timeUpdate(\r\n          { target: { value: customTime.minutes + 1 } },\r\n          \"minutes\",\r\n          \"custom\"\r\n        );\r\n      } else {\r\n        r = l;\r\n        inputError(t);\r\n      }\r\n    } else if (v < m) {\r\n      r = m;\r\n      inputError(t);\r\n    } else {\r\n      r = 0;\r\n    }\r\n    return r;\r\n  }\r\n\r\n  function timeUpdate(e, t, c) {\r\n    switch (c) {\r\n      case \"custom\":\r\n        setTime((prevTime) => ({\r\n          ...prevTime,\r\n          [t]: valueController(0, 60, parseInt(e.target.value), t),\r\n        }));\r\n        break;\r\n      case \"increment\":\r\n        setTime((prevTime) => ({\r\n          ...prevTime,\r\n          [t]: valueController(0, 60, parseInt(prevTime[t]) + 1, t),\r\n        }));\r\n        break;\r\n      case \"decrement\":\r\n        setTime((prevTime) => ({\r\n          ...prevTime,\r\n          [t]: valueController(0, 60, parseInt(prevTime[t]) - 1, t),\r\n        }));\r\n        break;\r\n      case \"reset\":\r\n        setTime((prevTime) => ({ ...prevTime, [t]: \"\" }));\r\n        break;\r\n      case \"fill\":\r\n        setTime((prevTime) => ({ ...prevTime, [t]: 0 }));\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  function keyDownHandler(event) {\r\n    switch (event.key) {\r\n      case \"Escape\":\r\n        dispatch(closeTimeInput());\r\n        break;\r\n      case \"Enter\":\r\n        dispatch(\r\n          updateTestTimer(\r\n            parseInt(customTime[\"minutes\"] * 60) +\r\n              parseInt(customTime[\"seconds\"])\r\n          )\r\n        );\r\n        dispatch(closeTimeInput());\r\n        dispatch(closeTimeMenu());\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n  return (\r\n    <Container\r\n      ref={timeInputContainer}\r\n      tabIndex=\"2\"\r\n      onKeyDown={(event) => {\r\n        keyDownHandler(event);\r\n      }}\r\n    >\r\n      <Fade bottom duration={250}>\r\n        <TimeInput id=\"CustomTimeInput\">\r\n          <CloseTimeInput\r\n            src=\"icons/close.png\"\r\n            className=\"cyan-icon\"\r\n            onClick={() => dispatch(closeTimeInput())}\r\n          />\r\n\r\n          <TimeInputFixedOptions1>\r\n            <TimeOptions\r\n              onClick={() => {\r\n                timeUpdate({ target: { value: 0 } }, \"minutes\", \"custom\");\r\n                timeUpdate({ target: { value: 0 } }, \"seconds\", \"custom\");\r\n              }}\r\n              className={time == 0 ? \"selected-time-option\" : \"\"}\r\n            >\r\n              0s\r\n            </TimeOptions>\r\n\r\n            <TimeOptions\r\n              onClick={() => {\r\n                timeUpdate({ target: { value: 0 } }, \"minutes\", \"custom\");\r\n                timeUpdate({ target: { value: 30 } }, \"seconds\", \"custom\");\r\n              }}\r\n              className={time == 30 ? \"selected-time-option\" : \"\"}\r\n            >\r\n              30s\r\n            </TimeOptions>\r\n\r\n            <TimeOptions\r\n              onClick={() => {\r\n                timeUpdate({ target: { value: 0 } }, \"minutes\", \"custom\");\r\n                timeUpdate({ target: { value: 60 } }, \"seconds\", \"custom\");\r\n              }}\r\n              className={time == 60 ? \"selected-time-option\" : \"\"}\r\n            >\r\n              60s\r\n            </TimeOptions>\r\n          </TimeInputFixedOptions1>\r\n\r\n          <TimeInputUI>\r\n            <MinuteBlock>\r\n              <img\r\n                src=\"/icons/up-arrow.png\"\r\n                className=\"grey-icon arrow-icon\"\r\n                alt=\"\"\r\n                onClick={(event) => timeUpdate(event, \"minutes\", \"increment\")}\r\n              />\r\n\r\n              <HeadShake when={MinuteInputError} duration={400}>\r\n                <MinuteInput\r\n                  type=\"number\"\r\n                  value={customTime.minutes}\r\n                  onFocus={(event) => {\r\n                    timeUpdate(event, \"minutes\", \"reset\");\r\n                  }}\r\n                  onBlur={\r\n                    customTime.minutes === null\r\n                      ? (event) => timeUpdate(event, \"minutes\", \"fill\")\r\n                      : (event) => timeUpdate(event, \"minutes\", \"custom\")\r\n                  }\r\n                  onChange={(event) => {\r\n                    timeUpdate(event, \"minutes\", \"custom\");\r\n                  }}\r\n                />\r\n              </HeadShake>\r\n\r\n              <img\r\n                src=\"/icons/down-arrow.png\"\r\n                className=\"grey-icon arrow-icon\"\r\n                alt=\"\"\r\n                onClick={(event) => timeUpdate(event, \"minutes\", \"decrement\")}\r\n              />\r\n            </MinuteBlock>\r\n\r\n            <span>m</span>\r\n            <span className=\"time-input-divider\">:</span>\r\n\r\n            <SecondBlock>\r\n              <img\r\n                src=\"/icons/up-arrow.png\"\r\n                className=\"grey-icon arrow-icon\"\r\n                alt=\"\"\r\n                onClick={(event) => timeUpdate(event, \"seconds\", \"increment\")}\r\n              />\r\n\r\n              <HeadShake when={SecondInputError} duration={400}>\r\n                <SecondInput\r\n                  type=\"number\"\r\n                  value={customTime.seconds}\r\n                  onFocus={(event) => timeUpdate(event, \"seconds\", \"reset\")}\r\n                  onBlur={\r\n                    customTime.seconds\r\n                      ? (event) => timeUpdate(event, \"seconds\", \"custom\")\r\n                      : (event) => timeUpdate(event, \"seconds\", \"fill\")\r\n                  }\r\n                  onChange={(event) => timeUpdate(event, \"seconds\", \"custom\")}\r\n                />\r\n              </HeadShake>\r\n\r\n              <img\r\n                src=\"/icons/down-arrow.png\"\r\n                className=\"grey-icon arrow-icon\"\r\n                alt=\"\"\r\n                onClick={(event) => timeUpdate(event, \"seconds\", \"decrement\")}\r\n              />\r\n            </SecondBlock>\r\n\r\n            <span>s</span>\r\n          </TimeInputUI>\r\n\r\n          <TimeInputFixedOptions2>\r\n            <TimeOptions\r\n              onClick={() => {\r\n                timeUpdate(\r\n                  { target: { value: customTime.seconds - 5 } },\r\n                  \"seconds\",\r\n                  \"custom\"\r\n                );\r\n              }}\r\n            >\r\n              -5s\r\n            </TimeOptions>\r\n            <TimeOptions\r\n              onClick={() => {\r\n                timeUpdate(\r\n                  { target: { value: customTime.seconds + 5 } },\r\n                  \"seconds\",\r\n                  \"custom\"\r\n                );\r\n              }}\r\n            >\r\n              +5s\r\n            </TimeOptions>\r\n          </TimeInputFixedOptions2>\r\n          <Uploadtime\r\n            onClick={() => {\r\n              dispatch(\r\n                updateTestTimer(\r\n                  parseInt(customTime[\"minutes\"] * 60) +\r\n                    parseInt(customTime[\"seconds\"])\r\n                )\r\n              );\r\n              dispatch(closeTimeInput());\r\n              dispatch(closeTimeMenu());\r\n            }}\r\n          >\r\n            OK\r\n          </Uploadtime>\r\n        </TimeInput>\r\n      </Fade>\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default CustomTime;\r\n\r\n// styles\r\n\r\nconst Container = styled.div`\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  z-index: 3;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  overflow: hidden;\r\n\r\n  backdrop-filter: blur(3px);\r\n  transition: all 250ms ease-in-out;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n`;\r\n\r\nconst TimeInputFixedOptions1 = styled.div`\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  width: 100%;\r\n  border-bottom: 1px solid rgba(170, 170, 170, 0.2);\r\n  border-top: 1px solid rgba(170, 170, 170, 0.2);\r\n  margin-top: 10px;\r\n  p {\r\n    cursor: pointer;\r\n    /* margin: 10px 0 10px; */\r\n    margin: 5px 0;\r\n  }\r\n  .selected-time-option {\r\n    color: cyan;\r\n  }\r\n  @media (max-width: 430px) {\r\n    p {\r\n      font-size: 0.8em;\r\n    }\r\n  }\r\n`;\r\n\r\nconst TimeInputFixedOptions2 = styled(TimeInputFixedOptions1)`\r\n  margin-top: 0;\r\n  justify-content: space-evenly;\r\n`\r\n\r\nconst TimeOptions = styled.p`\r\n`;\r\n\r\nconst TimeInput = styled.div`\r\n  position: relative;\r\n  background-color: #17171a;\r\n  max-width: 50vw;\r\n  width: 300px;\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  box-shadow: -1px 10px 23px 0px rgba(0, 0, 0, 0.51);\r\n  -webkit-box-shadow: -1px 10px 23px 0px rgba(0, 0, 0, 0.51);\r\n  -moz-box-shadow: -1px 10px 23px 0px rgba(0, 0, 0, 0.51);\r\n`;\r\n\r\nconst CloseTimeInput = styled.img`\r\n  width: 12px;\r\n  margin-left: auto;\r\n  cursor: pointer;\r\n  padding: 5px;\r\n`;\r\nconst TimeInputUI = styled.div`\r\n  width: 100%;\r\n  padding: 10px 0px;\r\n\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  span {\r\n    margin: 0 0 0 10px;\r\n    font-size: 1.5em;\r\n  }\r\n\r\n  .arrow-icon {\r\n    width: 22px;\r\n  }\r\n\r\n  .time-input-divider {\r\n    margin: 0 10px;\r\n    color: #00ffff99;\r\n    font-size: 1.5em;\r\n  }\r\n\r\n  img {\r\n    cursor: pointer;\r\n  }\r\n\r\n  input {\r\n    background-color: transparent;\r\n    border: none;\r\n    color: #aaaaaa;\r\n    font-size: 1.5em;\r\n    text-align: center;\r\n    width: 2ch;\r\n  }\r\n  input:focus {\r\n    outline: none;\r\n  }\r\n  input::-webkit-outer-spin-button,\r\n  input::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n  }\r\n  input[type=\"number\"] {\r\n    -moz-appearance: textfield;\r\n  }\r\n\r\n  @media (max-width: 430px) {\r\n    span {\r\n      font-size: 1em;\r\n    }\r\n    input {\r\n      font-size: 1em;\r\n    }\r\n    .arrow-icon {\r\n      width: 18px;\r\n    }\r\n  }\r\n`;\r\nconst MinuteBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst MinuteInput = styled.input``;\r\n\r\nconst SecondBlock = styled(MinuteBlock)``;\r\n\r\nconst SecondInput = styled(MinuteInput)``;\r\n\r\nconst Uploadtime = styled.p`\r\n  left: auto;\r\n  opacity: 0.75;\r\n  color: cyan;\r\n  cursor: pointer;\r\n  margin: 10px 0px;\r\n  @media (max-width: 430px) {\r\n    margin: 10px;\r\n  }\r\n`;\r\n","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\TextInput.js",["222","223","224","225","226","227","228","229","230","231","232","233","234","235","236"],[],"import React, {useEffect, useRef,} from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {\r\n    nextWord,\r\n    prevWord,\r\n    updateInput,\r\n    resetInput,\r\n    blurInput,\r\n    updateCurrentWord,\r\n    updateAndChangeCurrentWord,\r\n    updateInputLog,\r\n    switchTestOn,\r\n    incrementErrorLog,\r\n    decrementErrorLog,\r\n\r\n} from \"../state/action-creators/index\";\r\n\r\nfunction TextInput() {\r\n    const currentWord = useSelector((state) => state.currentWord);\r\n    const time = useSelector((state) => state.testTimer.time);\r\n    const enteredWord = useSelector((state) => state.enteredWord);\r\n    const inputLog = useSelector((state) => state.inputLog.log);\r\n    const errorLog = useSelector((state) => state.inputLog.errors);\r\n    const testWords = useSelector((state) => state.testWords);\r\n    const testOn = useSelector((state) => state.testOn);\r\n    const inputFocused = useSelector((state) => state.inputFocused);\r\n    const dispatch = useDispatch();\r\n\r\n    const inputRef = useRef(null);\r\n    const testContentScrollerCount = useRef(0);\r\n\r\n    useEffect(() => {\r\n        if (currentWord.key > 0) {\r\n            if (inputRef.current && document.activeElement != inputRef.current) {\r\n                inputRef.current.focus();\r\n            }\r\n            let currentLineHeight = parseInt(\r\n                window\r\n                    .getComputedStyle(document.getElementById(\"TestContent\"))\r\n                    .getPropertyValue(\"line-height\")\r\n            );\r\n\r\n            if (currentWord.top == 0) {\r\n                testContentScrollerCount.current = 0;\r\n                document.getElementById(\r\n                    \"TestContentChild\"\r\n                ).style.transform = `translateY(${currentLineHeight}px)`;\r\n            } else if (\r\n                currentWord.top -\r\n                currentLineHeight * testContentScrollerCount.current !=\r\n                0\r\n            ) {\r\n                testContentScroller();\r\n            }\r\n\r\n            if (currentWord.key <= inputLog.length && enteredWord.word == \"\") {\r\n                dispatch(\r\n                    updateInput(inputLog[currentWord.index].word, currentWord.word)\r\n                );\r\n                if (inputLog[currentWord.index].isWrong) {\r\n                    dispatch(decrementErrorLog());\r\n                }\r\n                dispatch(updateInputLog(currentWord, enteredWord));\r\n            }\r\n        }\r\n    }, [currentWord]);\r\n\r\n    useEffect(() => {\r\n        if (currentWord.key > 0) {\r\n            dispatch(updateCurrentWord(currentWord, enteredWord));\r\n        }\r\n    }, [enteredWord]);\r\n\r\n    useEffect(() => {\r\n        if (enteredWord.isWrong) {\r\n            dispatch(incrementErrorLog());\r\n        }\r\n    }, [enteredWord.isWrong]);\r\n\r\n    function testContentScroller() {\r\n        let currentLineHeight = parseInt(\r\n            window\r\n                .getComputedStyle(document.getElementById(\"TestContent\"))\r\n                .getPropertyValue(\"line-height\")\r\n        );\r\n\r\n        let topOffsetFactor =\r\n            (currentWord.top - currentLineHeight * testContentScrollerCount.current) /\r\n            currentLineHeight;\r\n\r\n        testContentScrollerCount.current =\r\n            testContentScrollerCount.current + topOffsetFactor;\r\n\r\n        document.getElementById(\"TestContentChild\").style.transform = `translateY(${\r\n            -1 *\r\n            (currentLineHeight * testContentScrollerCount.current - currentLineHeight)\r\n        }px)`;\r\n    }\r\n\r\n    function textInputChangeHandler(e) {\r\n        // let enteredValue = String(e.target.value.replace(/\\s/g, \"\"));\r\n        let enteredValue = e.target.value;\r\n        if (enteredValue.indexOf(\" \") > 0) {\r\n            dispatch(updateAndChangeCurrentWord(currentWord, enteredWord));\r\n            dispatch(updateInputLog(currentWord, enteredWord));\r\n            dispatch(nextWord(testWords.rawWords));\r\n            dispatch(resetInput());\r\n        } else if (enteredValue != \" \") {\r\n            dispatch(updateInput(enteredValue, currentWord.word));\r\n            if (!testOn && currentWord.key == 1 && enteredValue != \"\" && time != 0) {\r\n                dispatch(switchTestOn());\r\n            }\r\n        } else {\r\n            resetInput();\r\n        }\r\n    }\r\n\r\n    function keyDownHandler(e) {\r\n        let keyClicked = e.nativeEvent.code;\r\n        let enteredValue = String(e.target.value.replace(/\\s/g, \"\"));\r\n\r\n        if (\r\n            keyClicked == \"Backspace\" &&\r\n            enteredValue == \"\" &&\r\n            currentWord.key > 1 &&\r\n            !inputLog[currentWord.index - 1].isComplete\r\n        ) {\r\n            dispatch(updateAndChangeCurrentWord(currentWord, enteredWord));\r\n            dispatch(prevWord(testWords.rawWords));\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <input\r\n                ref={inputRef}\r\n                id=\"textInput\"\r\n                autoFocus={true}\r\n                autoCapitalize=\"off\"\r\n                autoComplete=\"off\"\r\n                spellCheck={false}\r\n                maxLength=\"15\"\r\n                value={enteredWord.word}\r\n                onKeyDown={(e) => keyDownHandler(e)}\r\n                onChange={(e) => textInputChangeHandler(e)}\r\n                onBlur={() => {\r\n                    dispatch(blurInput());\r\n                }}\r\n            ></input>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default TextInput;\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  position: absolute;\r\n\r\n  input {\r\n    background-color: transparent;\r\n    border: none;\r\n    cursor: default;\r\n    border-bottom: \"none\";\r\n    caret-color: transparent !important;\r\n    font-size: 1.2em;\r\n    font-family: \"Quicksand\", sans-serif;\r\n    font-weight: 500;\r\n    text-align: center;\r\n    color: transparent;\r\n    transition: all 150ms ease-in-out;\r\n\r\n    &:focus {\r\n      outline: none;\r\n    }\r\n  }\r\n`;\r\n","E:\\GitHub\\Apex Typer\\ApexTyperWeb-LegacyVersion\\src\\components\\wordsData.js",["237"],[],"export default [\r\n    \"when\",\r\n    \"into\",\r\n    \"not\",\r\n    \"set\",\r\n    \"with\",\r\n    \"this\",\r\n    \"long\",\r\n    \"present\",\r\n    \"face\",\r\n    \"follow\",\r\n    \"want\",\r\n    \"course\",\r\n    \"about\",\r\n    \"little\",\r\n    \"number\",\r\n    \"tell\",\r\n    \"in\",\r\n    \"after\",\r\n    \"way\",\r\n    \"we\",\r\n    \"on\",\r\n    \"how\",\r\n    \"then\",\r\n    \"other\",\r\n    \"year\",\r\n    \"he\",\r\n    \"another\",\r\n    \"child\",\r\n    \"under\",\r\n    \"use\",\r\n    \"before\",\r\n    \"people\",\r\n    \"at\",\r\n    \"up\",\r\n    \"stand\",\r\n    \"place\",\r\n    \"no\",\r\n    \"as\",\r\n    \"word\",\r\n    \"now\",\r\n    \"order\",\r\n    \"by\",\r\n    \"of\",\r\n    \"where\",\r\n    \"never\",\r\n    \"have\",\r\n    \"see\",\r\n    \"program\",\r\n    \"between\",\r\n    \"know\",\r\n    \"through\",\r\n    \"so\",\r\n    \"again\",\r\n    \"time\",\r\n    \"public\",\r\n    \"and\",\r\n    \"drink\",\r\n    \"think\",\r\n    \"these\",\r\n    \"last\",\r\n    \"line\",\r\n    \"may\",\r\n    \"plan\",\r\n    \"or\",\r\n    \"few\",\r\n    \"turn\",\r\n    \"mother\",\r\n    \"grow\",\r\n    \"eye\",\r\n    \"ask\",\r\n    \"his\",\r\n    \"it\",\r\n    \"could\",\r\n    \"is\",\r\n    \"often\",\r\n    \"important\",\r\n    \"who\",\r\n    \"some\",\r\n    \"story\",\r\n    \"head\",\r\n    \"does\",\r\n    \"small\",\r\n    \"such\",\r\n    \"they\",\r\n    \"thing\",\r\n    \"here\",\r\n    \"away\",\r\n    \"page\",\r\n    \"our\",\r\n    \"might\",\r\n    \"should\",\r\n    \"always\",\r\n    \"spell\",\r\n    \"because\",\r\n    \"mean\",\r\n    \"her\",\r\n    \"that\",\r\n    \"part\",\r\n    \"write\",\r\n    \"those\",\r\n    \"both\",\r\n    \"play\",\r\n    \"only\",\r\n    \"get\",\r\n    \"one\",\r\n    \"govern\",\r\n    \"same\",\r\n    \"become\",\r\n    \"any\",\r\n    \"black\",\r\n    \"leave\",\r\n    \"interest\",\r\n    \"would\",\r\n    \"while\",\r\n    \"well\",\r\n    \"form\",\r\n    \"home\",\r\n    \"be\",\r\n    \"keep\",\r\n    \"even\",\r\n    \"open\",\r\n    \"without\",\r\n    \"hold\",\r\n    \"good\",\r\n    \"more\",\r\n    \"however\",\r\n    \"most\",\r\n    \"give\",\r\n    \"house\",\r\n    \"still\",\r\n    \"group\",\r\n    \"call\",\r\n    \"over\",\r\n    \"than\",\r\n    \"point\",\r\n    \"must\",\r\n    \"during\",\r\n    \"run\",\r\n    \"all\",\r\n    \"much\",\r\n    \"doing\",\r\n    \"need\",\r\n    \"fact\",\r\n    \"system\",\r\n    \"high\",\r\n    \"seem\",\r\n    \"out\",\r\n    \"if\",\r\n    \"you\",\r\n    \"increase\",\r\n    \"what\",\r\n    \"but\",\r\n    \"do\",\r\n    \"around\",\r\n    \"consider\",\r\n    \"own\",\r\n    \"back\",\r\n    \"come\",\r\n    \"until\",\r\n    \"men\",\r\n    \"been\",\r\n    \"soon\",\r\n    \"talk\",\r\n    \"begin\",\r\n    \"large\",\r\n    \"example\",\r\n    \"their\",\r\n    \"city\",\r\n    \"say\",\r\n    \"man\",\r\n    \"him\",\r\n    \"along\",\r\n    \"answer\",\r\n    \"walk\",\r\n    \"quick\",\r\n    \"took\",\r\n    \"food\",\r\n    \"water\",\r\n    \"go\",\r\n    \"made\",\r\n    \"white\",\r\n    \"look\",\r\n    \"my\",\r\n    \"far\",\r\n    \"cut\",\r\n    \"sea\",\r\n    \"river\",\r\n    \"try\",\r\n    \"night\",\r\n    \"every\",\r\n    \"change\",\r\n    \"right\",\r\n    \"new\",\r\n    \"day\",\r\n    \"nation\",\r\n    \"can\",\r\n    \"take\",\r\n    \"state\",\r\n    \"since\",\r\n    \"the\",\r\n    \"there\",\r\n    \"make\",\r\n    \"went\",\r\n    \"to\",\r\n    \"also\",\r\n    \"old\",\r\n    \"fall\",\r\n    \"will\",\r\n    \"general\",\r\n    \"early\",\r\n    \"world\",\r\n    \"movie\",\r\n    \"down\",\r\n    \"which\",\r\n    \"hand\",\r\n  ];\r\n  ",{"ruleId":"238","severity":1,"message":"239","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":25},{"ruleId":"242","severity":1,"message":"243","line":77,"column":21,"nodeType":"244","messageId":"245","endLine":77,"endColumn":23},{"ruleId":"242","severity":1,"message":"243","line":81,"column":19,"nodeType":"244","messageId":"245","endLine":81,"endColumn":21},{"ruleId":"242","severity":1,"message":"243","line":81,"column":41,"nodeType":"244","messageId":"245","endLine":81,"endColumn":43},{"ruleId":"242","severity":1,"message":"243","line":86,"column":19,"nodeType":"244","messageId":"245","endLine":86,"endColumn":21},{"ruleId":"242","severity":1,"message":"243","line":86,"column":47,"nodeType":"244","messageId":"245","endLine":86,"endColumn":49},{"ruleId":"242","severity":1,"message":"243","line":91,"column":37,"nodeType":"244","messageId":"245","endLine":91,"endColumn":39},{"ruleId":"242","severity":1,"message":"246","line":103,"column":27,"nodeType":"244","messageId":"245","endLine":103,"endColumn":29},{"ruleId":"247","severity":1,"message":"248","line":116,"column":6,"nodeType":"249","endLine":116,"endColumn":8,"suggestions":"250"},{"ruleId":"238","severity":1,"message":"251","line":1,"column":23,"nodeType":"240","messageId":"241","endLine":1,"endColumn":38},{"ruleId":"238","severity":1,"message":"239","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":25},{"ruleId":"238","severity":1,"message":"252","line":4,"column":10,"nodeType":"240","messageId":"241","endLine":4,"endColumn":15},{"ruleId":"238","severity":1,"message":"253","line":5,"column":10,"nodeType":"240","messageId":"241","endLine":5,"endColumn":14},{"ruleId":"238","severity":1,"message":"254","line":6,"column":8,"nodeType":"240","messageId":"241","endLine":6,"endColumn":18},{"ruleId":"238","severity":1,"message":"255","line":7,"column":8,"nodeType":"240","messageId":"241","endLine":7,"endColumn":12},{"ruleId":"238","severity":1,"message":"256","line":8,"column":8,"nodeType":"240","messageId":"241","endLine":8,"endColumn":13},{"ruleId":"238","severity":1,"message":"257","line":10,"column":10,"nodeType":"240","messageId":"241","endLine":10,"endColumn":26},{"ruleId":"238","severity":1,"message":"258","line":12,"column":3,"nodeType":"240","messageId":"241","endLine":12,"endColumn":13},{"ruleId":"238","severity":1,"message":"259","line":13,"column":3,"nodeType":"240","messageId":"241","endLine":13,"endColumn":16},{"ruleId":"238","severity":1,"message":"260","line":15,"column":3,"nodeType":"240","messageId":"241","endLine":15,"endColumn":12},{"ruleId":"247","severity":1,"message":"261","line":23,"column":6,"nodeType":"249","endLine":23,"endColumn":8,"suggestions":"262"},{"ruleId":"238","severity":1,"message":"263","line":25,"column":9,"nodeType":"240","messageId":"241","endLine":25,"endColumn":21},{"ruleId":"238","severity":1,"message":"264","line":27,"column":12,"nodeType":"240","messageId":"241","endLine":27,"endColumn":30},{"ruleId":"238","severity":1,"message":"265","line":53,"column":7,"nodeType":"240","messageId":"241","endLine":53,"endColumn":22},{"ruleId":"238","severity":1,"message":"266","line":105,"column":7,"nodeType":"240","messageId":"241","endLine":105,"endColumn":20},{"ruleId":"238","severity":1,"message":"267","line":119,"column":7,"nodeType":"240","messageId":"241","endLine":119,"endColumn":29},{"ruleId":"238","severity":1,"message":"268","line":127,"column":7,"nodeType":"240","messageId":"241","endLine":127,"endColumn":18},{"ruleId":"238","severity":1,"message":"269","line":133,"column":7,"nodeType":"240","messageId":"241","endLine":133,"endColumn":27},{"ruleId":"238","severity":1,"message":"239","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":25},{"ruleId":"238","severity":1,"message":"270","line":1,"column":27,"nodeType":"240","messageId":"241","endLine":1,"endColumn":36},{"ruleId":"238","severity":1,"message":"271","line":1,"column":38,"nodeType":"240","messageId":"241","endLine":1,"endColumn":44},{"ruleId":"238","severity":1,"message":"272","line":2,"column":23,"nodeType":"240","messageId":"241","endLine":2,"endColumn":34},{"ruleId":"273","severity":1,"message":"274","line":15,"column":7,"nodeType":"275","messageId":"276","endLine":19,"endColumn":8,"fix":"277"},{"ruleId":"238","severity":1,"message":"239","line":1,"column":17,"nodeType":"240","messageId":"241","endLine":1,"endColumn":25},{"ruleId":"238","severity":1,"message":"278","line":21,"column":9,"nodeType":"240","messageId":"241","endLine":21,"endColumn":20},{"ruleId":"242","severity":1,"message":"243","line":61,"column":18,"nodeType":"244","messageId":"245","endLine":61,"endColumn":20},{"ruleId":"247","severity":1,"message":"279","line":66,"column":6,"nodeType":"249","endLine":66,"endColumn":16,"suggestions":"280"},{"ruleId":"247","severity":1,"message":"261","line":76,"column":6,"nodeType":"249","endLine":76,"endColumn":14,"suggestions":"281"},{"ruleId":"242","severity":1,"message":"243","line":110,"column":39,"nodeType":"244","messageId":"245","endLine":110,"endColumn":41},{"ruleId":"242","severity":1,"message":"243","line":117,"column":39,"nodeType":"244","messageId":"245","endLine":117,"endColumn":41},{"ruleId":"242","severity":1,"message":"243","line":124,"column":39,"nodeType":"244","messageId":"245","endLine":124,"endColumn":41},{"ruleId":"242","severity":1,"message":"246","line":133,"column":30,"nodeType":"244","messageId":"245","endLine":133,"endColumn":32},{"ruleId":"242","severity":1,"message":"246","line":133,"column":43,"nodeType":"244","messageId":"245","endLine":133,"endColumn":45},{"ruleId":"242","severity":1,"message":"246","line":133,"column":57,"nodeType":"244","messageId":"245","endLine":133,"endColumn":59},{"ruleId":"238","severity":1,"message":"239","line":1,"column":16,"nodeType":"240","messageId":"241","endLine":1,"endColumn":24},{"ruleId":"238","severity":1,"message":"271","line":1,"column":37,"nodeType":"240","messageId":"241","endLine":1,"endColumn":43},{"ruleId":"247","severity":1,"message":"282","line":63,"column":8,"nodeType":"249","endLine":63,"endColumn":10,"suggestions":"283"},{"ruleId":"238","severity":1,"message":"284","line":1,"column":46,"nodeType":"240","messageId":"241","endLine":1,"endColumn":56},{"ruleId":"238","severity":1,"message":"285","line":3,"column":8,"nodeType":"240","messageId":"241","endLine":3,"endColumn":13},{"ruleId":"238","severity":1,"message":"255","line":5,"column":10,"nodeType":"240","messageId":"241","endLine":5,"endColumn":14},{"ruleId":"238","severity":1,"message":"286","line":9,"column":3,"nodeType":"240","messageId":"241","endLine":9,"endColumn":16},{"ruleId":"238","severity":1,"message":"260","line":14,"column":3,"nodeType":"240","messageId":"241","endLine":14,"endColumn":12},{"ruleId":"247","severity":1,"message":"287","line":39,"column":6,"nodeType":"249","endLine":39,"endColumn":8,"suggestions":"288"},{"ruleId":"242","severity":1,"message":"246","line":42,"column":25,"nodeType":"244","messageId":"245","endLine":42,"endColumn":27},{"ruleId":"247","severity":1,"message":"289","line":52,"column":6,"nodeType":"249","endLine":52,"endColumn":17,"suggestions":"290"},{"ruleId":"238","severity":1,"message":"291","line":54,"column":12,"nodeType":"240","messageId":"241","endLine":54,"endColumn":30},{"ruleId":"238","severity":1,"message":"292","line":63,"column":12,"nodeType":"240","messageId":"241","endLine":63,"endColumn":25},{"ruleId":"242","severity":1,"message":"243","line":70,"column":15,"nodeType":"244","messageId":"245","endLine":70,"endColumn":17},{"ruleId":"242","severity":1,"message":"243","line":73,"column":15,"nodeType":"244","messageId":"245","endLine":73,"endColumn":17},{"ruleId":"242","severity":1,"message":"243","line":76,"column":46,"nodeType":"244","messageId":"245","endLine":76,"endColumn":48},{"ruleId":"242","severity":1,"message":"243","line":76,"column":70,"nodeType":"244","messageId":"245","endLine":76,"endColumn":72},{"ruleId":"238","severity":1,"message":"293","line":81,"column":12,"nodeType":"240","messageId":"241","endLine":81,"endColumn":24},{"ruleId":"247","severity":1,"message":"294","line":94,"column":6,"nodeType":"249","endLine":94,"endColumn":20,"suggestions":"295"},{"ruleId":"238","severity":1,"message":"296","line":1,"column":10,"nodeType":"240","messageId":"241","endLine":1,"endColumn":17},{"ruleId":"238","severity":1,"message":"296","line":1,"column":10,"nodeType":"240","messageId":"241","endLine":1,"endColumn":17},{"ruleId":"242","severity":1,"message":"243","line":30,"column":21,"nodeType":"244","messageId":"245","endLine":30,"endColumn":23},{"ruleId":"242","severity":1,"message":"243","line":33,"column":29,"nodeType":"244","messageId":"245","endLine":33,"endColumn":31},{"ruleId":"242","severity":1,"message":"243","line":32,"column":11,"nodeType":"244","messageId":"245","endLine":32,"endColumn":13},{"ruleId":"242","severity":1,"message":"243","line":43,"column":33,"nodeType":"244","messageId":"245","endLine":43,"endColumn":35},{"ruleId":"242","severity":1,"message":"243","line":43,"column":43,"nodeType":"244","messageId":"245","endLine":43,"endColumn":45},{"ruleId":"242","severity":1,"message":"243","line":51,"column":35,"nodeType":"244","messageId":"245","endLine":51,"endColumn":37},{"ruleId":"242","severity":1,"message":"243","line":95,"column":30,"nodeType":"244","messageId":"245","endLine":95,"endColumn":32},{"ruleId":"242","severity":1,"message":"243","line":110,"column":37,"nodeType":"244","messageId":"245","endLine":110,"endColumn":39},{"ruleId":"242","severity":1,"message":"243","line":150,"column":23,"nodeType":"244","messageId":"245","endLine":150,"endColumn":25},{"ruleId":"242","severity":1,"message":"243","line":162,"column":32,"nodeType":"244","messageId":"245","endLine":162,"endColumn":34},{"ruleId":"238","severity":1,"message":"284","line":1,"column":38,"nodeType":"240","messageId":"241","endLine":1,"endColumn":48},{"ruleId":"242","severity":1,"message":"243","line":39,"column":28,"nodeType":"244","messageId":"245","endLine":39,"endColumn":30},{"ruleId":"242","severity":1,"message":"243","line":70,"column":13,"nodeType":"244","messageId":"245","endLine":70,"endColumn":15},{"ruleId":"242","severity":1,"message":"243","line":163,"column":31,"nodeType":"244","messageId":"245","endLine":163,"endColumn":33},{"ruleId":"242","severity":1,"message":"243","line":173,"column":31,"nodeType":"244","messageId":"245","endLine":173,"endColumn":33},{"ruleId":"242","severity":1,"message":"243","line":183,"column":31,"nodeType":"244","messageId":"245","endLine":183,"endColumn":33},{"ruleId":"238","severity":1,"message":"297","line":24,"column":11,"nodeType":"240","messageId":"241","endLine":24,"endColumn":19},{"ruleId":"238","severity":1,"message":"298","line":27,"column":11,"nodeType":"240","messageId":"241","endLine":27,"endColumn":23},{"ruleId":"242","severity":1,"message":"246","line":35,"column":60,"nodeType":"244","messageId":"245","endLine":35,"endColumn":62},{"ruleId":"242","severity":1,"message":"243","line":44,"column":33,"nodeType":"244","messageId":"245","endLine":44,"endColumn":35},{"ruleId":"242","severity":1,"message":"246","line":51,"column":70,"nodeType":"244","messageId":"245","endLine":51,"endColumn":72},{"ruleId":"242","severity":1,"message":"243","line":57,"column":72,"nodeType":"244","messageId":"245","endLine":57,"endColumn":74},{"ruleId":"247","severity":1,"message":"299","line":67,"column":8,"nodeType":"249","endLine":67,"endColumn":21,"suggestions":"300"},{"ruleId":"247","severity":1,"message":"301","line":73,"column":8,"nodeType":"249","endLine":73,"endColumn":21,"suggestions":"302"},{"ruleId":"247","severity":1,"message":"261","line":79,"column":8,"nodeType":"249","endLine":79,"endColumn":29,"suggestions":"303"},{"ruleId":"242","severity":1,"message":"246","line":109,"column":33,"nodeType":"244","messageId":"245","endLine":109,"endColumn":35},{"ruleId":"242","severity":1,"message":"243","line":111,"column":44,"nodeType":"244","messageId":"245","endLine":111,"endColumn":46},{"ruleId":"242","severity":1,"message":"246","line":111,"column":65,"nodeType":"244","messageId":"245","endLine":111,"endColumn":67},{"ruleId":"242","severity":1,"message":"246","line":111,"column":79,"nodeType":"244","messageId":"245","endLine":111,"endColumn":81},{"ruleId":"242","severity":1,"message":"243","line":124,"column":24,"nodeType":"244","messageId":"245","endLine":124,"endColumn":26},{"ruleId":"242","severity":1,"message":"243","line":125,"column":26,"nodeType":"244","messageId":"245","endLine":125,"endColumn":28},{"ruleId":"304","severity":1,"message":"305","line":1,"column":1,"nodeType":"306","endLine":217,"endColumn":5},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleResize'. Either include it or remove the dependency array.","ArrayExpression",["307"],"'applyMiddleware' is defined but never used.","'alpha' is defined but never used.","'pink' is defined but never used.","'withReveal' is defined but never used.","'Fade' is defined but never used.","'Pulse' is defined but never used.","'FormControlLabel' is defined but never used.","'resetInput' is defined but never used.","'resetLiveTime' is defined but never used.","'resetWord' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["308"],"'settingsData' is assigned a value but never used.","'optionClickHandler' is defined but never used.","'Android12Switch' is assigned a value but never used.","'SettingsBlock' is assigned a value but never used.","'MainSettingsBlockChild' is assigned a value but never used.","'MainHeading' is assigned a value but never used.","'SettingsToggleOption' is assigned a value but never used.","'useEffect' is defined but never used.","'useRef' is defined but never used.","'useDispatch' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"309","text":"310"},"'timeMenuRef' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'testOn'. Either include them or remove the dependency array.",["311"],["312"],"React Hook useEffect has a missing dependency: 'evaluateAndSetHighScore'. Either include it or remove the dependency array.",["313"],"'forwardRef' is defined but never used.","'words' is defined but never used.","'evaluateWords' is defined but never used.","React Hook useEffect has a missing dependency: 'loadWords'. Either include it or remove the dependency array.",["314"],"React Hook useEffect has missing dependencies: 'currentWord', 'dispatch', and 'wordsRendered'. Either include them or remove the dependency array.",["315"],"'handleClickOutside' is defined but never used.","'handleKeyDown' is defined but never used.","'handleResize' is defined but never used.","React Hook useEffect has missing dependencies: 'currentWord', 'dispatch', and 'enteredWord'. Either include them or remove the dependency array.",["316"],"'current' is defined but never used.","'errorLog' is assigned a value but never used.","'inputFocused' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'enteredWord', 'inputLog', and 'testContentScroller'. Either include them or remove the dependency array.",["317"],"React Hook useEffect has missing dependencies: 'currentWord' and 'dispatch'. Either include them or remove the dependency array.",["318"],["319"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",{"desc":"320","fix":"321"},{"desc":"322","fix":"323"},[527,527]," rel=\"noreferrer\"",{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"336","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},"Update the dependencies array to be: [handleResize]",{"range":"342","text":"343"},"Update the dependencies array to be: [dispatch]",{"range":"344","text":"345"},"Update the dependencies array to be: [dispatch, liveTime, testOn]",{"range":"346","text":"347"},"Update the dependencies array to be: [dispatch, testOn]",{"range":"348","text":"349"},"Update the dependencies array to be: [evaluateAndSetHighScore]",{"range":"350","text":"351"},"Update the dependencies array to be: [loadWords]",{"range":"352","text":"353"},"Update the dependencies array to be: [currentWord, dispatch, testWords, wordsRendered]",{"range":"354","text":"355"},"Update the dependencies array to be: [currentWord, dispatch, enteredWord, inputFocused]",{"range":"356","text":"357"},"Update the dependencies array to be: [currentWord, dispatch, enteredWord, inputLog, testContentScroller]",{"range":"358","text":"359"},"Update the dependencies array to be: [currentWord, dispatch, enteredWord]",{"range":"360","text":"361"},"Update the dependencies array to be: [dispatch, enteredWord.isWrong]",{"range":"362","text":"363"},[3372,3374],"[handleResize]",[734,736],"[dispatch]",[1809,1819],"[dispatch, liveTime, testOn]",[2050,2058],"[dispatch, testOn]",[2201,2203],"[evaluateAndSetHighScore]",[1082,1084],"[loadWords]",[1402,1413],"[currentWord, dispatch, testWords, wordsRendered]",[2522,2536],"[currentWord, dispatch, enteredWord, inputFocused]",[2452,2465],"[currentWord, dispatch, enteredWord, inputLog, testContentScroller]",[2616,2629],"[currentWord, dispatch, enteredWord]",[2756,2777],"[dispatch, enteredWord.isWrong]"]